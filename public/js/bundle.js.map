{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*!\n * Bootstrap v3.3.6 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\nif (\"undefined\" == typeof jQuery) throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function (a) {\n  \"use strict\";\n  var b = a.fn.jquery.split(\" \")[0].split(\".\");if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] > 2) throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\");\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b() {\n    var a = document.createElement(\"bootstrap\"),\n        b = { WebkitTransition: \"webkitTransitionEnd\", MozTransition: \"transitionend\", OTransition: \"oTransitionEnd otransitionend\", transition: \"transitionend\" };for (var c in b) {\n      if (void 0 !== a.style[c]) return { end: b[c] };\n    }return !1;\n  }a.fn.emulateTransitionEnd = function (b) {\n    var c = !1,\n        d = this;a(this).one(\"bsTransitionEnd\", function () {\n      c = !0;\n    });var e = function e() {\n      c || a(d).trigger(a.support.transition.end);\n    };return setTimeout(e, b), this;\n  }, a(function () {\n    a.support.transition = b(), a.support.transition && (a.event.special.bsTransitionEnd = { bindType: a.support.transition.end, delegateType: a.support.transition.end, handle: function handle(b) {\n        return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0;\n      } });\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var c = a(this),\n          e = c.data(\"bs.alert\");e || c.data(\"bs.alert\", e = new d(this)), \"string\" == typeof b && e[b].call(c);\n    });\n  }var c = '[data-dismiss=\"alert\"]',\n      d = function d(b) {\n    a(b).on(\"click\", c, this.close);\n  };d.VERSION = \"3.3.6\", d.TRANSITION_DURATION = 150, d.prototype.close = function (b) {\n    function c() {\n      g.detach().trigger(\"closed.bs.alert\").remove();\n    }var e = a(this),\n        f = e.attr(\"data-target\");f || (f = e.attr(\"href\"), f = f && f.replace(/.*(?=#[^\\s]*$)/, \"\"));var g = a(f);b && b.preventDefault(), g.length || (g = e.closest(\".alert\")), g.trigger(b = a.Event(\"close.bs.alert\")), b.isDefaultPrevented() || (g.removeClass(\"in\"), a.support.transition && g.hasClass(\"fade\") ? g.one(\"bsTransitionEnd\", c).emulateTransitionEnd(d.TRANSITION_DURATION) : c());\n  };var e = a.fn.alert;a.fn.alert = b, a.fn.alert.Constructor = d, a.fn.alert.noConflict = function () {\n    return a.fn.alert = e, this;\n  }, a(document).on(\"click.bs.alert.data-api\", c, d.prototype.close);\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.button\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;e || d.data(\"bs.button\", e = new c(this, f)), \"toggle\" == b ? e.toggle() : b && e.setState(b);\n    });\n  }var c = function c(b, d) {\n    this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.isLoading = !1;\n  };c.VERSION = \"3.3.6\", c.DEFAULTS = { loadingText: \"loading...\" }, c.prototype.setState = function (b) {\n    var c = \"disabled\",\n        d = this.$element,\n        e = d.is(\"input\") ? \"val\" : \"html\",\n        f = d.data();b += \"Text\", null == f.resetText && d.data(\"resetText\", d[e]()), setTimeout(a.proxy(function () {\n      d[e](null == f[b] ? this.options[b] : f[b]), \"loadingText\" == b ? (this.isLoading = !0, d.addClass(c).attr(c, c)) : this.isLoading && (this.isLoading = !1, d.removeClass(c).removeAttr(c));\n    }, this), 0);\n  }, c.prototype.toggle = function () {\n    var a = !0,\n        b = this.$element.closest('[data-toggle=\"buttons\"]');if (b.length) {\n      var c = this.$element.find(\"input\");\"radio\" == c.prop(\"type\") ? (c.prop(\"checked\") && (a = !1), b.find(\".active\").removeClass(\"active\"), this.$element.addClass(\"active\")) : \"checkbox\" == c.prop(\"type\") && (c.prop(\"checked\") !== this.$element.hasClass(\"active\") && (a = !1), this.$element.toggleClass(\"active\")), c.prop(\"checked\", this.$element.hasClass(\"active\")), a && c.trigger(\"change\");\n    } else this.$element.attr(\"aria-pressed\", !this.$element.hasClass(\"active\")), this.$element.toggleClass(\"active\");\n  };var d = a.fn.button;a.fn.button = b, a.fn.button.Constructor = c, a.fn.button.noConflict = function () {\n    return a.fn.button = d, this;\n  }, a(document).on(\"click.bs.button.data-api\", '[data-toggle^=\"button\"]', function (c) {\n    var d = a(c.target);d.hasClass(\"btn\") || (d = d.closest(\".btn\")), b.call(d, \"toggle\"), a(c.target).is('input[type=\"radio\"]') || a(c.target).is('input[type=\"checkbox\"]') || c.preventDefault();\n  }).on(\"focus.bs.button.data-api blur.bs.button.data-api\", '[data-toggle^=\"button\"]', function (b) {\n    a(b.target).closest(\".btn\").toggleClass(\"focus\", /^focus(in)?$/.test(b.type));\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.carousel\"),\n          f = a.extend({}, c.DEFAULTS, d.data(), \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b),\n          g = \"string\" == typeof b ? b : f.slide;e || d.data(\"bs.carousel\", e = new c(this, f)), \"number\" == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle();\n    });\n  }var c = function c(b, _c) {\n    this.$element = a(b), this.$indicators = this.$element.find(\".carousel-indicators\"), this.options = _c, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on(\"keydown.bs.carousel\", a.proxy(this.keydown, this)), \"hover\" == this.options.pause && !(\"ontouchstart\" in document.documentElement) && this.$element.on(\"mouseenter.bs.carousel\", a.proxy(this.pause, this)).on(\"mouseleave.bs.carousel\", a.proxy(this.cycle, this));\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 600, c.DEFAULTS = { interval: 5e3, pause: \"hover\", wrap: !0, keyboard: !0 }, c.prototype.keydown = function (a) {\n    if (!/input|textarea/i.test(a.target.tagName)) {\n      switch (a.which) {case 37:\n          this.prev();break;case 39:\n          this.next();break;default:\n          return;}a.preventDefault();\n    }\n  }, c.prototype.cycle = function (b) {\n    return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this;\n  }, c.prototype.getItemIndex = function (a) {\n    return this.$items = a.parent().children(\".item\"), this.$items.index(a || this.$active);\n  }, c.prototype.getItemForDirection = function (a, b) {\n    var c = this.getItemIndex(b),\n        d = \"prev\" == a && 0 === c || \"next\" == a && c == this.$items.length - 1;if (d && !this.options.wrap) return b;var e = \"prev\" == a ? -1 : 1,\n        f = (c + e) % this.$items.length;return this.$items.eq(f);\n  }, c.prototype.to = function (a) {\n    var b = this,\n        c = this.getItemIndex(this.$active = this.$element.find(\".item.active\"));return a > this.$items.length - 1 || 0 > a ? void 0 : this.sliding ? this.$element.one(\"slid.bs.carousel\", function () {\n      b.to(a);\n    }) : c == a ? this.pause().cycle() : this.slide(a > c ? \"next\" : \"prev\", this.$items.eq(a));\n  }, c.prototype.pause = function (b) {\n    return b || (this.paused = !0), this.$element.find(\".next, .prev\").length && a.support.transition && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this;\n  }, c.prototype.next = function () {\n    return this.sliding ? void 0 : this.slide(\"next\");\n  }, c.prototype.prev = function () {\n    return this.sliding ? void 0 : this.slide(\"prev\");\n  }, c.prototype.slide = function (b, d) {\n    var e = this.$element.find(\".item.active\"),\n        f = d || this.getItemForDirection(b, e),\n        g = this.interval,\n        h = \"next\" == b ? \"left\" : \"right\",\n        i = this;if (f.hasClass(\"active\")) return this.sliding = !1;var j = f[0],\n        k = a.Event(\"slide.bs.carousel\", { relatedTarget: j, direction: h });if (this.$element.trigger(k), !k.isDefaultPrevented()) {\n      if (this.sliding = !0, g && this.pause(), this.$indicators.length) {\n        this.$indicators.find(\".active\").removeClass(\"active\");var l = a(this.$indicators.children()[this.getItemIndex(f)]);l && l.addClass(\"active\");\n      }var m = a.Event(\"slid.bs.carousel\", { relatedTarget: j, direction: h });return a.support.transition && this.$element.hasClass(\"slide\") ? (f.addClass(b), f[0].offsetWidth, e.addClass(h), f.addClass(h), e.one(\"bsTransitionEnd\", function () {\n        f.removeClass([b, h].join(\" \")).addClass(\"active\"), e.removeClass([\"active\", h].join(\" \")), i.sliding = !1, setTimeout(function () {\n          i.$element.trigger(m);\n        }, 0);\n      }).emulateTransitionEnd(c.TRANSITION_DURATION)) : (e.removeClass(\"active\"), f.addClass(\"active\"), this.sliding = !1, this.$element.trigger(m)), g && this.cycle(), this;\n    }\n  };var d = a.fn.carousel;a.fn.carousel = b, a.fn.carousel.Constructor = c, a.fn.carousel.noConflict = function () {\n    return a.fn.carousel = d, this;\n  };var e = function e(c) {\n    var d,\n        e = a(this),\n        f = a(e.attr(\"data-target\") || (d = e.attr(\"href\")) && d.replace(/.*(?=#[^\\s]+$)/, \"\"));if (f.hasClass(\"carousel\")) {\n      var g = a.extend({}, f.data(), e.data()),\n          h = e.attr(\"data-slide-to\");h && (g.interval = !1), b.call(f, g), h && f.data(\"bs.carousel\").to(h), c.preventDefault();\n    }\n  };a(document).on(\"click.bs.carousel.data-api\", \"[data-slide]\", e).on(\"click.bs.carousel.data-api\", \"[data-slide-to]\", e), a(window).on(\"load\", function () {\n    a('[data-ride=\"carousel\"]').each(function () {\n      var c = a(this);b.call(c, c.data());\n    });\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    var c,\n        d = b.attr(\"data-target\") || (c = b.attr(\"href\")) && c.replace(/.*(?=#[^\\s]+$)/, \"\");return a(d);\n  }function c(b) {\n    return this.each(function () {\n      var c = a(this),\n          e = c.data(\"bs.collapse\"),\n          f = a.extend({}, d.DEFAULTS, c.data(), \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b);!e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || c.data(\"bs.collapse\", e = new d(this, f)), \"string\" == typeof b && e[b]();\n    });\n  }var d = function d(b, c) {\n    this.$element = a(b), this.options = a.extend({}, d.DEFAULTS, c), this.$trigger = a('[data-toggle=\"collapse\"][href=\"#' + b.id + '\"],[data-toggle=\"collapse\"][data-target=\"#' + b.id + '\"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle();\n  };d.VERSION = \"3.3.6\", d.TRANSITION_DURATION = 350, d.DEFAULTS = { toggle: !0 }, d.prototype.dimension = function () {\n    var a = this.$element.hasClass(\"width\");return a ? \"width\" : \"height\";\n  }, d.prototype.show = function () {\n    if (!this.transitioning && !this.$element.hasClass(\"in\")) {\n      var b,\n          e = this.$parent && this.$parent.children(\".panel\").children(\".in, .collapsing\");if (!(e && e.length && (b = e.data(\"bs.collapse\"), b && b.transitioning))) {\n        var f = a.Event(\"show.bs.collapse\");if (this.$element.trigger(f), !f.isDefaultPrevented()) {\n          e && e.length && (c.call(e, \"hide\"), b || e.data(\"bs.collapse\", null));var g = this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\", !0), this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\", !0), this.transitioning = 1;var h = function h() {\n            this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"), this.transitioning = 0, this.$element.trigger(\"shown.bs.collapse\");\n          };if (!a.support.transition) return h.call(this);var i = a.camelCase([\"scroll\", g].join(\"-\"));this.$element.one(\"bsTransitionEnd\", a.proxy(h, this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i]);\n        }\n      }\n    }\n  }, d.prototype.hide = function () {\n    if (!this.transitioning && this.$element.hasClass(\"in\")) {\n      var b = a.Event(\"hide.bs.collapse\");if (this.$element.trigger(b), !b.isDefaultPrevented()) {\n        var c = this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\", !1), this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\", !1), this.transitioning = 1;var e = function e() {\n          this.transitioning = 0, this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\");\n        };return a.support.transition ? void this.$element[c](0).one(\"bsTransitionEnd\", a.proxy(e, this)).emulateTransitionEnd(d.TRANSITION_DURATION) : e.call(this);\n      }\n    }\n  }, d.prototype.toggle = function () {\n    this[this.$element.hasClass(\"in\") ? \"hide\" : \"show\"]();\n  }, d.prototype.getParent = function () {\n    return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]').each(a.proxy(function (c, d) {\n      var e = a(d);this.addAriaAndCollapsedClass(b(e), e);\n    }, this)).end();\n  }, d.prototype.addAriaAndCollapsedClass = function (a, b) {\n    var c = a.hasClass(\"in\");a.attr(\"aria-expanded\", c), b.toggleClass(\"collapsed\", !c).attr(\"aria-expanded\", c);\n  };var e = a.fn.collapse;a.fn.collapse = c, a.fn.collapse.Constructor = d, a.fn.collapse.noConflict = function () {\n    return a.fn.collapse = e, this;\n  }, a(document).on(\"click.bs.collapse.data-api\", '[data-toggle=\"collapse\"]', function (d) {\n    var e = a(this);e.attr(\"data-target\") || d.preventDefault();var f = b(e),\n        g = f.data(\"bs.collapse\"),\n        h = g ? \"toggle\" : e.data();c.call(f, h);\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    var c = b.attr(\"data-target\");c || (c = b.attr(\"href\"), c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\\s]*$)/, \"\"));var d = c && a(c);return d && d.length ? d : b.parent();\n  }function c(c) {\n    c && 3 === c.which || (a(e).remove(), a(f).each(function () {\n      var d = a(this),\n          e = b(d),\n          f = { relatedTarget: this };e.hasClass(\"open\") && (c && \"click\" == c.type && /input|textarea/i.test(c.target.tagName) && a.contains(e[0], c.target) || (e.trigger(c = a.Event(\"hide.bs.dropdown\", f)), c.isDefaultPrevented() || (d.attr(\"aria-expanded\", \"false\"), e.removeClass(\"open\").trigger(a.Event(\"hidden.bs.dropdown\", f)))));\n    }));\n  }function d(b) {\n    return this.each(function () {\n      var c = a(this),\n          d = c.data(\"bs.dropdown\");d || c.data(\"bs.dropdown\", d = new g(this)), \"string\" == typeof b && d[b].call(c);\n    });\n  }var e = \".dropdown-backdrop\",\n      f = '[data-toggle=\"dropdown\"]',\n      g = function g(b) {\n    a(b).on(\"click.bs.dropdown\", this.toggle);\n  };g.VERSION = \"3.3.6\", g.prototype.toggle = function (d) {\n    var e = a(this);if (!e.is(\".disabled, :disabled\")) {\n      var f = b(e),\n          g = f.hasClass(\"open\");if (c(), !g) {\n        \"ontouchstart\" in document.documentElement && !f.closest(\".navbar-nav\").length && a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\", c);var h = { relatedTarget: this };if (f.trigger(d = a.Event(\"show.bs.dropdown\", h)), d.isDefaultPrevented()) return;e.trigger(\"focus\").attr(\"aria-expanded\", \"true\"), f.toggleClass(\"open\").trigger(a.Event(\"shown.bs.dropdown\", h));\n      }return !1;\n    }\n  }, g.prototype.keydown = function (c) {\n    if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName)) {\n      var d = a(this);if (c.preventDefault(), c.stopPropagation(), !d.is(\".disabled, :disabled\")) {\n        var e = b(d),\n            g = e.hasClass(\"open\");if (!g && 27 != c.which || g && 27 == c.which) return 27 == c.which && e.find(f).trigger(\"focus\"), d.trigger(\"click\");var h = \" li:not(.disabled):visible a\",\n            i = e.find(\".dropdown-menu\" + h);if (i.length) {\n          var j = i.index(c.target);38 == c.which && j > 0 && j--, 40 == c.which && j < i.length - 1 && j++, ~j || (j = 0), i.eq(j).trigger(\"focus\");\n        }\n      }\n    }\n  };var h = a.fn.dropdown;a.fn.dropdown = d, a.fn.dropdown.Constructor = g, a.fn.dropdown.noConflict = function () {\n    return a.fn.dropdown = h, this;\n  }, a(document).on(\"click.bs.dropdown.data-api\", c).on(\"click.bs.dropdown.data-api\", \".dropdown form\", function (a) {\n    a.stopPropagation();\n  }).on(\"click.bs.dropdown.data-api\", f, g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\", f, g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\", \".dropdown-menu\", g.prototype.keydown);\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b, d) {\n    return this.each(function () {\n      var e = a(this),\n          f = e.data(\"bs.modal\"),\n          g = a.extend({}, c.DEFAULTS, e.data(), \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b);f || e.data(\"bs.modal\", f = new c(this, g)), \"string\" == typeof b ? f[b](d) : g.show && f.show(d);\n    });\n  }var c = function c(b, _c2) {\n    this.options = _c2, this.$body = a(document.body), this.$element = a(b), this.$dialog = this.$element.find(\".modal-dialog\"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(\".modal-content\").load(this.options.remote, a.proxy(function () {\n      this.$element.trigger(\"loaded.bs.modal\");\n    }, this));\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 300, c.BACKDROP_TRANSITION_DURATION = 150, c.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }, c.prototype.toggle = function (a) {\n    return this.isShown ? this.hide() : this.show(a);\n  }, c.prototype.show = function (b) {\n    var d = this,\n        e = a.Event(\"show.bs.modal\", { relatedTarget: b });this.$element.trigger(e), this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass(\"modal-open\"), this.escape(), this.resize(), this.$element.on(\"click.dismiss.bs.modal\", '[data-dismiss=\"modal\"]', a.proxy(this.hide, this)), this.$dialog.on(\"mousedown.dismiss.bs.modal\", function () {\n      d.$element.one(\"mouseup.dismiss.bs.modal\", function (b) {\n        a(b.target).is(d.$element) && (d.ignoreBackdropClick = !0);\n      });\n    }), this.backdrop(function () {\n      var e = a.support.transition && d.$element.hasClass(\"fade\");d.$element.parent().length || d.$element.appendTo(d.$body), d.$element.show().scrollTop(0), d.adjustDialog(), e && d.$element[0].offsetWidth, d.$element.addClass(\"in\"), d.enforceFocus();var f = a.Event(\"shown.bs.modal\", { relatedTarget: b });e ? d.$dialog.one(\"bsTransitionEnd\", function () {\n        d.$element.trigger(\"focus\").trigger(f);\n      }).emulateTransitionEnd(c.TRANSITION_DURATION) : d.$element.trigger(\"focus\").trigger(f);\n    }));\n  }, c.prototype.hide = function (b) {\n    b && b.preventDefault(), b = a.Event(\"hide.bs.modal\"), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), a(document).off(\"focusin.bs.modal\"), this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"), this.$dialog.off(\"mousedown.dismiss.bs.modal\"), a.support.transition && this.$element.hasClass(\"fade\") ? this.$element.one(\"bsTransitionEnd\", a.proxy(this.hideModal, this)).emulateTransitionEnd(c.TRANSITION_DURATION) : this.hideModal());\n  }, c.prototype.enforceFocus = function () {\n    a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\", a.proxy(function (a) {\n      this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger(\"focus\");\n    }, this));\n  }, c.prototype.escape = function () {\n    this.isShown && this.options.keyboard ? this.$element.on(\"keydown.dismiss.bs.modal\", a.proxy(function (a) {\n      27 == a.which && this.hide();\n    }, this)) : this.isShown || this.$element.off(\"keydown.dismiss.bs.modal\");\n  }, c.prototype.resize = function () {\n    this.isShown ? a(window).on(\"resize.bs.modal\", a.proxy(this.handleUpdate, this)) : a(window).off(\"resize.bs.modal\");\n  }, c.prototype.hideModal = function () {\n    var a = this;this.$element.hide(), this.backdrop(function () {\n      a.$body.removeClass(\"modal-open\"), a.resetAdjustments(), a.resetScrollbar(), a.$element.trigger(\"hidden.bs.modal\");\n    });\n  }, c.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove(), this.$backdrop = null;\n  }, c.prototype.backdrop = function (b) {\n    var d = this,\n        e = this.$element.hasClass(\"fade\") ? \"fade\" : \"\";if (this.isShown && this.options.backdrop) {\n      var f = a.support.transition && e;if (this.$backdrop = a(document.createElement(\"div\")).addClass(\"modal-backdrop \" + e).appendTo(this.$body), this.$element.on(\"click.dismiss.bs.modal\", a.proxy(function (a) {\n        return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (a.target === a.currentTarget && (\"static\" == this.options.backdrop ? this.$element[0].focus() : this.hide()));\n      }, this)), f && this.$backdrop[0].offsetWidth, this.$backdrop.addClass(\"in\"), !b) return;f ? this.$backdrop.one(\"bsTransitionEnd\", b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : b();\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass(\"in\");var g = function g() {\n        d.removeBackdrop(), b && b();\n      };a.support.transition && this.$element.hasClass(\"fade\") ? this.$backdrop.one(\"bsTransitionEnd\", g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : g();\n    } else b && b();\n  }, c.prototype.handleUpdate = function () {\n    this.adjustDialog();\n  }, c.prototype.adjustDialog = function () {\n    var a = this.$element[0].scrollHeight > document.documentElement.clientHeight;this.$element.css({ paddingLeft: !this.bodyIsOverflowing && a ? this.scrollbarWidth : \"\", paddingRight: this.bodyIsOverflowing && !a ? this.scrollbarWidth : \"\" });\n  }, c.prototype.resetAdjustments = function () {\n    this.$element.css({ paddingLeft: \"\", paddingRight: \"\" });\n  }, c.prototype.checkScrollbar = function () {\n    var a = window.innerWidth;if (!a) {\n      var b = document.documentElement.getBoundingClientRect();a = b.right - Math.abs(b.left);\n    }this.bodyIsOverflowing = document.body.clientWidth < a, this.scrollbarWidth = this.measureScrollbar();\n  }, c.prototype.setScrollbar = function () {\n    var a = parseInt(this.$body.css(\"padding-right\") || 0, 10);this.originalBodyPad = document.body.style.paddingRight || \"\", this.bodyIsOverflowing && this.$body.css(\"padding-right\", a + this.scrollbarWidth);\n  }, c.prototype.resetScrollbar = function () {\n    this.$body.css(\"padding-right\", this.originalBodyPad);\n  }, c.prototype.measureScrollbar = function () {\n    var a = document.createElement(\"div\");a.className = \"modal-scrollbar-measure\", this.$body.append(a);var b = a.offsetWidth - a.clientWidth;return this.$body[0].removeChild(a), b;\n  };var d = a.fn.modal;a.fn.modal = b, a.fn.modal.Constructor = c, a.fn.modal.noConflict = function () {\n    return a.fn.modal = d, this;\n  }, a(document).on(\"click.bs.modal.data-api\", '[data-toggle=\"modal\"]', function (c) {\n    var d = a(this),\n        e = d.attr(\"href\"),\n        f = a(d.attr(\"data-target\") || e && e.replace(/.*(?=#[^\\s]+$)/, \"\")),\n        g = f.data(\"bs.modal\") ? \"toggle\" : a.extend({ remote: !/#/.test(e) && e }, f.data(), d.data());d.is(\"a\") && c.preventDefault(), f.one(\"show.bs.modal\", function (a) {\n      a.isDefaultPrevented() || f.one(\"hidden.bs.modal\", function () {\n        d.is(\":visible\") && d.trigger(\"focus\");\n      });\n    }), b.call(f, g, this);\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.tooltip\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;(e || !/destroy|hide/.test(b)) && (e || d.data(\"bs.tooltip\", e = new c(this, f)), \"string\" == typeof b && e[b]());\n    });\n  }var c = function c(a, b) {\n    this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init(\"tooltip\", a, b);\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 150, c.DEFAULTS = { animation: !0, placement: \"top\", selector: !1, template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>', trigger: \"hover focus\", title: \"\", delay: 0, html: !1, container: !1, viewport: { selector: \"body\", padding: 0 } }, c.prototype.init = function (b, c, d) {\n    if (this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), this.$viewport = this.options.viewport && a(a.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: !1, hover: !1, focus: !1 }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error(\"`selector` option must be specified when initializing \" + this.type + \" on the window.document object!\");for (var e = this.options.trigger.split(\" \"), f = e.length; f--;) {\n      var g = e[f];if (\"click\" == g) this.$element.on(\"click.\" + this.type, this.options.selector, a.proxy(this.toggle, this));else if (\"manual\" != g) {\n        var h = \"hover\" == g ? \"mouseenter\" : \"focusin\",\n            i = \"hover\" == g ? \"mouseleave\" : \"focusout\";this.$element.on(h + \".\" + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + \".\" + this.type, this.options.selector, a.proxy(this.leave, this));\n      }\n    }this.options.selector ? this._options = a.extend({}, this.options, { trigger: \"manual\", selector: \"\" }) : this.fixTitle();\n  }, c.prototype.getDefaults = function () {\n    return c.DEFAULTS;\n  }, c.prototype.getOptions = function (b) {\n    return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && \"number\" == typeof b.delay && (b.delay = { show: b.delay, hide: b.delay }), b;\n  }, c.prototype.getDelegateOptions = function () {\n    var b = {},\n        c = this.getDefaults();return this._options && a.each(this._options, function (a, d) {\n      c[a] != d && (b[a] = d);\n    }), b;\n  }, c.prototype.enter = function (b) {\n    var c = b instanceof this.constructor ? b : a(b.currentTarget).data(\"bs.\" + this.type);return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data(\"bs.\" + this.type, c)), b instanceof a.Event && (c.inState[\"focusin\" == b.type ? \"focus\" : \"hover\"] = !0), c.tip().hasClass(\"in\") || \"in\" == c.hoverState ? void (c.hoverState = \"in\") : (clearTimeout(c.timeout), c.hoverState = \"in\", c.options.delay && c.options.delay.show ? void (c.timeout = setTimeout(function () {\n      \"in\" == c.hoverState && c.show();\n    }, c.options.delay.show)) : c.show());\n  }, c.prototype.isInStateTrue = function () {\n    for (var a in this.inState) {\n      if (this.inState[a]) return !0;\n    }return !1;\n  }, c.prototype.leave = function (b) {\n    var c = b instanceof this.constructor ? b : a(b.currentTarget).data(\"bs.\" + this.type);return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data(\"bs.\" + this.type, c)), b instanceof a.Event && (c.inState[\"focusout\" == b.type ? \"focus\" : \"hover\"] = !1), c.isInStateTrue() ? void 0 : (clearTimeout(c.timeout), c.hoverState = \"out\", c.options.delay && c.options.delay.hide ? void (c.timeout = setTimeout(function () {\n      \"out\" == c.hoverState && c.hide();\n    }, c.options.delay.hide)) : c.hide());\n  }, c.prototype.show = function () {\n    var b = a.Event(\"show.bs.\" + this.type);if (this.hasContent() && this.enabled) {\n      this.$element.trigger(b);var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);if (b.isDefaultPrevented() || !d) return;var e = this,\n          f = this.tip(),\n          g = this.getUID(this.type);this.setContent(), f.attr(\"id\", g), this.$element.attr(\"aria-describedby\", g), this.options.animation && f.addClass(\"fade\");var h = \"function\" == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement,\n          i = /\\s?auto?\\s?/i,\n          j = i.test(h);j && (h = h.replace(i, \"\") || \"top\"), f.detach().css({ top: 0, left: 0, display: \"block\" }).addClass(h).data(\"bs.\" + this.type, this), this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element), this.$element.trigger(\"inserted.bs.\" + this.type);var k = this.getPosition(),\n          l = f[0].offsetWidth,\n          m = f[0].offsetHeight;if (j) {\n        var n = h,\n            o = this.getPosition(this.$viewport);h = \"bottom\" == h && k.bottom + m > o.bottom ? \"top\" : \"top\" == h && k.top - m < o.top ? \"bottom\" : \"right\" == h && k.right + l > o.width ? \"left\" : \"left\" == h && k.left - l < o.left ? \"right\" : h, f.removeClass(n).addClass(h);\n      }var p = this.getCalculatedOffset(h, k, l, m);this.applyPlacement(p, h);var q = function q() {\n        var a = e.hoverState;e.$element.trigger(\"shown.bs.\" + e.type), e.hoverState = null, \"out\" == a && e.leave(e);\n      };a.support.transition && this.$tip.hasClass(\"fade\") ? f.one(\"bsTransitionEnd\", q).emulateTransitionEnd(c.TRANSITION_DURATION) : q();\n    }\n  }, c.prototype.applyPlacement = function (b, c) {\n    var d = this.tip(),\n        e = d[0].offsetWidth,\n        f = d[0].offsetHeight,\n        g = parseInt(d.css(\"margin-top\"), 10),\n        h = parseInt(d.css(\"margin-left\"), 10);isNaN(g) && (g = 0), isNaN(h) && (h = 0), b.top += g, b.left += h, a.offset.setOffset(d[0], a.extend({ using: function using(a) {\n        d.css({ top: Math.round(a.top), left: Math.round(a.left) });\n      } }, b), 0), d.addClass(\"in\");var i = d[0].offsetWidth,\n        j = d[0].offsetHeight;\"top\" == c && j != f && (b.top = b.top + f - j);var k = this.getViewportAdjustedDelta(c, b, i, j);k.left ? b.left += k.left : b.top += k.top;var l = /top|bottom/.test(c),\n        m = l ? 2 * k.left - e + i : 2 * k.top - f + j,\n        n = l ? \"offsetWidth\" : \"offsetHeight\";d.offset(b), this.replaceArrow(m, d[0][n], l);\n  }, c.prototype.replaceArrow = function (a, b, c) {\n    this.arrow().css(c ? \"left\" : \"top\", 50 * (1 - a / b) + \"%\").css(c ? \"top\" : \"left\", \"\");\n  }, c.prototype.setContent = function () {\n    var a = this.tip(),\n        b = this.getTitle();a.find(\".tooltip-inner\")[this.options.html ? \"html\" : \"text\"](b), a.removeClass(\"fade in top bottom left right\");\n  }, c.prototype.hide = function (b) {\n    function d() {\n      \"in\" != e.hoverState && f.detach(), e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\" + e.type), b && b();\n    }var e = this,\n        f = a(this.$tip),\n        g = a.Event(\"hide.bs.\" + this.type);return this.$element.trigger(g), g.isDefaultPrevented() ? void 0 : (f.removeClass(\"in\"), a.support.transition && f.hasClass(\"fade\") ? f.one(\"bsTransitionEnd\", d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), this.hoverState = null, this);\n  }, c.prototype.fixTitle = function () {\n    var a = this.$element;(a.attr(\"title\") || \"string\" != typeof a.attr(\"data-original-title\")) && a.attr(\"data-original-title\", a.attr(\"title\") || \"\").attr(\"title\", \"\");\n  }, c.prototype.hasContent = function () {\n    return this.getTitle();\n  }, c.prototype.getPosition = function (b) {\n    b = b || this.$element;var c = b[0],\n        d = \"BODY\" == c.tagName,\n        e = c.getBoundingClientRect();null == e.width && (e = a.extend({}, e, { width: e.right - e.left, height: e.bottom - e.top }));var f = d ? { top: 0, left: 0 } : b.offset(),\n        g = { scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop() },\n        h = d ? { width: a(window).width(), height: a(window).height() } : null;return a.extend({}, e, g, h, f);\n  }, c.prototype.getCalculatedOffset = function (a, b, c, d) {\n    return \"bottom\" == a ? { top: b.top + b.height, left: b.left + b.width / 2 - c / 2 } : \"top\" == a ? { top: b.top - d, left: b.left + b.width / 2 - c / 2 } : \"left\" == a ? { top: b.top + b.height / 2 - d / 2, left: b.left - c } : { top: b.top + b.height / 2 - d / 2, left: b.left + b.width };\n  }, c.prototype.getViewportAdjustedDelta = function (a, b, c, d) {\n    var e = { top: 0, left: 0 };if (!this.$viewport) return e;var f = this.options.viewport && this.options.viewport.padding || 0,\n        g = this.getPosition(this.$viewport);if (/right|left/.test(a)) {\n      var h = b.top - f - g.scroll,\n          i = b.top + f - g.scroll + d;h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i);\n    } else {\n      var j = b.left - f,\n          k = b.left + f + c;j < g.left ? e.left = g.left - j : k > g.right && (e.left = g.left + g.width - k);\n    }return e;\n  }, c.prototype.getTitle = function () {\n    var a,\n        b = this.$element,\n        c = this.options;return a = b.attr(\"data-original-title\") || (\"function\" == typeof c.title ? c.title.call(b[0]) : c.title);\n  }, c.prototype.getUID = function (a) {\n    do {\n      a += ~ ~(1e6 * Math.random());\n    } while (document.getElementById(a));return a;\n  }, c.prototype.tip = function () {\n    if (!this.$tip && (this.$tip = a(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + \" `template` option must consist of exactly 1 top-level element!\");return this.$tip;\n  }, c.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find(\".tooltip-arrow\");\n  }, c.prototype.enable = function () {\n    this.enabled = !0;\n  }, c.prototype.disable = function () {\n    this.enabled = !1;\n  }, c.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled;\n  }, c.prototype.toggle = function (b) {\n    var c = this;b && (c = a(b.currentTarget).data(\"bs.\" + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data(\"bs.\" + this.type, c))), b ? (c.inState.click = !c.inState.click, c.isInStateTrue() ? c.enter(c) : c.leave(c)) : c.tip().hasClass(\"in\") ? c.leave(c) : c.enter(c);\n  }, c.prototype.destroy = function () {\n    var a = this;clearTimeout(this.timeout), this.hide(function () {\n      a.$element.off(\".\" + a.type).removeData(\"bs.\" + a.type), a.$tip && a.$tip.detach(), a.$tip = null, a.$arrow = null, a.$viewport = null;\n    });\n  };var d = a.fn.tooltip;a.fn.tooltip = b, a.fn.tooltip.Constructor = c, a.fn.tooltip.noConflict = function () {\n    return a.fn.tooltip = d, this;\n  };\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.popover\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;(e || !/destroy|hide/.test(b)) && (e || d.data(\"bs.popover\", e = new c(this, f)), \"string\" == typeof b && e[b]());\n    });\n  }var c = function c(a, b) {\n    this.init(\"popover\", a, b);\n  };if (!a.fn.tooltip) throw new Error(\"Popover requires tooltip.js\");c.VERSION = \"3.3.6\", c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, { placement: \"right\", trigger: \"click\", content: \"\", template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>' }), c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), c.prototype.constructor = c, c.prototype.getDefaults = function () {\n    return c.DEFAULTS;\n  }, c.prototype.setContent = function () {\n    var a = this.tip(),\n        b = this.getTitle(),\n        c = this.getContent();a.find(\".popover-title\")[this.options.html ? \"html\" : \"text\"](b), a.find(\".popover-content\").children().detach().end()[this.options.html ? \"string\" == typeof c ? \"html\" : \"append\" : \"text\"](c), a.removeClass(\"fade top bottom left right in\"), a.find(\".popover-title\").html() || a.find(\".popover-title\").hide();\n  }, c.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent();\n  }, c.prototype.getContent = function () {\n    var a = this.$element,\n        b = this.options;return a.attr(\"data-content\") || (\"function\" == typeof b.content ? b.content.call(a[0]) : b.content);\n  }, c.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find(\".arrow\");\n  };var d = a.fn.popover;a.fn.popover = b, a.fn.popover.Constructor = c, a.fn.popover.noConflict = function () {\n    return a.fn.popover = d, this;\n  };\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(c, d) {\n    this.$body = a(document.body), this.$scrollElement = a(a(c).is(document.body) ? window : c), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || \"\") + \" .nav li > a\", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on(\"scroll.bs.scrollspy\", a.proxy(this.process, this)), this.refresh(), this.process();\n  }function c(c) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.scrollspy\"),\n          f = \"object\" == (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) && c;e || d.data(\"bs.scrollspy\", e = new b(this, f)), \"string\" == typeof c && e[c]();\n    });\n  }b.VERSION = \"3.3.6\", b.DEFAULTS = { offset: 10 }, b.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);\n  }, b.prototype.refresh = function () {\n    var b = this,\n        c = \"offset\",\n        d = 0;this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), a.isWindow(this.$scrollElement[0]) || (c = \"position\", d = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function () {\n      var b = a(this),\n          e = b.data(\"target\") || b.attr(\"href\"),\n          f = /^#./.test(e) && a(e);return f && f.length && f.is(\":visible\") && [[f[c]().top + d, e]] || null;\n    }).sort(function (a, b) {\n      return a[0] - b[0];\n    }).each(function () {\n      b.offsets.push(this[0]), b.targets.push(this[1]);\n    });\n  }, b.prototype.process = function () {\n    var a,\n        b = this.$scrollElement.scrollTop() + this.options.offset,\n        c = this.getScrollHeight(),\n        d = this.options.offset + c - this.$scrollElement.height(),\n        e = this.offsets,\n        f = this.targets,\n        g = this.activeTarget;if (this.scrollHeight != c && this.refresh(), b >= d) return g != (a = f[f.length - 1]) && this.activate(a);if (g && b < e[0]) return this.activeTarget = null, this.clear();for (a = e.length; a--;) {\n      g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a]);\n    }\n  }, b.prototype.activate = function (b) {\n    this.activeTarget = b, this.clear();var c = this.selector + '[data-target=\"' + b + '\"],' + this.selector + '[href=\"' + b + '\"]',\n        d = a(c).parents(\"li\").addClass(\"active\");\n    d.parent(\".dropdown-menu\").length && (d = d.closest(\"li.dropdown\").addClass(\"active\")), d.trigger(\"activate.bs.scrollspy\");\n  }, b.prototype.clear = function () {\n    a(this.selector).parentsUntil(this.options.target, \".active\").removeClass(\"active\");\n  };var d = a.fn.scrollspy;a.fn.scrollspy = c, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function () {\n    return a.fn.scrollspy = d, this;\n  }, a(window).on(\"load.bs.scrollspy.data-api\", function () {\n    a('[data-spy=\"scroll\"]').each(function () {\n      var b = a(this);c.call(b, b.data());\n    });\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.tab\");e || d.data(\"bs.tab\", e = new c(this)), \"string\" == typeof b && e[b]();\n    });\n  }var c = function c(b) {\n    this.element = a(b);\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 150, c.prototype.show = function () {\n    var b = this.element,\n        c = b.closest(\"ul:not(.dropdown-menu)\"),\n        d = b.data(\"target\");if (d || (d = b.attr(\"href\"), d = d && d.replace(/.*(?=#[^\\s]*$)/, \"\")), !b.parent(\"li\").hasClass(\"active\")) {\n      var e = c.find(\".active:last a\"),\n          f = a.Event(\"hide.bs.tab\", { relatedTarget: b[0] }),\n          g = a.Event(\"show.bs.tab\", { relatedTarget: e[0] });if (e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented()) {\n        var h = a(d);this.activate(b.closest(\"li\"), c), this.activate(h, h.parent(), function () {\n          e.trigger({ type: \"hidden.bs.tab\", relatedTarget: b[0] }), b.trigger({ type: \"shown.bs.tab\", relatedTarget: e[0] });\n        });\n      }\n    }\n  }, c.prototype.activate = function (b, d, e) {\n    function f() {\n      g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\", !1), b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\", !0), h ? (b[0].offsetWidth, b.addClass(\"in\")) : b.removeClass(\"fade\"), b.parent(\".dropdown-menu\").length && b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\", !0), e && e();\n    }var g = d.find(\"> .active\"),\n        h = e && a.support.transition && (g.length && g.hasClass(\"fade\") || !!d.find(\"> .fade\").length);g.length && h ? g.one(\"bsTransitionEnd\", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(), g.removeClass(\"in\");\n  };var d = a.fn.tab;a.fn.tab = b, a.fn.tab.Constructor = c, a.fn.tab.noConflict = function () {\n    return a.fn.tab = d, this;\n  };var e = function e(c) {\n    c.preventDefault(), b.call(a(this), \"show\");\n  };a(document).on(\"click.bs.tab.data-api\", '[data-toggle=\"tab\"]', e).on(\"click.bs.tab.data-api\", '[data-toggle=\"pill\"]', e);\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.affix\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;e || d.data(\"bs.affix\", e = new c(this, f)), \"string\" == typeof b && e[b]();\n    });\n  }var c = function c(b, d) {\n    this.options = a.extend({}, c.DEFAULTS, d), this.$target = a(this.options.target).on(\"scroll.bs.affix.data-api\", a.proxy(this.checkPosition, this)).on(\"click.bs.affix.data-api\", a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(b), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition();\n  };c.VERSION = \"3.3.6\", c.RESET = \"affix affix-top affix-bottom\", c.DEFAULTS = { offset: 0, target: window }, c.prototype.getState = function (a, b, c, d) {\n    var e = this.$target.scrollTop(),\n        f = this.$element.offset(),\n        g = this.$target.height();if (null != c && \"top\" == this.affixed) return c > e ? \"top\" : !1;if (\"bottom\" == this.affixed) return null != c ? e + this.unpin <= f.top ? !1 : \"bottom\" : a - d >= e + g ? !1 : \"bottom\";var h = null == this.affixed,\n        i = h ? e : f.top,\n        j = h ? g : b;return null != c && c >= e ? \"top\" : null != d && i + j >= a - d ? \"bottom\" : !1;\n  }, c.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a = this.$target.scrollTop(),\n        b = this.$element.offset();return this.pinnedOffset = b.top - a;\n  }, c.prototype.checkPositionWithEventLoop = function () {\n    setTimeout(a.proxy(this.checkPosition, this), 1);\n  }, c.prototype.checkPosition = function () {\n    if (this.$element.is(\":visible\")) {\n      var b = this.$element.height(),\n          d = this.options.offset,\n          e = d.top,\n          f = d.bottom,\n          g = Math.max(a(document).height(), a(document.body).height());\"object\" != (typeof d === \"undefined\" ? \"undefined\" : _typeof(d)) && (f = e = d), \"function\" == typeof e && (e = d.top(this.$element)), \"function\" == typeof f && (f = d.bottom(this.$element));var h = this.getState(g, b, e, f);if (this.affixed != h) {\n        null != this.unpin && this.$element.css(\"top\", \"\");var i = \"affix\" + (h ? \"-\" + h : \"\"),\n            j = a.Event(i + \".bs.affix\");if (this.$element.trigger(j), j.isDefaultPrevented()) return;this.affixed = h, this.unpin = \"bottom\" == h ? this.getPinnedOffset() : null, this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\", \"affixed\") + \".bs.affix\");\n      }\"bottom\" == h && this.$element.offset({ top: g - b - f });\n    }\n  };var d = a.fn.affix;a.fn.affix = b, a.fn.affix.Constructor = c, a.fn.affix.noConflict = function () {\n    return a.fn.affix = d, this;\n  }, a(window).on(\"load\", function () {\n    a('[data-spy=\"affix\"]').each(function () {\n      var c = a(this),\n          d = c.data();d.offset = d.offset || {}, null != d.offsetBottom && (d.offset.bottom = d.offsetBottom), null != d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d);\n    });\n  });\n}(jQuery);\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/**\n * vue-resource v0.7.0\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n!function (t, e) {\n  \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) ? module.exports = e() : \"function\" == typeof define && define.amd ? define([], e) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? exports.VueResource = e() : t.VueResource = e();\n}(undefined, function () {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;var o = n[r] = { exports: {}, id: r, loaded: !1 };return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }var n = {};return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    function r(t) {\n      var e = n(1);e.config = t.config, e.warning = t.util.warn, e.nextTick = t.util.nextTick, t.url = n(2), t.http = n(8), t.resource = n(23), t.Promise = n(10), Object.defineProperties(t.prototype, { $url: { get: function get() {\n            return e.options(t.url, this, this.$options.url);\n          } }, $http: { get: function get() {\n            return e.options(t.http, this, this.$options.http);\n          } }, $resource: { get: function get() {\n            return t.resource.bind(this);\n          } }, $promise: { get: function get() {\n            return function (e) {\n              return new t.Promise(e, this);\n            }.bind(this);\n          } } });\n    }window.Vue && Vue.use(r), t.exports = r;\n  }, function (t, e) {\n    function n(t, e, o) {\n      for (var i in e) {\n        o && (r.isPlainObject(e[i]) || r.isArray(e[i])) ? (r.isPlainObject(e[i]) && !r.isPlainObject(t[i]) && (t[i] = {}), r.isArray(e[i]) && !r.isArray(t[i]) && (t[i] = []), n(t[i], e[i], o)) : void 0 !== e[i] && (t[i] = e[i]);\n      }\n    }var r = e,\n        o = [],\n        i = window.console;r.warn = function (t) {\n      i && r.warning && (!r.config.silent || r.config.debug) && i.warn(\"[VueResource warn]: \" + t);\n    }, r.error = function (t) {\n      i && i.error(t);\n    }, r.trim = function (t) {\n      return t.replace(/^\\s*|\\s*$/g, \"\");\n    }, r.toLower = function (t) {\n      return t ? t.toLowerCase() : \"\";\n    }, r.isArray = Array.isArray, r.isString = function (t) {\n      return \"string\" == typeof t;\n    }, r.isFunction = function (t) {\n      return \"function\" == typeof t;\n    }, r.isObject = function (t) {\n      return null !== t && \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t));\n    }, r.isPlainObject = function (t) {\n      return r.isObject(t) && Object.getPrototypeOf(t) == Object.prototype;\n    }, r.options = function (t, e, n) {\n      return n = n || {}, r.isFunction(n) && (n = n.call(e)), r.merge(t.bind({ $vm: e, $options: n }), t, { $options: n });\n    }, r.each = function (t, e) {\n      var n, o;if (\"number\" == typeof t.length) for (n = 0; n < t.length; n++) {\n        e.call(t[n], t[n], n);\n      } else if (r.isObject(t)) for (o in t) {\n        t.hasOwnProperty(o) && e.call(t[o], t[o], o);\n      }return t;\n    }, r.defaults = function (t, e) {\n      for (var n in e) {\n        void 0 === t[n] && (t[n] = e[n]);\n      }return t;\n    }, r.extend = function (t) {\n      var e = o.slice.call(arguments, 1);return e.forEach(function (e) {\n        n(t, e);\n      }), t;\n    }, r.merge = function (t) {\n      var e = o.slice.call(arguments, 1);return e.forEach(function (e) {\n        n(t, e, !0);\n      }), t;\n    };\n  }, function (t, e, n) {\n    function r(t, e) {\n      var n,\n          i = t;return s.isString(t) && (i = { url: t, params: e }), i = s.merge({}, r.options, this.$options, i), r.transforms.forEach(function (t) {\n        n = o(t, n, this.$vm);\n      }, this), n(i);\n    }function o(t, e, n) {\n      return function (r) {\n        return t.call(n, r, e);\n      };\n    }function i(t, e, n) {\n      var r,\n          o = s.isArray(e),\n          a = s.isPlainObject(e);s.each(e, function (e, u) {\n        r = s.isObject(e) || s.isArray(e), n && (u = n + \"[\" + (a || r ? u : \"\") + \"]\"), !n && o ? t.add(e.name, e.value) : r ? i(t, e, u) : t.add(u, e);\n      });\n    }var s = n(1),\n        a = document.documentMode,\n        u = document.createElement(\"a\");r.options = { url: \"\", root: null, params: {} }, r.transforms = [n(3), n(5), n(6), n(7)], r.params = function (t) {\n      var e = [],\n          n = encodeURIComponent;return e.add = function (t, e) {\n        s.isFunction(e) && (e = e()), null === e && (e = \"\"), this.push(n(t) + \"=\" + n(e));\n      }, i(e, t), e.join(\"&\").replace(/%20/g, \"+\");\n    }, r.parse = function (t) {\n      return a && (u.href = t, t = u.href), u.href = t, { href: u.href, protocol: u.protocol ? u.protocol.replace(/:$/, \"\") : \"\", port: u.port, host: u.host, hostname: u.hostname, pathname: \"/\" === u.pathname.charAt(0) ? u.pathname : \"/\" + u.pathname, search: u.search ? u.search.replace(/^\\?/, \"\") : \"\", hash: u.hash ? u.hash.replace(/^#/, \"\") : \"\" };\n    }, t.exports = s.url = r;\n  }, function (t, e, n) {\n    var r = n(4);t.exports = function (t) {\n      var e = [],\n          n = r.expand(t.url, t.params, e);return e.forEach(function (e) {\n        delete t.params[e];\n      }), n;\n    };\n  }, function (t, e) {\n    e.expand = function (t, e, n) {\n      var r = this.parse(t),\n          o = r.expand(e);return n && n.push.apply(n, r.vars), o;\n    }, e.parse = function (t) {\n      var n = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"],\n          r = [];return { vars: r, expand: function expand(o) {\n          return t.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (t, i, s) {\n            if (i) {\n              var a = null,\n                  u = [];if (-1 !== n.indexOf(i.charAt(0)) && (a = i.charAt(0), i = i.substr(1)), i.split(/,/g).forEach(function (t) {\n                var n = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(t);u.push.apply(u, e.getValues(o, a, n[1], n[2] || n[3])), r.push(n[1]);\n              }), a && \"+\" !== a) {\n                var c = \",\";return \"?\" === a ? c = \"&\" : \"#\" !== a && (c = a), (0 !== u.length ? a : \"\") + u.join(c);\n              }return u.join(\",\");\n            }return e.encodeReserved(s);\n          });\n        } };\n    }, e.getValues = function (t, e, n, r) {\n      var o = t[n],\n          i = [];if (this.isDefined(o) && \"\" !== o) {\n        if (\"string\" == typeof o || \"number\" == typeof o || \"boolean\" == typeof o) o = o.toString(), r && \"*\" !== r && (o = o.substring(0, parseInt(r, 10))), i.push(this.encodeValue(e, o, this.isKeyOperator(e) ? n : null));else if (\"*\" === r) Array.isArray(o) ? o.filter(this.isDefined).forEach(function (t) {\n          i.push(this.encodeValue(e, t, this.isKeyOperator(e) ? n : null));\n        }, this) : Object.keys(o).forEach(function (t) {\n          this.isDefined(o[t]) && i.push(this.encodeValue(e, o[t], t));\n        }, this);else {\n          var s = [];Array.isArray(o) ? o.filter(this.isDefined).forEach(function (t) {\n            s.push(this.encodeValue(e, t));\n          }, this) : Object.keys(o).forEach(function (t) {\n            this.isDefined(o[t]) && (s.push(encodeURIComponent(t)), s.push(this.encodeValue(e, o[t].toString())));\n          }, this), this.isKeyOperator(e) ? i.push(encodeURIComponent(n) + \"=\" + s.join(\",\")) : 0 !== s.length && i.push(s.join(\",\"));\n        }\n      } else \";\" === e ? i.push(encodeURIComponent(n)) : \"\" !== o || \"&\" !== e && \"?\" !== e ? \"\" === o && i.push(\"\") : i.push(encodeURIComponent(n) + \"=\");return i;\n    }, e.isDefined = function (t) {\n      return void 0 !== t && null !== t;\n    }, e.isKeyOperator = function (t) {\n      return \";\" === t || \"&\" === t || \"?\" === t;\n    }, e.encodeValue = function (t, e, n) {\n      return e = \"+\" === t || \"#\" === t ? this.encodeReserved(e) : encodeURIComponent(e), n ? encodeURIComponent(n) + \"=\" + e : e;\n    }, e.encodeReserved = function (t) {\n      return t.split(/(%[0-9A-Fa-f]{2})/g).map(function (t) {\n        return (/%[0-9A-Fa-f]/.test(t) || (t = encodeURI(t)), t\n        );\n      }).join(\"\");\n    };\n  }, function (t, e, n) {\n    function r(t) {\n      return o(t, !0).replace(/%26/gi, \"&\").replace(/%3D/gi, \"=\").replace(/%2B/gi, \"+\");\n    }function o(t, e) {\n      return encodeURIComponent(t).replace(/%40/gi, \"@\").replace(/%3A/gi, \":\").replace(/%24/g, \"$\").replace(/%2C/gi, \",\").replace(/%20/g, e ? \"%20\" : \"+\");\n    }var i = n(1);t.exports = function (t, e) {\n      var n = [],\n          o = e(t);return o = o.replace(/(\\/?):([a-z]\\w*)/gi, function (e, o, s) {\n        return i.warn(\"The `:\" + s + \"` parameter syntax has been deprecated. Use the `{\" + s + \"}` syntax instead.\"), t.params[s] ? (n.push(s), o + r(t.params[s])) : \"\";\n      }), n.forEach(function (e) {\n        delete t.params[e];\n      }), o;\n    };\n  }, function (t, e, n) {\n    var r = n(1);t.exports = function (t, e) {\n      var n = Object.keys(r.url.options.params),\n          o = {},\n          i = e(t);return r.each(t.params, function (t, e) {\n        -1 === n.indexOf(e) && (o[e] = t);\n      }), o = r.url.params(o), o && (i += (-1 == i.indexOf(\"?\") ? \"?\" : \"&\") + o), i;\n    };\n  }, function (t, e, n) {\n    var r = n(1);t.exports = function (t, e) {\n      var n = e(t);return r.isString(t.root) && !n.match(/^(https?:)?\\//) && (n = t.root + \"/\" + n), n;\n    };\n  }, function (t, e, n) {\n    function r(t, e) {\n      var n,\n          u,\n          c = i;return r.interceptors.forEach(function (t) {\n        c = a(t, this.$vm)(c);\n      }, this), e = o.isObject(t) ? t : o.extend({ url: t }, e), n = o.merge({}, r.options, this.$options, e), u = c(n).bind(this.$vm).then(function (t) {\n        return t.ok ? t : s.reject(t);\n      }, function (t) {\n        return t instanceof Error && o.error(t), s.reject(t);\n      }), n.success && u.success(n.success), n.error && u.error(n.error), u;\n    }var o = n(1),\n        i = n(9),\n        s = n(10),\n        a = n(13),\n        u = { \"Content-Type\": \"application/json\" };r.options = { method: \"get\", data: \"\", params: {}, headers: {}, xhr: null, upload: null, jsonp: \"callback\", beforeSend: null, crossOrigin: null, emulateHTTP: !1, emulateJSON: !1, timeout: 0 }, r.interceptors = [n(14), n(15), n(16), n(18), n(19), n(20), n(21)], r.headers = { put: u, post: u, patch: u, \"delete\": u, common: { Accept: \"application/json, text/plain, */*\" }, custom: { \"X-Requested-With\": \"XMLHttpRequest\" } }, [\"get\", \"put\", \"post\", \"patch\", \"delete\", \"jsonp\"].forEach(function (t) {\n      r[t] = function (e, n, r, i) {\n        return o.isFunction(n) && (i = r, r = n, n = void 0), o.isObject(r) && (i = r, r = void 0), this(e, o.extend({ method: t, data: n, success: r }, i));\n      };\n    }), t.exports = o.http = r;\n  }, function (t, e, n) {\n    function r(t) {\n      var e,\n          n,\n          r,\n          i = {};return o.isString(t) && o.each(t.split(\"\\n\"), function (t) {\n        r = t.indexOf(\":\"), n = o.trim(o.toLower(t.slice(0, r))), e = o.trim(t.slice(r + 1)), i[n] ? o.isArray(i[n]) ? i[n].push(e) : i[n] = [i[n], e] : i[n] = e;\n      }), i;\n    }var o = n(1),\n        i = n(10),\n        s = n(12);t.exports = function (t) {\n      var e = (t.client || s)(t);return i.resolve(e).then(function (t) {\n        if (t.headers) {\n          var e = r(t.headers);t.headers = function (t) {\n            return t ? e[o.toLower(t)] : e;\n          };\n        }return t.ok = t.status >= 200 && t.status < 300, t;\n      });\n    };\n  }, function (t, e, n) {\n    function r(t, e) {\n      t instanceof i ? this.promise = t : this.promise = new i(t.bind(e)), this.context = e;\n    }var o = n(1),\n        i = window.Promise || n(11);r.all = function (t, e) {\n      return new r(i.all(t), e);\n    }, r.resolve = function (t, e) {\n      return new r(i.resolve(t), e);\n    }, r.reject = function (t, e) {\n      return new r(i.reject(t), e);\n    }, r.race = function (t, e) {\n      return new r(i.race(t), e);\n    };var s = r.prototype;s.bind = function (t) {\n      return this.context = t, this;\n    }, s.then = function (t, e) {\n      return t && t.bind && this.context && (t = t.bind(this.context)), e && e.bind && this.context && (e = e.bind(this.context)), this.promise = this.promise.then(t, e), this;\n    }, s[\"catch\"] = function (t) {\n      return t && t.bind && this.context && (t = t.bind(this.context)), this.promise = this.promise[\"catch\"](t), this;\n    }, s[\"finally\"] = function (t) {\n      return this.then(function (e) {\n        return t.call(this), e;\n      }, function (e) {\n        return t.call(this), i.reject(e);\n      });\n    }, s.success = function (t) {\n      return o.warn(\"The `success` method has been deprecated. Use the `then` method instead.\"), this.then(function (e) {\n        return t.call(this, e.data, e.status, e) || e;\n      });\n    }, s.error = function (t) {\n      return o.warn(\"The `error` method has been deprecated. Use the `catch` method instead.\"), this[\"catch\"](function (e) {\n        return t.call(this, e.data, e.status, e) || e;\n      });\n    }, s.always = function (t) {\n      o.warn(\"The `always` method has been deprecated. Use the `finally` method instead.\");var e = function e(_e) {\n        return t.call(this, _e.data, _e.status, _e) || _e;\n      };return this.then(e, e);\n    }, t.exports = r;\n  }, function (t, e, n) {\n    function r(t) {\n      this.state = a, this.value = void 0, this.deferred = [];var e = this;try {\n        t(function (t) {\n          e.resolve(t);\n        }, function (t) {\n          e.reject(t);\n        });\n      } catch (n) {\n        e.reject(n);\n      }\n    }var o = n(1),\n        i = 0,\n        s = 1,\n        a = 2;r.reject = function (t) {\n      return new r(function (e, n) {\n        n(t);\n      });\n    }, r.resolve = function (t) {\n      return new r(function (e, n) {\n        e(t);\n      });\n    }, r.all = function (t) {\n      return new r(function (e, n) {\n        function o(n) {\n          return function (r) {\n            s[n] = r, i += 1, i === t.length && e(s);\n          };\n        }var i = 0,\n            s = [];0 === t.length && e(s);for (var a = 0; a < t.length; a += 1) {\n          r.resolve(t[a]).then(o(a), n);\n        }\n      });\n    }, r.race = function (t) {\n      return new r(function (e, n) {\n        for (var o = 0; o < t.length; o += 1) {\n          r.resolve(t[o]).then(e, n);\n        }\n      });\n    };var u = r.prototype;u.resolve = function (t) {\n      var e = this;if (e.state === a) {\n        if (t === e) throw new TypeError(\"Promise settled with itself.\");var n = !1;try {\n          var r = t && t.then;if (null !== t && \"object\" == (typeof t === \"undefined\" ? \"undefined\" : _typeof(t)) && \"function\" == typeof r) return void r.call(t, function (t) {\n            n || e.resolve(t), n = !0;\n          }, function (t) {\n            n || e.reject(t), n = !0;\n          });\n        } catch (o) {\n          return void (n || e.reject(o));\n        }e.state = i, e.value = t, e.notify();\n      }\n    }, u.reject = function (t) {\n      var e = this;if (e.state === a) {\n        if (t === e) throw new TypeError(\"Promise settled with itself.\");e.state = s, e.value = t, e.notify();\n      }\n    }, u.notify = function () {\n      var t = this;o.nextTick(function () {\n        if (t.state !== a) for (; t.deferred.length;) {\n          var e = t.deferred.shift(),\n              n = e[0],\n              r = e[1],\n              o = e[2],\n              u = e[3];try {\n            t.state === i ? o(\"function\" == typeof n ? n.call(void 0, t.value) : t.value) : t.state === s && (\"function\" == typeof r ? o(r.call(void 0, t.value)) : u(t.value));\n          } catch (c) {\n            u(c);\n          }\n        }\n      });\n    }, u.then = function (t, e) {\n      var n = this;return new r(function (r, o) {\n        n.deferred.push([t, e, r, o]), n.notify();\n      });\n    }, u[\"catch\"] = function (t) {\n      return this.then(void 0, t);\n    }, t.exports = r;\n  }, function (t, e, n) {\n    var r = n(1),\n        o = n(10);t.exports = function (t) {\n      return new o(function (e) {\n        var n,\n            o = new XMLHttpRequest(),\n            i = { request: t };t.cancel = function () {\n          o.abort();\n        }, o.open(t.method, r.url(t), !0), n = function n(t) {\n          i.data = o.responseText, i.status = o.status, i.statusText = o.statusText, i.headers = o.getAllResponseHeaders(), e(i);\n        }, o.timeout = 0, o.onload = n, o.onabort = n, o.onerror = n, o.ontimeout = function () {}, o.onprogress = function () {}, r.isPlainObject(t.xhr) && r.extend(o, t.xhr), r.isPlainObject(t.upload) && r.extend(o.upload, t.upload), r.each(t.headers || {}, function (t, e) {\n          o.setRequestHeader(e, t);\n        }), o.send(t.data);\n      });\n    };\n  }, function (t, e, n) {\n    function r(t, e, n) {\n      var r = i.resolve(t);return arguments.length < 2 ? r : r.then(e, n);\n    }var o = n(1),\n        i = n(10);t.exports = function (t, e) {\n      return function (n) {\n        return o.isFunction(t) && (t = t.call(e, i)), function (i) {\n          return o.isFunction(t.request) && (i = t.request.call(e, i)), r(i, function (i) {\n            return r(n(i), function (n) {\n              return o.isFunction(t.response) && (n = t.response.call(e, n)), n;\n            });\n          });\n        };\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(1);t.exports = { request: function request(t) {\n        return r.isFunction(t.beforeSend) && t.beforeSend.call(this, t), t;\n      } };\n  }, function (t, e) {\n    t.exports = function () {\n      var t;return { request: function request(e) {\n          return e.timeout && (t = setTimeout(function () {\n            e.cancel();\n          }, e.timeout)), e;\n        }, response: function response(e) {\n          return clearTimeout(t), e;\n        } };\n    };\n  }, function (t, e, n) {\n    var r = n(17);t.exports = { request: function request(t) {\n        return \"JSONP\" == t.method && (t.client = r), t;\n      } };\n  }, function (t, e, n) {\n    var r = n(1),\n        o = n(10);t.exports = function (t) {\n      return new o(function (e) {\n        var n,\n            o,\n            i = \"_jsonp\" + Math.random().toString(36).substr(2),\n            s = { request: t, data: null };t.params[t.jsonp] = i, t.cancel = function () {\n          n({ type: \"cancel\" });\n        }, o = document.createElement(\"script\"), o.src = r.url(t), o.type = \"text/javascript\", o.async = !0, window[i] = function (t) {\n          s.data = t;\n        }, n = function n(t) {\n          \"load\" === t.type && null !== s.data ? s.status = 200 : \"error\" === t.type ? s.status = 404 : s.status = 0, e(s), delete window[i], document.body.removeChild(o);\n        }, o.onload = n, o.onerror = n, document.body.appendChild(o);\n      });\n    };\n  }, function (t, e) {\n    t.exports = { request: function request(t) {\n        return t.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(t.method) && (t.headers[\"X-HTTP-Method-Override\"] = t.method, t.method = \"POST\"), t;\n      } };\n  }, function (t, e, n) {\n    var r = n(1);t.exports = { request: function request(t) {\n        return t.emulateJSON && r.isPlainObject(t.data) && (t.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\", t.data = r.url.params(t.data)), r.isObject(t.data) && /FormData/i.test(t.data.toString()) && delete t.headers[\"Content-Type\"], r.isPlainObject(t.data) && (t.data = JSON.stringify(t.data)), t;\n      }, response: function response(t) {\n        try {\n          t.data = JSON.parse(t.data);\n        } catch (e) {}return t;\n      } };\n  }, function (t, e, n) {\n    var r = n(1);t.exports = { request: function request(t) {\n        return t.method = t.method.toUpperCase(), t.headers = r.extend({}, r.http.headers.common, t.crossOrigin ? {} : r.http.headers.custom, r.http.headers[t.method.toLowerCase()], t.headers), r.isPlainObject(t.data) && /^(GET|JSONP)$/i.test(t.method) && (r.extend(t.params, t.data), delete t.data), t;\n      } };\n  }, function (t, e, n) {\n    function r(t) {\n      var e = o.url.parse(o.url(t));return e.protocol !== a.protocol || e.host !== a.host;\n    }var o = n(1),\n        i = n(22),\n        s = \"withCredentials\" in new XMLHttpRequest(),\n        a = o.url.parse(location.href);t.exports = { request: function request(t) {\n        return null === t.crossOrigin && (t.crossOrigin = r(t)), t.crossOrigin && (s || (t.client = i), t.emulateHTTP = !1), t;\n      } };\n  }, function (t, e, n) {\n    var r = n(1),\n        o = n(10);t.exports = function (t) {\n      return new o(function (e) {\n        var n,\n            o = new XDomainRequest(),\n            i = { request: t };t.cancel = function () {\n          o.abort();\n        }, o.open(t.method, r.url(t), !0), n = function n(t) {\n          i.data = o.responseText, i.status = o.status, i.statusText = o.statusText, e(i);\n        }, o.timeout = 0, o.onload = n, o.onabort = n, o.onerror = n, o.ontimeout = function () {}, o.onprogress = function () {}, o.send(t.data);\n      });\n    };\n  }, function (t, e, n) {\n    function r(t, e, n, s) {\n      var a = this,\n          u = {};return n = i.extend({}, r.actions, n), i.each(n, function (n, r) {\n        n = i.merge({ url: t, params: e || {} }, s, n), u[r] = function () {\n          return (a.$http || i.http)(o(n, arguments));\n        };\n      }), u;\n    }function o(t, e) {\n      var n,\n          r,\n          o,\n          s = i.extend({}, t),\n          a = {};switch (e.length) {case 4:\n          o = e[3], r = e[2];case 3:case 2:\n          if (!i.isFunction(e[1])) {\n            a = e[0], n = e[1], r = e[2];break;\n          }if (i.isFunction(e[0])) {\n            r = e[0], o = e[1];break;\n          }r = e[1], o = e[2];case 1:\n          i.isFunction(e[0]) ? r = e[0] : /^(POST|PUT|PATCH)$/i.test(s.method) ? n = e[0] : a = e[0];break;case 0:\n          break;default:\n          throw \"Expected up to 4 arguments [params, data, success, error], got \" + e.length + \" arguments\";}return s.data = n, s.params = i.extend({}, s.params, a), r && (s.success = r), o && (s.error = o), s;\n    }var i = n(1);r.actions = { get: { method: \"GET\" }, save: { method: \"POST\" }, query: { method: \"GET\" }, update: { method: \"PUT\" }, remove: { method: \"DELETE\" }, \"delete\": { method: \"DELETE\" } }, t.exports = i.resource = r;\n  }]);\n});\n\n},{}],4:[function(require,module,exports){\n(function (global){\n'use strict';var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;}; /*!\n * Vue.js v1.0.17\n * (c) 2016 Evan You\n * Released under the MIT License.\n */(function(global,factory){(typeof exports==='undefined'?'undefined':_typeof(exports))==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):global.Vue=factory();})(undefined,function(){'use strict';function set(obj,key,val){if(hasOwn(obj,key)){obj[key]=val;return;}if(obj._isVue){set(obj._data,key,val);return;}var ob=obj.__ob__;if(!ob){obj[key]=val;return;}ob.convert(key,val);ob.dep.notify();if(ob.vms){var i=ob.vms.length;while(i--){var vm=ob.vms[i];vm._proxy(key);vm._digest();}}return val;} /**\n   * Delete a property and trigger change if necessary.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   */function del(obj,key){if(!hasOwn(obj,key)){return;}delete obj[key];var ob=obj.__ob__;if(!ob){return;}ob.dep.notify();if(ob.vms){var i=ob.vms.length;while(i--){var vm=ob.vms[i];vm._unproxy(key);vm._digest();}}}var hasOwnProperty=Object.prototype.hasOwnProperty; /**\n   * Check whether the object has the property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @return {Boolean}\n   */function hasOwn(obj,key){return hasOwnProperty.call(obj,key);} /**\n   * Check if an expression is a literal value.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */var literalValueRE=/^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;function isLiteral(exp){return literalValueRE.test(exp);} /**\n   * Check if a string starts with $ or _\n   *\n   * @param {String} str\n   * @return {Boolean}\n   */function isReserved(str){var c=(str+'').charCodeAt(0);return c===0x24||c===0x5F;} /**\n   * Guard text output, make sure undefined outputs\n   * empty string\n   *\n   * @param {*} value\n   * @return {String}\n   */function _toString(value){return value==null?'':value.toString();} /**\n   * Check and convert possible numeric strings to numbers\n   * before setting back to data\n   *\n   * @param {*} value\n   * @return {*|Number}\n   */function toNumber(value){if(typeof value!=='string'){return value;}else {var parsed=Number(value);return isNaN(parsed)?value:parsed;}} /**\n   * Convert string boolean literals into real booleans.\n   *\n   * @param {*} value\n   * @return {*|Boolean}\n   */function toBoolean(value){return value==='true'?true:value==='false'?false:value;} /**\n   * Strip quotes from a string\n   *\n   * @param {String} str\n   * @return {String | false}\n   */function stripQuotes(str){var a=str.charCodeAt(0);var b=str.charCodeAt(str.length-1);return a===b&&(a===0x22||a===0x27)?str.slice(1,-1):str;} /**\n   * Camelize a hyphen-delmited string.\n   *\n   * @param {String} str\n   * @return {String}\n   */var camelizeRE=/-(\\w)/g;function camelize(str){return str.replace(camelizeRE,toUpper);}function toUpper(_,c){return c?c.toUpperCase():'';} /**\n   * Hyphenate a camelCase string.\n   *\n   * @param {String} str\n   * @return {String}\n   */var hyphenateRE=/([a-z\\d])([A-Z])/g;function hyphenate(str){return str.replace(hyphenateRE,'$1-$2').toLowerCase();} /**\n   * Converts hyphen/underscore/slash delimitered names into\n   * camelized classNames.\n   *\n   * e.g. my-component => MyComponent\n   *      some_else    => SomeElse\n   *      some/comp    => SomeComp\n   *\n   * @param {String} str\n   * @return {String}\n   */var classifyRE=/(?:^|[-_\\/])(\\w)/g;function classify(str){return str.replace(classifyRE,toUpper);} /**\n   * Simple bind, faster than native\n   *\n   * @param {Function} fn\n   * @param {Object} ctx\n   * @return {Function}\n   */function bind(fn,ctx){return function(a){var l=arguments.length;return l?l>1?fn.apply(ctx,arguments):fn.call(ctx,a):fn.call(ctx);};} /**\n   * Convert an Array-like object to a real Array.\n   *\n   * @param {Array-like} list\n   * @param {Number} [start] - start index\n   * @return {Array}\n   */function toArray(list,start){start=start||0;var i=list.length-start;var ret=new Array(i);while(i--){ret[i]=list[i+start];}return ret;} /**\n   * Mix properties into target object.\n   *\n   * @param {Object} to\n   * @param {Object} from\n   */function extend(to,from){var keys=Object.keys(from);var i=keys.length;while(i--){to[keys[i]]=from[keys[i]];}return to;} /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */function isObject(obj){return obj!==null&&(typeof obj==='undefined'?'undefined':_typeof(obj))==='object';} /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */var toString=Object.prototype.toString;var OBJECT_STRING='[object Object]';function isPlainObject(obj){return toString.call(obj)===OBJECT_STRING;} /**\n   * Array type check.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */var isArray=Array.isArray; /**\n   * Define a non-enumerable property\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   * @param {Boolean} [enumerable]\n   */function def(obj,key,val,enumerable){Object.defineProperty(obj,key,{value:val,enumerable:!!enumerable,writable:true,configurable:true});} /**\n   * Debounce a function so it only gets called after the\n   * input stops arriving after the given wait period.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @return {Function} - the debounced function\n   */function _debounce(func,wait){var timeout,args,context,timestamp,result;var later=function later(){var last=Date.now()-timestamp;if(last<wait&&last>=0){timeout=setTimeout(later,wait-last);}else {timeout=null;result=func.apply(context,args);if(!timeout)context=args=null;}};return function(){context=this;args=arguments;timestamp=Date.now();if(!timeout){timeout=setTimeout(later,wait);}return result;};} /**\n   * Manual indexOf because it's slightly faster than\n   * native.\n   *\n   * @param {Array} arr\n   * @param {*} obj\n   */function indexOf(arr,obj){var i=arr.length;while(i--){if(arr[i]===obj)return i;}return -1;} /**\n   * Make a cancellable version of an async callback.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   */function cancellable(fn){var cb=function cb(){if(!cb.cancelled){return fn.apply(this,arguments);}};cb.cancel=function(){cb.cancelled=true;};return cb;} /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   *\n   * @param {*} a\n   * @param {*} b\n   * @return {Boolean}\n   */function looseEqual(a,b){ /* eslint-disable eqeqeq */return a==b||(isObject(a)&&isObject(b)?JSON.stringify(a)===JSON.stringify(b):false); /* eslint-enable eqeqeq */}var hasProto='__proto__' in {}; // Browser environment sniffing\nvar inBrowser=typeof window!=='undefined'&&Object.prototype.toString.call(window)!=='[object Object]'; // detect devtools\nvar devtools=inBrowser&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__; // UA sniffing for working around browser-specific quirks\nvar UA=inBrowser&&window.navigator.userAgent.toLowerCase();var isIE9=UA&&UA.indexOf('msie 9.0')>0;var isAndroid=UA&&UA.indexOf('android')>0;var transitionProp=undefined;var transitionEndEvent=undefined;var animationProp=undefined;var animationEndEvent=undefined; // Transition property/event sniffing\nif(inBrowser&&!isIE9){var isWebkitTrans=window.ontransitionend===undefined&&window.onwebkittransitionend!==undefined;var isWebkitAnim=window.onanimationend===undefined&&window.onwebkitanimationend!==undefined;transitionProp=isWebkitTrans?'WebkitTransition':'transition';transitionEndEvent=isWebkitTrans?'webkitTransitionEnd':'transitionend';animationProp=isWebkitAnim?'WebkitAnimation':'animation';animationEndEvent=isWebkitAnim?'webkitAnimationEnd':'animationend';} /**\n   * Defer a task to execute it asynchronously. Ideally this\n   * should be executed as a microtask, so we leverage\n   * MutationObserver if it's available, and fallback to\n   * setTimeout(0).\n   *\n   * @param {Function} cb\n   * @param {Object} ctx\n   */var nextTick=function(){var callbacks=[];var pending=false;var timerFunc;function nextTickHandler(){pending=false;var copies=callbacks.slice(0);callbacks=[];for(var i=0;i<copies.length;i++){copies[i]();}} /* istanbul ignore if */if(typeof MutationObserver!=='undefined'){var counter=1;var observer=new MutationObserver(nextTickHandler);var textNode=document.createTextNode(counter);observer.observe(textNode,{characterData:true});timerFunc=function timerFunc(){counter=(counter+1)%2;textNode.data=counter;};}else { // webpack attempts to inject a shim for setImmediate\n// if it is used as a global, so we have to work around that to\n// avoid bundling unnecessary code.\nvar context=inBrowser?window:typeof global!=='undefined'?global:{};timerFunc=context.setImmediate||setTimeout;}return function(cb,ctx){var func=ctx?function(){cb.call(ctx);}:cb;callbacks.push(func);if(pending)return;pending=true;timerFunc(nextTickHandler,0);};}();function Cache(limit){this.size=0;this.limit=limit;this.head=this.tail=undefined;this._keymap=Object.create(null);}var p=Cache.prototype; /**\n   * Put <value> into the cache associated with <key>.\n   * Returns the entry which was removed to make room for\n   * the new entry. Otherwise undefined is returned.\n   * (i.e. if there was enough room already).\n   *\n   * @param {String} key\n   * @param {*} value\n   * @return {Entry|undefined}\n   */p.put=function(key,value){var removed;if(this.size===this.limit){removed=this.shift();}var entry=this.get(key,true);if(!entry){entry={key:key};this._keymap[key]=entry;if(this.tail){this.tail.newer=entry;entry.older=this.tail;}else {this.head=entry;}this.tail=entry;this.size++;}entry.value=value;return removed;}; /**\n   * Purge the least recently used (oldest) entry from the\n   * cache. Returns the removed entry or undefined if the\n   * cache was empty.\n   */p.shift=function(){var entry=this.head;if(entry){this.head=this.head.newer;this.head.older=undefined;entry.newer=entry.older=undefined;this._keymap[entry.key]=undefined;this.size--;}return entry;}; /**\n   * Get and register recent use of <key>. Returns the value\n   * associated with <key> or undefined if not in cache.\n   *\n   * @param {String} key\n   * @param {Boolean} returnEntry\n   * @return {Entry|*}\n   */p.get=function(key,returnEntry){var entry=this._keymap[key];if(entry===undefined)return;if(entry===this.tail){return returnEntry?entry:entry.value;} // HEAD--------------TAIL\n//   <.older   .newer>\n//  <--- add direction --\n//   A  B  C  <D>  E\nif(entry.newer){if(entry===this.head){this.head=entry.newer;}entry.newer.older=entry.older; // C <-- E.\n}if(entry.older){entry.older.newer=entry.newer; // C. --> E\n}entry.newer=undefined; // D --x\nentry.older=this.tail; // D. --> E\nif(this.tail){this.tail.newer=entry; // E. <-- D\n}this.tail=entry;return returnEntry?entry:entry.value;};var cache$1=new Cache(1000);var filterTokenRE=/[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;var reservedArgRE=/^in$|^-?\\d+/; /**\n   * Parser state\n   */var str;var dir;var c;var prev;var i;var l;var lastFilterIndex;var inSingle;var inDouble;var curly;var square;var paren; /**\n   * Push a filter to the current directive object\n   */function pushFilter(){var exp=str.slice(lastFilterIndex,i).trim();var filter;if(exp){filter={};var tokens=exp.match(filterTokenRE);filter.name=tokens[0];if(tokens.length>1){filter.args=tokens.slice(1).map(processFilterArg);}}if(filter){(dir.filters=dir.filters||[]).push(filter);}lastFilterIndex=i+1;} /**\n   * Check if an argument is dynamic and strip quotes.\n   *\n   * @param {String} arg\n   * @return {Object}\n   */function processFilterArg(arg){if(reservedArgRE.test(arg)){return {value:toNumber(arg),dynamic:false};}else {var stripped=stripQuotes(arg);var dynamic=stripped===arg;return {value:dynamic?arg:stripped,dynamic:dynamic};}} /**\n   * Parse a directive value and extract the expression\n   * and its filters into a descriptor.\n   *\n   * Example:\n   *\n   * \"a + 1 | uppercase\" will yield:\n   * {\n   *   expression: 'a + 1',\n   *   filters: [\n   *     { name: 'uppercase', args: null }\n   *   ]\n   * }\n   *\n   * @param {String} str\n   * @return {Object}\n   */function parseDirective(s){var hit=cache$1.get(s);if(hit){return hit;} // reset parser state\nstr=s;inSingle=inDouble=false;curly=square=paren=0;lastFilterIndex=0;dir={};for(i=0,l=str.length;i<l;i++){prev=c;c=str.charCodeAt(i);if(inSingle){ // check single quote\nif(c===0x27&&prev!==0x5C)inSingle=!inSingle;}else if(inDouble){ // check double quote\nif(c===0x22&&prev!==0x5C)inDouble=!inDouble;}else if(c===0x7C&& // pipe\nstr.charCodeAt(i+1)!==0x7C&&str.charCodeAt(i-1)!==0x7C){if(dir.expression==null){ // first filter, end of expression\nlastFilterIndex=i+1;dir.expression=str.slice(0,i).trim();}else { // already has filter\npushFilter();}}else {switch(c){case 0x22:inDouble=true;break; // \"\ncase 0x27:inSingle=true;break; // '\ncase 0x28:paren++;break; // (\ncase 0x29:paren--;break; // )\ncase 0x5B:square++;break; // [\ncase 0x5D:square--;break; // ]\ncase 0x7B:curly++;break; // {\ncase 0x7D:curly--;break; // }\n}}}if(dir.expression==null){dir.expression=str.slice(0,i).trim();}else if(lastFilterIndex!==0){pushFilter();}cache$1.put(s,dir);return dir;}var directive=Object.freeze({parseDirective:parseDirective});var regexEscapeRE=/[-.*+?^${}()|[\\]\\/\\\\]/g;var cache=undefined;var tagRE=undefined;var htmlRE=undefined; /**\n   * Escape a string so it can be used in a RegExp\n   * constructor.\n   *\n   * @param {String} str\n   */function escapeRegex(str){return str.replace(regexEscapeRE,'\\\\$&');}function compileRegex(){var open=escapeRegex(config.delimiters[0]);var close=escapeRegex(config.delimiters[1]);var unsafeOpen=escapeRegex(config.unsafeDelimiters[0]);var unsafeClose=escapeRegex(config.unsafeDelimiters[1]);tagRE=new RegExp(unsafeOpen+'(.+?)'+unsafeClose+'|'+open+'(.+?)'+close,'g');htmlRE=new RegExp('^'+unsafeOpen+'.*'+unsafeClose+'$'); // reset cache\ncache=new Cache(1000);} /**\n   * Parse a template text string into an array of tokens.\n   *\n   * @param {String} text\n   * @return {Array<Object> | null}\n   *               - {String} type\n   *               - {String} value\n   *               - {Boolean} [html]\n   *               - {Boolean} [oneTime]\n   */function parseText(text){if(!cache){compileRegex();}var hit=cache.get(text);if(hit){return hit;}text=text.replace(/\\n/g,'');if(!tagRE.test(text)){return null;}var tokens=[];var lastIndex=tagRE.lastIndex=0;var match,index,html,value,first,oneTime; /* eslint-disable no-cond-assign */while(match=tagRE.exec(text)){ /* eslint-enable no-cond-assign */index=match.index; // push text token\nif(index>lastIndex){tokens.push({value:text.slice(lastIndex,index)});} // tag token\nhtml=htmlRE.test(match[0]);value=html?match[1]:match[2];first=value.charCodeAt(0);oneTime=first===42; // *\nvalue=oneTime?value.slice(1):value;tokens.push({tag:true,value:value.trim(),html:html,oneTime:oneTime});lastIndex=index+match[0].length;}if(lastIndex<text.length){tokens.push({value:text.slice(lastIndex)});}cache.put(text,tokens);return tokens;} /**\n   * Format a list of tokens into an expression.\n   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n   * into one single expression as '\"a \" + b + \" c\"'.\n   *\n   * @param {Array} tokens\n   * @param {Vue} [vm]\n   * @return {String}\n   */function tokensToExp(tokens,vm){if(tokens.length>1){return tokens.map(function(token){return formatToken(token,vm);}).join('+');}else {return formatToken(tokens[0],vm,true);}} /**\n   * Format a single token.\n   *\n   * @param {Object} token\n   * @param {Vue} [vm]\n   * @param {Boolean} [single]\n   * @return {String}\n   */function formatToken(token,vm,single){return token.tag?token.oneTime&&vm?'\"'+vm.$eval(token.value)+'\"':inlineFilters(token.value,single):'\"'+token.value+'\"';} /**\n   * For an attribute with multiple interpolation tags,\n   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n   * the whole thing into a single watchable expression, we\n   * have to inline those filters. This function does exactly\n   * that. This is a bit hacky but it avoids heavy changes\n   * to directive parser and watcher mechanism.\n   *\n   * @param {String} exp\n   * @param {Boolean} single\n   * @return {String}\n   */var filterRE=/[^|]\\|[^|]/;function inlineFilters(exp,single){if(!filterRE.test(exp)){return single?exp:'('+exp+')';}else {var dir=parseDirective(exp);if(!dir.filters){return '('+exp+')';}else {return 'this._applyFilters('+dir.expression+ // value\n',null,'+ // oldValue (null for read)\nJSON.stringify(dir.filters)+ // filter descriptors\n',false)'; // write?\n}}}var text=Object.freeze({compileRegex:compileRegex,parseText:parseText,tokensToExp:tokensToExp});var delimiters=['{{','}}'];var unsafeDelimiters=['{{{','}}}'];var config=Object.defineProperties({ /**\n     * Whether to print debug messages.\n     * Also enables stack trace for warnings.\n     *\n     * @type {Boolean}\n     */debug:false, /**\n     * Whether to suppress warnings.\n     *\n     * @type {Boolean}\n     */silent:false, /**\n     * Whether to use async rendering.\n     */async:true, /**\n     * Whether to warn against errors caught when evaluating\n     * expressions.\n     */warnExpressionErrors:true, /**\n     * Internal flag to indicate the delimiters have been\n     * changed.\n     *\n     * @type {Boolean}\n     */_delimitersChanged:true, /**\n     * List of asset types that a component can own.\n     *\n     * @type {Array}\n     */_assetTypes:['component','directive','elementDirective','filter','transition','partial'], /**\n     * prop binding modes\n     */_propBindingModes:{ONE_WAY:0,TWO_WAY:1,ONE_TIME:2}, /**\n     * Max circular updates allowed in a batcher flush cycle.\n     */_maxUpdateCount:100},{delimiters:{ /**\n                   * Interpolation delimiters. Changing these would trigger\n                   * the text parser to re-compile the regular expressions.\n                   *\n                   * @type {Array<String>}\n                   */get:function get(){return delimiters;},set:function set(val){delimiters=val;compileRegex();},configurable:true,enumerable:true},unsafeDelimiters:{get:function get(){return unsafeDelimiters;},set:function set(val){unsafeDelimiters=val;compileRegex();},configurable:true,enumerable:true}});var warn=undefined;if('development'!=='production'){(function(){var hasConsole=typeof console!=='undefined';warn=function warn(msg,e){if(hasConsole&&(!config.silent||config.debug)){console.warn('[Vue warn]: '+msg); /* istanbul ignore if */if(config.debug){if(e){throw e;}else {console.warn(new Error('Warning Stack Trace').stack);}}}};})();} /**\n   * Append with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */function appendWithTransition(el,target,vm,cb){applyTransition(el,1,function(){target.appendChild(el);},vm,cb);} /**\n   * InsertBefore with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */function beforeWithTransition(el,target,vm,cb){applyTransition(el,1,function(){before(el,target);},vm,cb);} /**\n   * Remove with transition.\n   *\n   * @param {Element} el\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */function removeWithTransition(el,vm,cb){applyTransition(el,-1,function(){remove(el);},vm,cb);} /**\n   * Apply transitions with an operation callback.\n   *\n   * @param {Element} el\n   * @param {Number} direction\n   *                  1: enter\n   *                 -1: leave\n   * @param {Function} op - the actual DOM operation\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */function applyTransition(el,direction,op,vm,cb){var transition=el.__v_trans;if(!transition|| // skip if there are no js hooks and CSS transition is\n// not supported\n!transition.hooks&&!transitionEndEvent|| // skip transitions for initial compile\n!vm._isCompiled|| // if the vm is being manipulated by a parent directive\n// during the parent's compilation phase, skip the\n// animation.\nvm.$parent&&!vm.$parent._isCompiled){op();if(cb)cb();return;}var action=direction>0?'enter':'leave';transition[action](op,cb);}var transition=Object.freeze({appendWithTransition:appendWithTransition,beforeWithTransition:beforeWithTransition,removeWithTransition:removeWithTransition,applyTransition:applyTransition}); /**\n   * Query an element selector if it's not an element already.\n   *\n   * @param {String|Element} el\n   * @return {Element}\n   */function query(el){if(typeof el==='string'){var selector=el;el=document.querySelector(el);if(!el){'development'!=='production'&&warn('Cannot find element: '+selector);}}return el;} /**\n   * Check if a node is in the document.\n   * Note: document.documentElement.contains should work here\n   * but always returns false for comment nodes in phantomjs,\n   * making unit tests difficult. This is fixed by doing the\n   * contains() check on the node's parentNode instead of\n   * the node itself.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */function inDoc(node){var doc=document.documentElement;var parent=node&&node.parentNode;return doc===node||doc===parent||!!(parent&&parent.nodeType===1&&doc.contains(parent));} /**\n   * Get and remove an attribute from a node.\n   *\n   * @param {Node} node\n   * @param {String} _attr\n   */function getAttr(node,_attr){var val=node.getAttribute(_attr);if(val!==null){node.removeAttribute(_attr);}return val;} /**\n   * Get an attribute with colon or v-bind: prefix.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {String|null}\n   */function getBindAttr(node,name){var val=getAttr(node,':'+name);if(val===null){val=getAttr(node,'v-bind:'+name);}return val;} /**\n   * Check the presence of a bind attribute.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {Boolean}\n   */function hasBindAttr(node,name){return node.hasAttribute(name)||node.hasAttribute(':'+name)||node.hasAttribute('v-bind:'+name);} /**\n   * Insert el before target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */function before(el,target){target.parentNode.insertBefore(el,target);} /**\n   * Insert el after target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */function after(el,target){if(target.nextSibling){before(el,target.nextSibling);}else {target.parentNode.appendChild(el);}} /**\n   * Remove el from DOM\n   *\n   * @param {Element} el\n   */function remove(el){el.parentNode.removeChild(el);} /**\n   * Prepend el to target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */function prepend(el,target){if(target.firstChild){before(el,target.firstChild);}else {target.appendChild(el);}} /**\n   * Replace target with el\n   *\n   * @param {Element} target\n   * @param {Element} el\n   */function replace(target,el){var parent=target.parentNode;if(parent){parent.replaceChild(el,target);}} /**\n   * Add event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   * @param {Boolean} [useCapture]\n   */function on(el,event,cb,useCapture){el.addEventListener(event,cb,useCapture);} /**\n   * Remove event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */function off(el,event,cb){el.removeEventListener(event,cb);} /**\n   * In IE9, setAttribute('class') will result in empty class\n   * if the element also has the :class attribute; However in\n   * PhantomJS, setting `className` does not work on SVG elements...\n   * So we have to do a conditional check here.\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */function setClass(el,cls){ /* istanbul ignore if */if(isIE9&&!/svg$/.test(el.namespaceURI)){el.className=cls;}else {el.setAttribute('class',cls);}} /**\n   * Add class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */function addClass(el,cls){if(el.classList){el.classList.add(cls);}else {var cur=' '+(el.getAttribute('class')||'')+' ';if(cur.indexOf(' '+cls+' ')<0){setClass(el,(cur+cls).trim());}}} /**\n   * Remove class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */function removeClass(el,cls){if(el.classList){el.classList.remove(cls);}else {var cur=' '+(el.getAttribute('class')||'')+' ';var tar=' '+cls+' ';while(cur.indexOf(tar)>=0){cur=cur.replace(tar,' ');}setClass(el,cur.trim());}if(!el.className){el.removeAttribute('class');}} /**\n   * Extract raw content inside an element into a temporary\n   * container div\n   *\n   * @param {Element} el\n   * @param {Boolean} asFragment\n   * @return {Element|DocumentFragment}\n   */function extractContent(el,asFragment){var child;var rawContent; /* istanbul ignore if */if(isTemplate(el)&&isFragment(el.content)){el=el.content;}if(el.hasChildNodes()){trimNode(el);rawContent=asFragment?document.createDocumentFragment():document.createElement('div'); /* eslint-disable no-cond-assign */while(child=el.firstChild){ /* eslint-enable no-cond-assign */rawContent.appendChild(child);}}return rawContent;} /**\n   * Trim possible empty head/tail text and comment\n   * nodes inside a parent.\n   *\n   * @param {Node} node\n   */function trimNode(node){var child; /* eslint-disable no-sequences */while(child=node.firstChild,isTrimmable(child)){node.removeChild(child);}while(child=node.lastChild,isTrimmable(child)){node.removeChild(child);} /* eslint-enable no-sequences */}function isTrimmable(node){return node&&(node.nodeType===3&&!node.data.trim()||node.nodeType===8);} /**\n   * Check if an element is a template tag.\n   * Note if the template appears inside an SVG its tagName\n   * will be in lowercase.\n   *\n   * @param {Element} el\n   */function isTemplate(el){return el.tagName&&el.tagName.toLowerCase()==='template';} /**\n   * Create an \"anchor\" for performing dom insertion/removals.\n   * This is used in a number of scenarios:\n   * - fragment instance\n   * - v-html\n   * - v-if\n   * - v-for\n   * - component\n   *\n   * @param {String} content\n   * @param {Boolean} persist - IE trashes empty textNodes on\n   *                            cloneNode(true), so in certain\n   *                            cases the anchor needs to be\n   *                            non-empty to be persisted in\n   *                            templates.\n   * @return {Comment|Text}\n   */function createAnchor(content,persist){var anchor=config.debug?document.createComment(content):document.createTextNode(persist?' ':'');anchor.__v_anchor=true;return anchor;} /**\n   * Find a component ref attribute that starts with $.\n   *\n   * @param {Element} node\n   * @return {String|undefined}\n   */var refRE=/^v-ref:/;function findRef(node){if(node.hasAttributes()){var attrs=node.attributes;for(var i=0,l=attrs.length;i<l;i++){var name=attrs[i].name;if(refRE.test(name)){return camelize(name.replace(refRE,''));}}}} /**\n   * Map a function to a range of nodes .\n   *\n   * @param {Node} node\n   * @param {Node} end\n   * @param {Function} op\n   */function mapNodeRange(node,end,op){var next;while(node!==end){next=node.nextSibling;op(node);node=next;}op(end);} /**\n   * Remove a range of nodes with transition, store\n   * the nodes in a fragment with correct ordering,\n   * and call callback when done.\n   *\n   * @param {Node} start\n   * @param {Node} end\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Function} cb\n   */function removeNodeRange(start,end,vm,frag,cb){var done=false;var removed=0;var nodes=[];mapNodeRange(start,end,function(node){if(node===end)done=true;nodes.push(node);removeWithTransition(node,vm,onRemoved);});function onRemoved(){removed++;if(done&&removed>=nodes.length){for(var i=0;i<nodes.length;i++){frag.appendChild(nodes[i]);}cb&&cb();}}} /**\n   * Check if a node is a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */function isFragment(node){return node&&node.nodeType===11;} /**\n   * Get outerHTML of elements, taking care\n   * of SVG elements in IE as well.\n   *\n   * @param {Element} el\n   * @return {String}\n   */function getOuterHTML(el){if(el.outerHTML){return el.outerHTML;}else {var container=document.createElement('div');container.appendChild(el.cloneNode(true));return container.innerHTML;}}var commonTagRE=/^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;var reservedTagRE=/^(slot|partial|component)$/;var isUnknownElement=undefined;if('development'!=='production'){isUnknownElement=function isUnknownElement(el,tag){if(tag.indexOf('-')>-1){ // http://stackoverflow.com/a/28210364/1070244\nreturn el.constructor===window.HTMLUnknownElement||el.constructor===window.HTMLElement;}else {return (/HTMLUnknownElement/.test(el.toString())&& // Chrome returns unknown for several HTML5 elements.\n// https://code.google.com/p/chromium/issues/detail?id=540526\n!/^(data|time|rtc|rb)$/.test(tag));}};} /**\n   * Check if an element is a component, if yes return its\n   * component id.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */function checkComponentAttr(el,options){var tag=el.tagName.toLowerCase();var hasAttrs=el.hasAttributes();if(!commonTagRE.test(tag)&&!reservedTagRE.test(tag)){if(resolveAsset(options,'components',tag)){return {id:tag};}else {var is=hasAttrs&&getIsBinding(el);if(is){return is;}else if('development'!=='production'){var expectedTag=options._componentNameMap&&options._componentNameMap[tag];if(expectedTag){warn('Unknown custom element: <'+tag+'> - '+'did you mean <'+expectedTag+'>? '+'HTML is case-insensitive, remember to use kebab-case in templates.');}else if(isUnknownElement(el,tag)){warn('Unknown custom element: <'+tag+'> - did you '+'register the component correctly? For recursive components, '+'make sure to provide the \"name\" option.');}}}}else if(hasAttrs){return getIsBinding(el);}} /**\n   * Get \"is\" binding from an element.\n   *\n   * @param {Element} el\n   * @return {Object|undefined}\n   */function getIsBinding(el){ // dynamic syntax\nvar exp=getAttr(el,'is');if(exp!=null){return {id:exp};}else {exp=getBindAttr(el,'is');if(exp!=null){return {id:exp,dynamic:true};}}} /**\n   * Set a prop's initial value on a vm and its data object.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */function initProp(vm,prop,value){var key=prop.path;value=coerceProp(prop,value);vm[key]=vm._data[key]=assertProp(prop,value)?value:undefined;} /**\n   * Assert whether a prop is valid.\n   *\n   * @param {Object} prop\n   * @param {*} value\n   */function assertProp(prop,value){if(!prop.options.required&&( // non-required\nprop.raw===null|| // abscent\nvalue==null) // null or undefined\n){return true;}var options=prop.options;var type=options.type;var valid=true;var expectedType;if(type){if(type===String){expectedType='string';valid=(typeof value==='undefined'?'undefined':_typeof(value))===expectedType;}else if(type===Number){expectedType='number';valid=typeof value==='number';}else if(type===Boolean){expectedType='boolean';valid=typeof value==='boolean';}else if(type===Function){expectedType='function';valid=typeof value==='function';}else if(type===Object){expectedType='object';valid=isPlainObject(value);}else if(type===Array){expectedType='array';valid=isArray(value);}else {valid=value instanceof type;}}if(!valid){'development'!=='production'&&warn('Invalid prop: type check failed for '+prop.path+'=\"'+prop.raw+'\".'+' Expected '+formatType(expectedType)+', got '+formatValue(value)+'.');return false;}var validator=options.validator;if(validator){if(!validator(value)){'development'!=='production'&&warn('Invalid prop: custom validator check failed for '+prop.path+'=\"'+prop.raw+'\"');return false;}}return true;} /**\n   * Force parsing value with coerce option.\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @return {*}\n   */function coerceProp(prop,value){var coerce=prop.options.coerce;if(!coerce){return value;} // coerce is a function\nreturn coerce(value);}function formatType(val){return val?val.charAt(0).toUpperCase()+val.slice(1):'custom type';}function formatValue(val){return Object.prototype.toString.call(val).slice(8,-1);} /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   *\n   * All strategy functions follow the same signature:\n   *\n   * @param {*} parentVal\n   * @param {*} childVal\n   * @param {Vue} [vm]\n   */var strats=config.optionMergeStrategies=Object.create(null); /**\n   * Helper that recursively merges two data objects together.\n   */function mergeData(to,from){var key,toVal,fromVal;for(key in from){toVal=to[key];fromVal=from[key];if(!hasOwn(to,key)){set(to,key,fromVal);}else if(isObject(toVal)&&isObject(fromVal)){mergeData(toVal,fromVal);}}return to;} /**\n   * Data\n   */strats.data=function(parentVal,childVal,vm){if(!vm){ // in a Vue.extend merge, both should be functions\nif(!childVal){return parentVal;}if(typeof childVal!=='function'){'development'!=='production'&&warn('The \"data\" option should be a function '+'that returns a per-instance value in component '+'definitions.');return parentVal;}if(!parentVal){return childVal;} // when parentVal & childVal are both present,\n// we need to return a function that returns the\n// merged result of both functions... no need to\n// check if parentVal is a function here because\n// it has to be a function to pass previous merges.\nreturn function mergedDataFn(){return mergeData(childVal.call(this),parentVal.call(this));};}else if(parentVal||childVal){return function mergedInstanceDataFn(){ // instance merge\nvar instanceData=typeof childVal==='function'?childVal.call(vm):childVal;var defaultData=typeof parentVal==='function'?parentVal.call(vm):undefined;if(instanceData){return mergeData(instanceData,defaultData);}else {return defaultData;}};}}; /**\n   * El\n   */strats.el=function(parentVal,childVal,vm){if(!vm&&childVal&&typeof childVal!=='function'){'development'!=='production'&&warn('The \"el\" option should be a function '+'that returns a per-instance value in component '+'definitions.');return;}var ret=childVal||parentVal; // invoke the element factory if this is instance merge\nreturn vm&&typeof ret==='function'?ret.call(vm):ret;}; /**\n   * Hooks and param attributes are merged as arrays.\n   */strats.init=strats.created=strats.ready=strats.attached=strats.detached=strats.beforeCompile=strats.compiled=strats.beforeDestroy=strats.destroyed=strats.activate=function(parentVal,childVal){return childVal?parentVal?parentVal.concat(childVal):isArray(childVal)?childVal:[childVal]:parentVal;}; /**\n   * 0.11 deprecation warning\n   */strats.paramAttributes=function(){ /* istanbul ignore next */'development'!=='production'&&warn('\"paramAttributes\" option has been deprecated in 0.12. '+'Use \"props\" instead.');}; /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */function mergeAssets(parentVal,childVal){var res=Object.create(parentVal);return childVal?extend(res,guardArrayAssets(childVal)):res;}config._assetTypes.forEach(function(type){strats[type+'s']=mergeAssets;}); /**\n   * Events & Watchers.\n   *\n   * Events & watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */strats.watch=strats.events=function(parentVal,childVal){if(!childVal)return parentVal;if(!parentVal)return childVal;var ret={};extend(ret,parentVal);for(var key in childVal){var parent=ret[key];var child=childVal[key];if(parent&&!isArray(parent)){parent=[parent];}ret[key]=parent?parent.concat(child):[child];}return ret;}; /**\n   * Other object hashes.\n   */strats.props=strats.methods=strats.computed=function(parentVal,childVal){if(!childVal)return parentVal;if(!parentVal)return childVal;var ret=Object.create(null);extend(ret,parentVal);extend(ret,childVal);return ret;}; /**\n   * Default strategy.\n   */var defaultStrat=function defaultStrat(parentVal,childVal){return childVal===undefined?parentVal:childVal;}; /**\n   * Make sure component options get converted to actual\n   * constructors.\n   *\n   * @param {Object} options\n   */function guardComponents(options){if(options.components){var components=options.components=guardArrayAssets(options.components);var ids=Object.keys(components);var def;if('development'!=='production'){var map=options._componentNameMap={};}for(var i=0,l=ids.length;i<l;i++){var key=ids[i];if(commonTagRE.test(key)||reservedTagRE.test(key)){'development'!=='production'&&warn('Do not use built-in or reserved HTML elements as component '+'id: '+key);continue;} // record a all lowercase <-> kebab-case mapping for\n// possible custom element case error warning\nif('development'!=='production'){map[key.replace(/-/g,'').toLowerCase()]=hyphenate(key);}def=components[key];if(isPlainObject(def)){components[key]=Vue.extend(def);}}}} /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   *\n   * @param {Object} options\n   */function guardProps(options){var props=options.props;var i,val;if(isArray(props)){options.props={};i=props.length;while(i--){val=props[i];if(typeof val==='string'){options.props[val]=null;}else if(val.name){options.props[val.name]=val;}}}else if(isPlainObject(props)){var keys=Object.keys(props);i=keys.length;while(i--){val=props[keys[i]];if(typeof val==='function'){props[keys[i]]={type:val};}}}} /**\n   * Guard an Array-format assets option and converted it\n   * into the key-value Object format.\n   *\n   * @param {Object|Array} assets\n   * @return {Object}\n   */function guardArrayAssets(assets){if(isArray(assets)){var res={};var i=assets.length;var asset;while(i--){asset=assets[i];var id=typeof asset==='function'?asset.options&&asset.options.name||asset.id:asset.name||asset.id;if(!id){'development'!=='production'&&warn('Array-syntax assets must provide a \"name\" or \"id\" field.');}else {res[id]=asset;}}return res;}return assets;} /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   *\n   * @param {Object} parent\n   * @param {Object} child\n   * @param {Vue} [vm] - if vm is present, indicates this is\n   *                     an instantiation merge.\n   */function mergeOptions(parent,child,vm){guardComponents(child);guardProps(child);var options={};var key;if(child.mixins){for(var i=0,l=child.mixins.length;i<l;i++){parent=mergeOptions(parent,child.mixins[i],vm);}}for(key in parent){mergeField(key);}for(key in child){if(!hasOwn(parent,key)){mergeField(key);}}function mergeField(key){var strat=strats[key]||defaultStrat;options[key]=strat(parent[key],child[key],vm,key);}return options;} /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   *\n   * @param {Object} options\n   * @param {String} type\n   * @param {String} id\n   * @return {Object|Function}\n   */function resolveAsset(options,type,id){ /* istanbul ignore if */if(typeof id!=='string'){return;}var assets=options[type];var camelizedId;return assets[id]|| // camelCase ID\nassets[camelizedId=camelize(id)]|| // Pascal Case ID\nassets[camelizedId.charAt(0).toUpperCase()+camelizedId.slice(1)];} /**\n   * Assert asset exists\n   */function assertAsset(val,type,id){if(!val){'development'!=='production'&&warn('Failed to resolve '+type+': '+id);}}var uid$1=0; /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   *\n   * @constructor\n   */function Dep(){this.id=uid$1++;this.subs=[];} // the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target=null; /**\n   * Add a directive subscriber.\n   *\n   * @param {Directive} sub\n   */Dep.prototype.addSub=function(sub){this.subs.push(sub);}; /**\n   * Remove a directive subscriber.\n   *\n   * @param {Directive} sub\n   */Dep.prototype.removeSub=function(sub){this.subs.$remove(sub);}; /**\n   * Add self as a dependency to the target watcher.\n   */Dep.prototype.depend=function(){Dep.target.addDep(this);}; /**\n   * Notify all subscribers of a new value.\n   */Dep.prototype.notify=function(){ // stablize the subscriber list first\nvar subs=toArray(this.subs);for(var i=0,l=subs.length;i<l;i++){subs[i].update();}};var arrayProto=Array.prototype;var arrayMethods=Object.create(arrayProto) /**\n   * Intercept mutating methods and emit events\n   */;['push','pop','shift','unshift','splice','sort','reverse'].forEach(function(method){ // cache original method\nvar original=arrayProto[method];def(arrayMethods,method,function mutator(){ // avoid leaking arguments:\n// http://jsperf.com/closure-with-arguments\nvar i=arguments.length;var args=new Array(i);while(i--){args[i]=arguments[i];}var result=original.apply(this,args);var ob=this.__ob__;var inserted;switch(method){case 'push':inserted=args;break;case 'unshift':inserted=args;break;case 'splice':inserted=args.slice(2);break;}if(inserted)ob.observeArray(inserted); // notify change\nob.dep.notify();return result;});}); /**\n   * Swap the element at the given index with a new value\n   * and emits corresponding event.\n   *\n   * @param {Number} index\n   * @param {*} val\n   * @return {*} - replaced element\n   */def(arrayProto,'$set',function $set(index,val){if(index>=this.length){this.length=Number(index)+1;}return this.splice(index,1,val)[0];}); /**\n   * Convenience method to remove the element at given index.\n   *\n   * @param {Number} index\n   * @param {*} val\n   */def(arrayProto,'$remove',function $remove(item){ /* istanbul ignore if */if(!this.length)return;var index=indexOf(this,item);if(index>-1){return this.splice(index,1);}});var arrayKeys=Object.getOwnPropertyNames(arrayMethods); /**\n   * Observer class that are attached to each observed\n   * object. Once attached, the observer converts target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatches updates.\n   *\n   * @param {Array|Object} value\n   * @constructor\n   */function Observer(value){this.value=value;this.dep=new Dep();def(value,'__ob__',this);if(isArray(value)){var augment=hasProto?protoAugment:copyAugment;augment(value,arrayMethods,arrayKeys);this.observeArray(value);}else {this.walk(value);}} // Instance methods\n/**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} obj\n   */Observer.prototype.walk=function(obj){var keys=Object.keys(obj);for(var i=0,l=keys.length;i<l;i++){this.convert(keys[i],obj[keys[i]]);}}; /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */Observer.prototype.observeArray=function(items){for(var i=0,l=items.length;i<l;i++){observe(items[i]);}}; /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} val\n   */Observer.prototype.convert=function(key,val){defineReactive(this.value,key,val);}; /**\n   * Add an owner vm, so that when $set/$delete mutations\n   * happen we can notify owner vms to proxy the keys and\n   * digest the watchers. This is only called when the object\n   * is observed as an instance's root $data.\n   *\n   * @param {Vue} vm\n   */Observer.prototype.addVm=function(vm){(this.vms||(this.vms=[])).push(vm);}; /**\n   * Remove an owner vm. This is called when the object is\n   * swapped out as an instance's $data object.\n   *\n   * @param {Vue} vm\n   */Observer.prototype.removeVm=function(vm){this.vms.$remove(vm);}; // helpers\n/**\n   * Augment an target Object or Array by intercepting\n   * the prototype chain using __proto__\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */function protoAugment(target,src){ /* eslint-disable no-proto */target.__proto__=src; /* eslint-enable no-proto */} /**\n   * Augment an target Object or Array by defining\n   * hidden properties.\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */function copyAugment(target,src,keys){for(var i=0,l=keys.length;i<l;i++){var key=keys[i];def(target,key,src[key]);}} /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   *\n   * @param {*} value\n   * @param {Vue} [vm]\n   * @return {Observer|undefined}\n   * @static\n   */function observe(value,vm){if(!value||(typeof value==='undefined'?'undefined':_typeof(value))!=='object'){return;}var ob;if(hasOwn(value,'__ob__')&&value.__ob__ instanceof Observer){ob=value.__ob__;}else if((isArray(value)||isPlainObject(value))&&Object.isExtensible(value)&&!value._isVue){ob=new Observer(value);}if(ob&&vm){ob.addVm(vm);}return ob;} /**\n   * Define a reactive property on an Object.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   */function defineReactive(obj,key,val){var dep=new Dep();var property=Object.getOwnPropertyDescriptor(obj,key);if(property&&property.configurable===false){return;} // cater for pre-defined getter/setters\nvar getter=property&&property.get;var setter=property&&property.set;var childOb=observe(val);Object.defineProperty(obj,key,{enumerable:true,configurable:true,get:function reactiveGetter(){var value=getter?getter.call(obj):val;if(Dep.target){dep.depend();if(childOb){childOb.dep.depend();}if(isArray(value)){for(var e,i=0,l=value.length;i<l;i++){e=value[i];e&&e.__ob__&&e.__ob__.dep.depend();}}}return value;},set:function reactiveSetter(newVal){var value=getter?getter.call(obj):val;if(newVal===value){return;}if(setter){setter.call(obj,newVal);}else {val=newVal;}childOb=observe(newVal);dep.notify();}});}var util=Object.freeze({defineReactive:defineReactive,set:set,del:del,hasOwn:hasOwn,isLiteral:isLiteral,isReserved:isReserved,_toString:_toString,toNumber:toNumber,toBoolean:toBoolean,stripQuotes:stripQuotes,camelize:camelize,hyphenate:hyphenate,classify:classify,bind:bind,toArray:toArray,extend:extend,isObject:isObject,isPlainObject:isPlainObject,def:def,debounce:_debounce,indexOf:indexOf,cancellable:cancellable,looseEqual:looseEqual,isArray:isArray,hasProto:hasProto,inBrowser:inBrowser,devtools:devtools,isIE9:isIE9,isAndroid:isAndroid,get transitionProp(){return transitionProp;},get transitionEndEvent(){return transitionEndEvent;},get animationProp(){return animationProp;},get animationEndEvent(){return animationEndEvent;},nextTick:nextTick,query:query,inDoc:inDoc,getAttr:getAttr,getBindAttr:getBindAttr,hasBindAttr:hasBindAttr,before:before,after:after,remove:remove,prepend:prepend,replace:replace,on:on,off:off,setClass:setClass,addClass:addClass,removeClass:removeClass,extractContent:extractContent,trimNode:trimNode,isTemplate:isTemplate,createAnchor:createAnchor,findRef:findRef,mapNodeRange:mapNodeRange,removeNodeRange:removeNodeRange,isFragment:isFragment,getOuterHTML:getOuterHTML,mergeOptions:mergeOptions,resolveAsset:resolveAsset,assertAsset:assertAsset,checkComponentAttr:checkComponentAttr,initProp:initProp,assertProp:assertProp,coerceProp:coerceProp,commonTagRE:commonTagRE,reservedTagRE:reservedTagRE,get warn(){return warn;}});var uid=0;function initMixin(Vue){ /**\n     * The main init sequence. This is called for every\n     * instance, including ones that are created from extended\n     * constructors.\n     *\n     * @param {Object} options - this options object should be\n     *                           the result of merging class\n     *                           options and the options passed\n     *                           in to the constructor.\n     */Vue.prototype._init=function(options){options=options||{};this.$el=null;this.$parent=options.parent;this.$root=this.$parent?this.$parent.$root:this;this.$children=[];this.$refs={}; // child vm references\nthis.$els={}; // element references\nthis._watchers=[]; // all watchers as an array\nthis._directives=[]; // all directives\n// a uid\nthis._uid=uid++; // a flag to avoid this being observed\nthis._isVue=true; // events bookkeeping\nthis._events={}; // registered callbacks\nthis._eventsCount={}; // for $broadcast optimization\n// fragment instance properties\nthis._isFragment=false;this._fragment= // @type {DocumentFragment}\nthis._fragmentStart= // @type {Text|Comment}\nthis._fragmentEnd=null; // @type {Text|Comment}\n// lifecycle state\nthis._isCompiled=this._isDestroyed=this._isReady=this._isAttached=this._isBeingDestroyed=this._vForRemoving=false;this._unlinkFn=null; // context:\n// if this is a transcluded component, context\n// will be the common parent vm of this instance\n// and its host.\nthis._context=options._context||this.$parent; // scope:\n// if this is inside an inline v-for, the scope\n// will be the intermediate scope created for this\n// repeat fragment. this is used for linking props\n// and container directives.\nthis._scope=options._scope; // fragment:\n// if this instance is compiled inside a Fragment, it\n// needs to reigster itself as a child of that fragment\n// for attach/detach to work properly.\nthis._frag=options._frag;if(this._frag){this._frag.children.push(this);} // push self into parent / transclusion host\nif(this.$parent){this.$parent.$children.push(this);} // save raw constructor data before merge\n// so that we know which properties are provided at\n// instantiation.\nif('development'!=='production'){this._runtimeData=options.data;} // merge options.\noptions=this.$options=mergeOptions(this.constructor.options,options,this); // set ref\nthis._updateRef(); // initialize data as empty object.\n// it will be filled up in _initScope().\nthis._data={}; // call init hook\nthis._callHook('init'); // initialize data observation and scope inheritance.\nthis._initState(); // setup event system and option events.\nthis._initEvents(); // call created hook\nthis._callHook('created'); // if `el` option is passed, start compilation.\nif(options.el){this.$mount(options.el);}};}var pathCache=new Cache(1000); // actions\nvar APPEND=0;var PUSH=1;var INC_SUB_PATH_DEPTH=2;var PUSH_SUB_PATH=3; // states\nvar BEFORE_PATH=0;var IN_PATH=1;var BEFORE_IDENT=2;var IN_IDENT=3;var IN_SUB_PATH=4;var IN_SINGLE_QUOTE=5;var IN_DOUBLE_QUOTE=6;var AFTER_PATH=7;var ERROR=8;var pathStateMachine=[];pathStateMachine[BEFORE_PATH]={'ws':[BEFORE_PATH],'ident':[IN_IDENT,APPEND],'[':[IN_SUB_PATH],'eof':[AFTER_PATH]};pathStateMachine[IN_PATH]={'ws':[IN_PATH],'.':[BEFORE_IDENT],'[':[IN_SUB_PATH],'eof':[AFTER_PATH]};pathStateMachine[BEFORE_IDENT]={'ws':[BEFORE_IDENT],'ident':[IN_IDENT,APPEND]};pathStateMachine[IN_IDENT]={'ident':[IN_IDENT,APPEND],'0':[IN_IDENT,APPEND],'number':[IN_IDENT,APPEND],'ws':[IN_PATH,PUSH],'.':[BEFORE_IDENT,PUSH],'[':[IN_SUB_PATH,PUSH],'eof':[AFTER_PATH,PUSH]};pathStateMachine[IN_SUB_PATH]={\"'\":[IN_SINGLE_QUOTE,APPEND],'\"':[IN_DOUBLE_QUOTE,APPEND],'[':[IN_SUB_PATH,INC_SUB_PATH_DEPTH],']':[IN_PATH,PUSH_SUB_PATH],'eof':ERROR,'else':[IN_SUB_PATH,APPEND]};pathStateMachine[IN_SINGLE_QUOTE]={\"'\":[IN_SUB_PATH,APPEND],'eof':ERROR,'else':[IN_SINGLE_QUOTE,APPEND]};pathStateMachine[IN_DOUBLE_QUOTE]={'\"':[IN_SUB_PATH,APPEND],'eof':ERROR,'else':[IN_DOUBLE_QUOTE,APPEND]}; /**\n   * Determine the type of a character in a keypath.\n   *\n   * @param {Char} ch\n   * @return {String} type\n   */function getPathCharType(ch){if(ch===undefined){return 'eof';}var code=ch.charCodeAt(0);switch(code){case 0x5B: // [\ncase 0x5D: // ]\ncase 0x2E: // .\ncase 0x22: // \"\ncase 0x27: // '\ncase 0x30: // 0\nreturn ch;case 0x5F: // _\ncase 0x24: // $\nreturn 'ident';case 0x20: // Space\ncase 0x09: // Tab\ncase 0x0A: // Newline\ncase 0x0D: // Return\ncase 0xA0: // No-break space\ncase 0xFEFF: // Byte Order Mark\ncase 0x2028: // Line Separator\ncase 0x2029: // Paragraph Separator\nreturn 'ws';} // a-z, A-Z\nif(code>=0x61&&code<=0x7A||code>=0x41&&code<=0x5A){return 'ident';} // 1-9\nif(code>=0x31&&code<=0x39){return 'number';}return 'else';} /**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   *\n   * @param {String} path\n   * @return {String}\n   */function formatSubPath(path){var trimmed=path.trim(); // invalid leading 0\nif(path.charAt(0)==='0'&&isNaN(path)){return false;}return isLiteral(trimmed)?stripQuotes(trimmed):'*'+trimmed;} /**\n   * Parse a string path into an array of segments\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */function parse(path){var keys=[];var index=-1;var mode=BEFORE_PATH;var subPathDepth=0;var c,newChar,key,type,transition,action,typeMap;var actions=[];actions[PUSH]=function(){if(key!==undefined){keys.push(key);key=undefined;}};actions[APPEND]=function(){if(key===undefined){key=newChar;}else {key+=newChar;}};actions[INC_SUB_PATH_DEPTH]=function(){actions[APPEND]();subPathDepth++;};actions[PUSH_SUB_PATH]=function(){if(subPathDepth>0){subPathDepth--;mode=IN_SUB_PATH;actions[APPEND]();}else {subPathDepth=0;key=formatSubPath(key);if(key===false){return false;}else {actions[PUSH]();}}};function maybeUnescapeQuote(){var nextChar=path[index+1];if(mode===IN_SINGLE_QUOTE&&nextChar===\"'\"||mode===IN_DOUBLE_QUOTE&&nextChar==='\"'){index++;newChar='\\\\'+nextChar;actions[APPEND]();return true;}}while(mode!=null){index++;c=path[index];if(c==='\\\\'&&maybeUnescapeQuote()){continue;}type=getPathCharType(c);typeMap=pathStateMachine[mode];transition=typeMap[type]||typeMap['else']||ERROR;if(transition===ERROR){return; // parse error\n}mode=transition[0];action=actions[transition[1]];if(action){newChar=transition[2];newChar=newChar===undefined?c:newChar;if(action()===false){return;}}if(mode===AFTER_PATH){keys.raw=path;return keys;}}} /**\n   * External parse that check for a cache hit first\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */function parsePath(path){var hit=pathCache.get(path);if(!hit){hit=parse(path);if(hit){pathCache.put(path,hit);}}return hit;} /**\n   * Get from an object from a path string\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */function getPath(obj,path){return parseExpression(path).get(obj);} /**\n   * Warn against setting non-existent root path on a vm.\n   */var warnNonExistent;if('development'!=='production'){warnNonExistent=function warnNonExistent(path){warn('You are setting a non-existent path \"'+path.raw+'\" '+'on a vm instance. Consider pre-initializing the property '+'with the \"data\" option for more reliable reactivity '+'and better performance.');};} /**\n   * Set on an object from a path\n   *\n   * @param {Object} obj\n   * @param {String | Array} path\n   * @param {*} val\n   */function setPath(obj,path,val){var original=obj;if(typeof path==='string'){path=parse(path);}if(!path||!isObject(obj)){return false;}var last,key;for(var i=0,l=path.length;i<l;i++){last=obj;key=path[i];if(key.charAt(0)==='*'){key=parseExpression(key.slice(1)).get.call(original,original);}if(i<l-1){obj=obj[key];if(!isObject(obj)){obj={};if('development'!=='production'&&last._isVue){warnNonExistent(path);}set(last,key,obj);}}else {if(isArray(obj)){obj.$set(key,val);}else if(key in obj){obj[key]=val;}else {if('development'!=='production'&&obj._isVue){warnNonExistent(path);}set(obj,key,val);}}}return true;}var path=Object.freeze({parsePath:parsePath,getPath:getPath,setPath:setPath});var expressionCache=new Cache(1000);var allowedKeywords='Math,Date,this,true,false,null,undefined,Infinity,NaN,'+'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,'+'encodeURIComponent,parseInt,parseFloat';var allowedKeywordsRE=new RegExp('^('+allowedKeywords.replace(/,/g,'\\\\b|')+'\\\\b)'); // keywords that don't make sense inside expressions\nvar improperKeywords='break,case,class,catch,const,continue,debugger,default,'+'delete,do,else,export,extends,finally,for,function,if,'+'import,in,instanceof,let,return,super,switch,throw,try,'+'var,while,with,yield,enum,await,implements,package,'+'proctected,static,interface,private,public';var improperKeywordsRE=new RegExp('^('+improperKeywords.replace(/,/g,'\\\\b|')+'\\\\b)');var wsRE=/\\s/g;var newlineRE=/\\n/g;var saveRE=/[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;var restoreRE=/\"(\\d+)\"/g;var pathTestRE=/^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;var identRE=/[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;var booleanLiteralRE=/^(?:true|false)$/; /**\n   * Save / Rewrite / Restore\n   *\n   * When rewriting paths found in an expression, it is\n   * possible for the same letter sequences to be found in\n   * strings and Object literal property keys. Therefore we\n   * remove and store these parts in a temporary array, and\n   * restore them after the path rewrite.\n   */var saved=[]; /**\n   * Save replacer\n   *\n   * The save regex can match two possible cases:\n   * 1. An opening object literal\n   * 2. A string\n   * If matched as a plain string, we need to escape its\n   * newlines, since the string needs to be preserved when\n   * generating the function body.\n   *\n   * @param {String} str\n   * @param {String} isString - str if matched as a string\n   * @return {String} - placeholder with index\n   */function save(str,isString){var i=saved.length;saved[i]=isString?str.replace(newlineRE,'\\\\n'):str;return '\"'+i+'\"';} /**\n   * Path rewrite replacer\n   *\n   * @param {String} raw\n   * @return {String}\n   */function rewrite(raw){var c=raw.charAt(0);var path=raw.slice(1);if(allowedKeywordsRE.test(path)){return raw;}else {path=path.indexOf('\"')>-1?path.replace(restoreRE,restore):path;return c+'scope.'+path;}} /**\n   * Restore replacer\n   *\n   * @param {String} str\n   * @param {String} i - matched save index\n   * @return {String}\n   */function restore(str,i){return saved[i];} /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and generate getter/setter functions.\n   *\n   * @param {String} exp\n   * @return {Function}\n   */function compileGetter(exp){if(improperKeywordsRE.test(exp)){'development'!=='production'&&warn('Avoid using reserved keywords in expression: '+exp);} // reset state\nsaved.length=0; // save strings and object literal keys\nvar body=exp.replace(saveRE,save).replace(wsRE,''); // rewrite all paths\n// pad 1 space here becaue the regex matches 1 extra char\nbody=(' '+body).replace(identRE,rewrite).replace(restoreRE,restore);return makeGetterFn(body);} /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @return {Function|undefined}\n   */function makeGetterFn(body){try{ /* eslint-disable no-new-func */return new Function('scope','return '+body+';'); /* eslint-enable no-new-func */}catch(e){'development'!=='production'&&warn('Invalid expression. '+'Generated function body: '+body);}} /**\n   * Compile a setter function for the expression.\n   *\n   * @param {String} exp\n   * @return {Function|undefined}\n   */function compileSetter(exp){var path=parsePath(exp);if(path){return function(scope,val){setPath(scope,path,val);};}else {'development'!=='production'&&warn('Invalid setter expression: '+exp);}} /**\n   * Parse an expression into re-written getter/setters.\n   *\n   * @param {String} exp\n   * @param {Boolean} needSet\n   * @return {Function}\n   */function parseExpression(exp,needSet){exp=exp.trim(); // try cache\nvar hit=expressionCache.get(exp);if(hit){if(needSet&&!hit.set){hit.set=compileSetter(hit.exp);}return hit;}var res={exp:exp};res.get=isSimplePath(exp)&&exp.indexOf('[')<0 // optimized super simple getter\n?makeGetterFn('scope.'+exp) // dynamic getter\n:compileGetter(exp);if(needSet){res.set=compileSetter(exp);}expressionCache.put(exp,res);return res;} /**\n   * Check if an expression is a simple path.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */function isSimplePath(exp){return pathTestRE.test(exp)&& // don't treat true/false as paths\n!booleanLiteralRE.test(exp)&& // Math constants e.g. Math.PI, Math.E etc.\nexp.slice(0,5)!=='Math.';}var expression=Object.freeze({parseExpression:parseExpression,isSimplePath:isSimplePath}); // we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue=[];var userQueue=[];var has={};var circular={};var waiting=false;var internalQueueDepleted=false; /**\n   * Reset the batcher's state.\n   */function resetBatcherState(){queue=[];userQueue=[];has={};circular={};waiting=internalQueueDepleted=false;} /**\n   * Flush both queues and run the watchers.\n   */function flushBatcherQueue(){runBatcherQueue(queue);internalQueueDepleted=true;runBatcherQueue(userQueue); // dev tool hook\n/* istanbul ignore if */if(devtools){devtools.emit('flush');}resetBatcherState();} /**\n   * Run the watchers in a single queue.\n   *\n   * @param {Array} queue\n   */function runBatcherQueue(queue){ // do not cache length because more watchers might be pushed\n// as we run existing watchers\nfor(var i=0;i<queue.length;i++){var watcher=queue[i];var id=watcher.id;has[id]=null;watcher.run(); // in dev build, check and stop circular updates.\nif('development'!=='production'&&has[id]!=null){circular[id]=(circular[id]||0)+1;if(circular[id]>config._maxUpdateCount){queue.splice(has[id],1);warn('You may have an infinite update loop for watcher '+'with expression: '+watcher.expression);}}}} /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   *\n   * @param {Watcher} watcher\n   *   properties:\n   *   - {Number} id\n   *   - {Function} run\n   */function pushWatcher(watcher){var id=watcher.id;if(has[id]==null){ // if an internal watcher is pushed, but the internal\n// queue is already depleted, we run it immediately.\nif(internalQueueDepleted&&!watcher.user){watcher.run();return;} // push watcher into appropriate queue\nvar q=watcher.user?userQueue:queue;has[id]=q.length;q.push(watcher); // queue the flush\nif(!waiting){waiting=true;nextTick(flushBatcherQueue);}}}var uid$2=0; /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   *\n   * @param {Vue} vm\n   * @param {String} expression\n   * @param {Function} cb\n   * @param {Object} options\n   *                 - {Array} filters\n   *                 - {Boolean} twoWay\n   *                 - {Boolean} deep\n   *                 - {Boolean} user\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   *                 - {Function} [preProcess]\n   *                 - {Function} [postProcess]\n   * @constructor\n   */function Watcher(vm,expOrFn,cb,options){ // mix in options\nif(options){extend(this,options);}var isFn=typeof expOrFn==='function';this.vm=vm;vm._watchers.push(this);this.expression=isFn?expOrFn.toString():expOrFn;this.cb=cb;this.id=++uid$2; // uid for batching\nthis.active=true;this.dirty=this.lazy; // for lazy watchers\nthis.deps=Object.create(null);this.newDeps=null;this.prevError=null; // for async error stacks\n// parse expression for getter/setter\nif(isFn){this.getter=expOrFn;this.setter=undefined;}else {var res=parseExpression(expOrFn,this.twoWay);this.getter=res.get;this.setter=res.set;}this.value=this.lazy?undefined:this.get(); // state for avoiding false triggers for deep and Array\n// watchers during vm._digest()\nthis.queued=this.shallow=false;} /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */Watcher.prototype.addDep=function(dep){var id=dep.id;if(!this.newDeps[id]){this.newDeps[id]=dep;if(!this.deps[id]){this.deps[id]=dep;dep.addSub(this);}}}; /**\n   * Evaluate the getter, and re-collect dependencies.\n   */Watcher.prototype.get=function(){this.beforeGet();var scope=this.scope||this.vm;var value;try{value=this.getter.call(scope,scope);}catch(e){if('development'!=='production'&&config.warnExpressionErrors){warn('Error when evaluating expression \"'+this.expression+'\". '+(config.debug?'':'Turn on debug mode to see stack trace.'),e);}} // \"touch\" every property so they are all tracked as\n// dependencies for deep watching\nif(this.deep){traverse(value);}if(this.preProcess){value=this.preProcess(value);}if(this.filters){value=scope._applyFilters(value,null,this.filters,false);}if(this.postProcess){value=this.postProcess(value);}this.afterGet();return value;}; /**\n   * Set the corresponding value with the setter.\n   *\n   * @param {*} value\n   */Watcher.prototype.set=function(value){var scope=this.scope||this.vm;if(this.filters){value=scope._applyFilters(value,this.value,this.filters,true);}try{this.setter.call(scope,scope,value);}catch(e){if('development'!=='production'&&config.warnExpressionErrors){warn('Error when evaluating setter \"'+this.expression+'\"',e);}} // two-way sync for v-for alias\nvar forContext=scope.$forContext;if(forContext&&forContext.alias===this.expression){if(forContext.filters){'development'!=='production'&&warn('It seems you are using two-way binding on '+'a v-for alias ('+this.expression+'), and the '+'v-for has filters. This will not work properly. '+'Either remove the filters or use an array of '+'objects and bind to object properties instead.');return;}forContext._withLock(function(){if(scope.$key){ // original is an object\nforContext.rawValue[scope.$key]=value;}else {forContext.rawValue.$set(scope.$index,value);}});}}; /**\n   * Prepare for dependency collection.\n   */Watcher.prototype.beforeGet=function(){Dep.target=this;this.newDeps=Object.create(null);}; /**\n   * Clean up for dependency collection.\n   */Watcher.prototype.afterGet=function(){Dep.target=null;var ids=Object.keys(this.deps);var i=ids.length;while(i--){var id=ids[i];if(!this.newDeps[id]){this.deps[id].removeSub(this);}}this.deps=this.newDeps;}; /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   *\n   * @param {Boolean} shallow\n   */Watcher.prototype.update=function(shallow){if(this.lazy){this.dirty=true;}else if(this.sync||!config.async){this.run();}else { // if queued, only overwrite shallow with non-shallow,\n// but not the other way around.\nthis.shallow=this.queued?shallow?this.shallow:false:!!shallow;this.queued=true; // record before-push error stack in debug mode\n/* istanbul ignore if */if('development'!=='production'&&config.debug){this.prevError=new Error('[vue] async stack trace');}pushWatcher(this);}}; /**\n   * Batcher job interface.\n   * Will be called by the batcher.\n   */Watcher.prototype.run=function(){if(this.active){var value=this.get();if(value!==this.value|| // Deep watchers and watchers on Object/Arrays should fire even\n// when the value is the same, because the value may\n// have mutated; but only do so if this is a\n// non-shallow update (caused by a vm digest).\n(isObject(value)||this.deep)&&!this.shallow){ // set new value\nvar oldValue=this.value;this.value=value; // in debug + async mode, when a watcher callbacks\n// throws, we also throw the saved before-push error\n// so the full cross-tick stack trace is available.\nvar prevError=this.prevError; /* istanbul ignore if */if('development'!=='production'&&config.debug&&prevError){this.prevError=null;try{this.cb.call(this.vm,value,oldValue);}catch(e){nextTick(function(){throw prevError;},0);throw e;}}else {this.cb.call(this.vm,value,oldValue);}}this.queued=this.shallow=false;}}; /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */Watcher.prototype.evaluate=function(){ // avoid overwriting another watcher that is being\n// collected.\nvar current=Dep.target;this.value=this.get();this.dirty=false;Dep.target=current;}; /**\n   * Depend on all deps collected by this watcher.\n   */Watcher.prototype.depend=function(){var depIds=Object.keys(this.deps);var i=depIds.length;while(i--){this.deps[depIds[i]].depend();}}; /**\n   * Remove self from all dependencies' subcriber list.\n   */Watcher.prototype.teardown=function(){if(this.active){ // remove self from vm's watcher list\n// this is a somewhat expensive operation so we skip it\n// if the vm is being destroyed or is performing a v-for\n// re-render (the watcher list is then filtered by v-for).\nif(!this.vm._isBeingDestroyed&&!this.vm._vForRemoving){this.vm._watchers.$remove(this);}var depIds=Object.keys(this.deps);var i=depIds.length;while(i--){this.deps[depIds[i]].removeSub(this);}this.active=false;this.vm=this.cb=this.value=null;}}; /**\n   * Recrusively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   *\n   * @param {*} val\n   */function traverse(val){var i,keys;if(isArray(val)){i=val.length;while(i--){traverse(val[i]);}}else if(isObject(val)){keys=Object.keys(val);i=keys.length;while(i--){traverse(val[keys[i]]);}}}var text$1={bind:function bind(){this.attr=this.el.nodeType===3?'data':'textContent';},update:function update(value){this.el[this.attr]=_toString(value);}};var templateCache=new Cache(1000);var idSelectorCache=new Cache(1000);var map={efault:[0,'',''],legend:[1,'<fieldset>','</fieldset>'],tr:[2,'<table><tbody>','</tbody></table>'],col:[2,'<table><tbody></tbody><colgroup>','</colgroup></table>']};map.td=map.th=[3,'<table><tbody><tr>','</tr></tbody></table>'];map.option=map.optgroup=[1,'<select multiple=\"multiple\">','</select>'];map.thead=map.tbody=map.colgroup=map.caption=map.tfoot=[1,'<table>','</table>'];map.g=map.defs=map.symbol=map.use=map.image=map.text=map.circle=map.ellipse=map.line=map.path=map.polygon=map.polyline=map.rect=[1,'<svg '+'xmlns=\"http://www.w3.org/2000/svg\" '+'xmlns:xlink=\"http://www.w3.org/1999/xlink\" '+'xmlns:ev=\"http://www.w3.org/2001/xml-events\"'+'version=\"1.1\">','</svg>']; /**\n   * Check if a node is a supported template node with a\n   * DocumentFragment content.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */function isRealTemplate(node){return isTemplate(node)&&isFragment(node.content);}var tagRE$1=/<([\\w:]+)/;var entityRE=/&#?\\w+?;/; /**\n   * Convert a string template to a DocumentFragment.\n   * Determines correct wrapping by tag types. Wrapping\n   * strategy found in jQuery & component/domify.\n   *\n   * @param {String} templateString\n   * @param {Boolean} raw\n   * @return {DocumentFragment}\n   */function stringToFragment(templateString,raw){ // try a cache hit first\nvar cacheKey=raw?templateString:templateString.trim();var hit=templateCache.get(cacheKey);if(hit){return hit;}var frag=document.createDocumentFragment();var tagMatch=templateString.match(tagRE$1);var entityMatch=entityRE.test(templateString);if(!tagMatch&&!entityMatch){ // text only, return a single text node.\nfrag.appendChild(document.createTextNode(templateString));}else {var tag=tagMatch&&tagMatch[1];var wrap=map[tag]||map.efault;var depth=wrap[0];var prefix=wrap[1];var suffix=wrap[2];var node=document.createElement('div');node.innerHTML=prefix+templateString+suffix;while(depth--){node=node.lastChild;}var child; /* eslint-disable no-cond-assign */while(child=node.firstChild){ /* eslint-enable no-cond-assign */frag.appendChild(child);}}if(!raw){trimNode(frag);}templateCache.put(cacheKey,frag);return frag;} /**\n   * Convert a template node to a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {DocumentFragment}\n   */function nodeToFragment(node){ // if its a template tag and the browser supports it,\n// its content is already a document fragment.\nif(isRealTemplate(node)){trimNode(node.content);return node.content;} // script template\nif(node.tagName==='SCRIPT'){return stringToFragment(node.textContent);} // normal node, clone it to avoid mutating the original\nvar clonedNode=cloneNode(node);var frag=document.createDocumentFragment();var child; /* eslint-disable no-cond-assign */while(child=clonedNode.firstChild){ /* eslint-enable no-cond-assign */frag.appendChild(child);}trimNode(frag);return frag;} // Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate=function(){ /* istanbul ignore else */if(inBrowser){var a=document.createElement('div');a.innerHTML='<template>1</template>';return !a.cloneNode(true).firstChild.innerHTML;}else {return false;}}(); // Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug=function(){ /* istanbul ignore else */if(inBrowser){var t=document.createElement('textarea');t.placeholder='t';return t.cloneNode(true).value==='t';}else {return false;}}(); /**\n   * 1. Deal with Safari cloning nested <template> bug by\n   *    manually cloning all template instances.\n   * 2. Deal with IE10/11 textarea placeholder bug by setting\n   *    the correct value after cloning.\n   *\n   * @param {Element|DocumentFragment} node\n   * @return {Element|DocumentFragment}\n   */function cloneNode(node){if(!node.querySelectorAll){return node.cloneNode();}var res=node.cloneNode(true);var i,original,cloned; /* istanbul ignore if */if(hasBrokenTemplate){var tempClone=res;if(isRealTemplate(node)){node=node.content;tempClone=res.content;}original=node.querySelectorAll('template');if(original.length){cloned=tempClone.querySelectorAll('template');i=cloned.length;while(i--){cloned[i].parentNode.replaceChild(cloneNode(original[i]),cloned[i]);}}} /* istanbul ignore if */if(hasTextareaCloneBug){if(node.tagName==='TEXTAREA'){res.value=node.value;}else {original=node.querySelectorAll('textarea');if(original.length){cloned=res.querySelectorAll('textarea');i=cloned.length;while(i--){cloned[i].value=original[i].value;}}}}return res;} /**\n   * Process the template option and normalizes it into a\n   * a DocumentFragment that can be used as a partial or a\n   * instance template.\n   *\n   * @param {*} template\n   *        Possible values include:\n   *        - DocumentFragment object\n   *        - Node object of type Template\n   *        - id selector: '#some-template-id'\n   *        - template string: '<div><span>{{msg}}</span></div>'\n   * @param {Boolean} shouldClone\n   * @param {Boolean} raw\n   *        inline HTML interpolation. Do not check for id\n   *        selector and keep whitespace in the string.\n   * @return {DocumentFragment|undefined}\n   */function parseTemplate(template,shouldClone,raw){var node,frag; // if the template is already a document fragment,\n// do nothing\nif(isFragment(template)){trimNode(template);return shouldClone?cloneNode(template):template;}if(typeof template==='string'){ // id selector\nif(!raw&&template.charAt(0)==='#'){ // id selector can be cached too\nfrag=idSelectorCache.get(template);if(!frag){node=document.getElementById(template.slice(1));if(node){frag=nodeToFragment(node); // save selector to cache\nidSelectorCache.put(template,frag);}}}else { // normal string template\nfrag=stringToFragment(template,raw);}}else if(template.nodeType){ // a direct node\nfrag=nodeToFragment(template);}return frag&&shouldClone?cloneNode(frag):frag;}var template=Object.freeze({cloneNode:cloneNode,parseTemplate:parseTemplate});var html={bind:function bind(){ // a comment node means this is a binding for\n// {{{ inline unescaped html }}}\nif(this.el.nodeType===8){ // hold nodes\nthis.nodes=[]; // replace the placeholder with proper anchor\nthis.anchor=createAnchor('v-html');replace(this.el,this.anchor);}},update:function update(value){value=_toString(value);if(this.nodes){this.swap(value);}else {this.el.innerHTML=value;}},swap:function swap(value){ // remove old nodes\nvar i=this.nodes.length;while(i--){remove(this.nodes[i]);} // convert new value to a fragment\n// do not attempt to retrieve from id selector\nvar frag=parseTemplate(value,true,true); // save a reference to these nodes so we can remove later\nthis.nodes=toArray(frag.childNodes);before(frag,this.anchor);}}; /**\n   * Abstraction for a partially-compiled fragment.\n   * Can optionally compile content with a child scope.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   */function Fragment(linker,vm,frag,host,scope,parentFrag){this.children=[];this.childFrags=[];this.vm=vm;this.scope=scope;this.inserted=false;this.parentFrag=parentFrag;if(parentFrag){parentFrag.childFrags.push(this);}this.unlink=linker(vm,frag,host,scope,this);var single=this.single=frag.childNodes.length===1&& // do not go single mode if the only node is an anchor\n!frag.childNodes[0].__v_anchor;if(single){this.node=frag.childNodes[0];this.before=singleBefore;this.remove=singleRemove;}else {this.node=createAnchor('fragment-start');this.end=createAnchor('fragment-end');this.frag=frag;prepend(this.node,frag);frag.appendChild(this.end);this.before=multiBefore;this.remove=multiRemove;}this.node.__v_frag=this;} /**\n   * Call attach/detach for all components contained within\n   * this fragment. Also do so recursively for all child\n   * fragments.\n   *\n   * @param {Function} hook\n   */Fragment.prototype.callHook=function(hook){var i,l;for(i=0,l=this.childFrags.length;i<l;i++){this.childFrags[i].callHook(hook);}for(i=0,l=this.children.length;i<l;i++){hook(this.children[i]);}}; /**\n   * Insert fragment before target, single node version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */function singleBefore(target,withTransition){this.inserted=true;var method=withTransition!==false?beforeWithTransition:before;method(this.node,target,this.vm);if(inDoc(this.node)){this.callHook(attach);}} /**\n   * Remove fragment, single node version\n   */function singleRemove(){this.inserted=false;var shouldCallRemove=inDoc(this.node);var self=this;this.beforeRemove();removeWithTransition(this.node,this.vm,function(){if(shouldCallRemove){self.callHook(detach);}self.destroy();});} /**\n   * Insert fragment before target, multi-nodes version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */function multiBefore(target,withTransition){this.inserted=true;var vm=this.vm;var method=withTransition!==false?beforeWithTransition:before;mapNodeRange(this.node,this.end,function(node){method(node,target,vm);});if(inDoc(this.node)){this.callHook(attach);}} /**\n   * Remove fragment, multi-nodes version\n   */function multiRemove(){this.inserted=false;var self=this;var shouldCallRemove=inDoc(this.node);this.beforeRemove();removeNodeRange(this.node,this.end,this.vm,this.frag,function(){if(shouldCallRemove){self.callHook(detach);}self.destroy();});} /**\n   * Prepare the fragment for removal.\n   */Fragment.prototype.beforeRemove=function(){var i,l;for(i=0,l=this.childFrags.length;i<l;i++){ // call the same method recursively on child\n// fragments, depth-first\nthis.childFrags[i].beforeRemove(false);}for(i=0,l=this.children.length;i<l;i++){ // Call destroy for all contained instances,\n// with remove:false and defer:true.\n// Defer is necessary because we need to\n// keep the children to call detach hooks\n// on them.\nthis.children[i].$destroy(false,true);}var dirs=this.unlink.dirs;for(i=0,l=dirs.length;i<l;i++){ // disable the watchers on all the directives\n// so that the rendered content stays the same\n// during removal.\ndirs[i]._watcher&&dirs[i]._watcher.teardown();}}; /**\n   * Destroy the fragment.\n   */Fragment.prototype.destroy=function(){if(this.parentFrag){this.parentFrag.childFrags.$remove(this);}this.node.__v_frag=null;this.unlink();}; /**\n   * Call attach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */function attach(child){if(!child._isAttached){child._callHook('attached');}} /**\n   * Call detach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */function detach(child){if(child._isAttached){child._callHook('detached');}}var linkerCache=new Cache(5000); /**\n   * A factory that can be used to create instances of a\n   * fragment. Caches the compiled linker if possible.\n   *\n   * @param {Vue} vm\n   * @param {Element|String} el\n   */function FragmentFactory(vm,el){this.vm=vm;var template;var isString=typeof el==='string';if(isString||isTemplate(el)){template=parseTemplate(el,true);}else {template=document.createDocumentFragment();template.appendChild(el);}this.template=template; // linker can be cached, but only for components\nvar linker;var cid=vm.constructor.cid;if(cid>0){var cacheId=cid+(isString?el:getOuterHTML(el));linker=linkerCache.get(cacheId);if(!linker){linker=compile(template,vm.$options,true);linkerCache.put(cacheId,linker);}}else {linker=compile(template,vm.$options,true);}this.linker=linker;} /**\n   * Create a fragment instance with given host and scope.\n   *\n   * @param {Vue} host\n   * @param {Object} scope\n   * @param {Fragment} parentFrag\n   */FragmentFactory.prototype.create=function(host,scope,parentFrag){var frag=cloneNode(this.template);return new Fragment(this.linker,this.vm,frag,host,scope,parentFrag);};var ON=700;var MODEL=800;var BIND=850;var TRANSITION=1100;var EL=1500;var COMPONENT=1500;var PARTIAL=1750;var FOR=2000;var IF=2000;var SLOT=2100;var uid$3=0;var vFor={priority:FOR,params:['track-by','stagger','enter-stagger','leave-stagger'],bind:function bind(){ // support \"item in/of items\" syntax\nvar inMatch=this.expression.match(/(.*) (?:in|of) (.*)/);if(inMatch){var itMatch=inMatch[1].match(/\\((.*),(.*)\\)/);if(itMatch){this.iterator=itMatch[1].trim();this.alias=itMatch[2].trim();}else {this.alias=inMatch[1].trim();}this.expression=inMatch[2];}if(!this.alias){'development'!=='production'&&warn('Alias is required in v-for.');return;} // uid as a cache identifier\nthis.id='__v-for__'+ ++uid$3; // check if this is an option list,\n// so that we know if we need to update the <select>'s\n// v-model when the option list has changed.\n// because v-model has a lower priority than v-for,\n// the v-model is not bound here yet, so we have to\n// retrive it in the actual updateModel() function.\nvar tag=this.el.tagName;this.isOption=(tag==='OPTION'||tag==='OPTGROUP')&&this.el.parentNode.tagName==='SELECT'; // setup anchor nodes\nthis.start=createAnchor('v-for-start');this.end=createAnchor('v-for-end');replace(this.el,this.end);before(this.start,this.end); // cache\nthis.cache=Object.create(null); // fragment factory\nthis.factory=new FragmentFactory(this.vm,this.el);},update:function update(data){this.diff(data);this.updateRef();this.updateModel();}, /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     */diff:function diff(data){ // check if the Array was converted from an Object\nvar item=data[0];var convertedFromObject=this.fromObject=isObject(item)&&hasOwn(item,'$key')&&hasOwn(item,'$value');var trackByKey=this.params.trackBy;var oldFrags=this.frags;var frags=this.frags=new Array(data.length);var alias=this.alias;var iterator=this.iterator;var start=this.start;var end=this.end;var inDocument=inDoc(start);var init=!oldFrags;var i,l,frag,key,value,primitive; // First pass, go through the new Array and fill up\n// the new frags array. If a piece of data has a cached\n// instance for it, we reuse it. Otherwise build a new\n// instance.\nfor(i=0,l=data.length;i<l;i++){item=data[i];key=convertedFromObject?item.$key:null;value=convertedFromObject?item.$value:item;primitive=!isObject(value);frag=!init&&this.getCachedFrag(value,i,key);if(frag){ // reusable fragment\nfrag.reused=true; // update $index\nfrag.scope.$index=i; // update $key\nif(key){frag.scope.$key=key;} // update iterator\nif(iterator){frag.scope[iterator]=key!==null?key:i;} // update data for track-by, object repeat &\n// primitive values.\nif(trackByKey||convertedFromObject||primitive){frag.scope[alias]=value;}}else { // new isntance\nfrag=this.create(value,alias,i,key);frag.fresh=!init;}frags[i]=frag;if(init){frag.before(end);}} // we're done for the initial render.\nif(init){return;} // Second pass, go through the old fragments and\n// destroy those who are not reused (and remove them\n// from cache)\nvar removalIndex=0;var totalRemoved=oldFrags.length-frags.length; // when removing a large number of fragments, watcher removal\n// turns out to be a perf bottleneck, so we batch the watcher\n// removals into a single filter call!\nthis.vm._vForRemoving=true;for(i=0,l=oldFrags.length;i<l;i++){frag=oldFrags[i];if(!frag.reused){this.deleteCachedFrag(frag);this.remove(frag,removalIndex++,totalRemoved,inDocument);}}this.vm._vForRemoving=false;if(removalIndex){this.vm._watchers=this.vm._watchers.filter(function(w){return w.active;});} // Final pass, move/insert new fragments into the\n// right place.\nvar targetPrev,prevEl,currentPrev;var insertionIndex=0;for(i=0,l=frags.length;i<l;i++){frag=frags[i]; // this is the frag that we should be after\ntargetPrev=frags[i-1];prevEl=targetPrev?targetPrev.staggerCb?targetPrev.staggerAnchor:targetPrev.end||targetPrev.node:start;if(frag.reused&&!frag.staggerCb){currentPrev=findPrevFrag(frag,start,this.id);if(currentPrev!==targetPrev&&(!currentPrev|| // optimization for moving a single item.\n// thanks to suggestions by @livoras in #1807\nfindPrevFrag(currentPrev,start,this.id)!==targetPrev)){this.move(frag,prevEl);}}else { // new instance, or still in stagger.\n// insert with updated stagger index.\nthis.insert(frag,insertionIndex++,prevEl,inDocument);}frag.reused=frag.fresh=false;}}, /**\n     * Create a new fragment instance.\n     *\n     * @param {*} value\n     * @param {String} alias\n     * @param {Number} index\n     * @param {String} [key]\n     * @return {Fragment}\n     */create:function create(value,alias,index,key){var host=this._host; // create iteration scope\nvar parentScope=this._scope||this.vm;var scope=Object.create(parentScope); // ref holder for the scope\nscope.$refs=Object.create(parentScope.$refs);scope.$els=Object.create(parentScope.$els); // make sure point $parent to parent scope\nscope.$parent=parentScope; // for two-way binding on alias\nscope.$forContext=this; // define scope properties\ndefineReactive(scope,alias,value);defineReactive(scope,'$index',index);if(key){defineReactive(scope,'$key',key);}else if(scope.$key){ // avoid accidental fallback\ndef(scope,'$key',null);}if(this.iterator){defineReactive(scope,this.iterator,key!==null?key:index);}var frag=this.factory.create(host,scope,this._frag);frag.forId=this.id;this.cacheFrag(value,frag,index,key);return frag;}, /**\n     * Update the v-ref on owner vm.\n     */updateRef:function updateRef(){var ref=this.descriptor.ref;if(!ref)return;var hash=(this._scope||this.vm).$refs;var refs;if(!this.fromObject){refs=this.frags.map(findVmFromFrag);}else {refs={};this.frags.forEach(function(frag){refs[frag.scope.$key]=findVmFromFrag(frag);});}hash[ref]=refs;}, /**\n     * For option lists, update the containing v-model on\n     * parent <select>.\n     */updateModel:function updateModel(){if(this.isOption){var parent=this.start.parentNode;var model=parent&&parent.__v_model;if(model){model.forceUpdate();}}}, /**\n     * Insert a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Node} prevEl\n     * @param {Boolean} inDocument\n     */insert:function insert(frag,index,prevEl,inDocument){if(frag.staggerCb){frag.staggerCb.cancel();frag.staggerCb=null;}var staggerAmount=this.getStagger(frag,index,null,'enter');if(inDocument&&staggerAmount){ // create an anchor and insert it synchronously,\n// so that we can resolve the correct order without\n// worrying about some elements not inserted yet\nvar anchor=frag.staggerAnchor;if(!anchor){anchor=frag.staggerAnchor=createAnchor('stagger-anchor');anchor.__v_frag=frag;}after(anchor,prevEl);var op=frag.staggerCb=cancellable(function(){frag.staggerCb=null;frag.before(anchor);remove(anchor);});setTimeout(op,staggerAmount);}else {frag.before(prevEl.nextSibling);}}, /**\n     * Remove a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {Boolean} inDocument\n     */remove:function remove(frag,index,total,inDocument){if(frag.staggerCb){frag.staggerCb.cancel();frag.staggerCb=null; // it's not possible for the same frag to be removed\n// twice, so if we have a pending stagger callback,\n// it means this frag is queued for enter but removed\n// before its transition started. Since it is already\n// destroyed, we can just leave it in detached state.\nreturn;}var staggerAmount=this.getStagger(frag,index,total,'leave');if(inDocument&&staggerAmount){var op=frag.staggerCb=cancellable(function(){frag.staggerCb=null;frag.remove();});setTimeout(op,staggerAmount);}else {frag.remove();}}, /**\n     * Move a fragment to a new position.\n     * Force no transition.\n     *\n     * @param {Fragment} frag\n     * @param {Node} prevEl\n     */move:function move(frag,prevEl){ // fix a common issue with Sortable:\n// if prevEl doesn't have nextSibling, this means it's\n// been dragged after the end anchor. Just re-position\n// the end anchor to the end of the container.\n/* istanbul ignore if */if(!prevEl.nextSibling){this.end.parentNode.appendChild(this.end);}frag.before(prevEl.nextSibling,false);}, /**\n     * Cache a fragment using track-by or the object key.\n     *\n     * @param {*} value\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {String} [key]\n     */cacheFrag:function cacheFrag(value,frag,index,key){var trackByKey=this.params.trackBy;var cache=this.cache;var primitive=!isObject(value);var id;if(key||trackByKey||primitive){id=trackByKey?trackByKey==='$index'?index:value[trackByKey]:key||value;if(!cache[id]){cache[id]=frag;}else if(trackByKey!=='$index'){'development'!=='production'&&this.warnDuplicate(value);}}else {id=this.id;if(hasOwn(value,id)){if(value[id]===null){value[id]=frag;}else {'development'!=='production'&&this.warnDuplicate(value);}}else {def(value,id,frag);}}frag.raw=value;}, /**\n     * Get a cached fragment from the value/index/key\n     *\n     * @param {*} value\n     * @param {Number} index\n     * @param {String} key\n     * @return {Fragment}\n     */getCachedFrag:function getCachedFrag(value,index,key){var trackByKey=this.params.trackBy;var primitive=!isObject(value);var frag;if(key||trackByKey||primitive){var id=trackByKey?trackByKey==='$index'?index:value[trackByKey]:key||value;frag=this.cache[id];}else {frag=value[this.id];}if(frag&&(frag.reused||frag.fresh)){'development'!=='production'&&this.warnDuplicate(value);}return frag;}, /**\n     * Delete a fragment from cache.\n     *\n     * @param {Fragment} frag\n     */deleteCachedFrag:function deleteCachedFrag(frag){var value=frag.raw;var trackByKey=this.params.trackBy;var scope=frag.scope;var index=scope.$index; // fix #948: avoid accidentally fall through to\n// a parent repeater which happens to have $key.\nvar key=hasOwn(scope,'$key')&&scope.$key;var primitive=!isObject(value);if(trackByKey||key||primitive){var id=trackByKey?trackByKey==='$index'?index:value[trackByKey]:key||value;this.cache[id]=null;}else {value[this.id]=null;frag.raw=null;}}, /**\n     * Get the stagger amount for an insertion/removal.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {String} type\n     */getStagger:function getStagger(frag,index,total,type){type=type+'Stagger';var trans=frag.node.__v_trans;var hooks=trans&&trans.hooks;var hook=hooks&&(hooks[type]||hooks.stagger);return hook?hook.call(frag,index,total):index*parseInt(this.params[type]||this.params.stagger,10);}, /**\n     * Pre-process the value before piping it through the\n     * filters. This is passed to and called by the watcher.\n     */_preProcess:function _preProcess(value){ // regardless of type, store the un-filtered raw value.\nthis.rawValue=value;return value;}, /**\n     * Post-process the value after it has been piped through\n     * the filters. This is passed to and called by the watcher.\n     *\n     * It is necessary for this to be called during the\n     * wathcer's dependency collection phase because we want\n     * the v-for to update when the source Object is mutated.\n     */_postProcess:function _postProcess(value){if(isArray(value)){return value;}else if(isPlainObject(value)){ // convert plain object to array.\nvar keys=Object.keys(value);var i=keys.length;var res=new Array(i);var key;while(i--){key=keys[i];res[i]={$key:key,$value:value[key]};}return res;}else {if(typeof value==='number'&&!isNaN(value)){value=range(value);}return value||[];}},unbind:function unbind(){if(this.descriptor.ref){(this._scope||this.vm).$refs[this.descriptor.ref]=null;}if(this.frags){var i=this.frags.length;var frag;while(i--){frag=this.frags[i];this.deleteCachedFrag(frag);frag.destroy();}}}}; /**\n   * Helper to find the previous element that is a fragment\n   * anchor. This is necessary because a destroyed frag's\n   * element could still be lingering in the DOM before its\n   * leaving transition finishes, but its inserted flag\n   * should have been set to false so we can skip them.\n   *\n   * If this is a block repeat, we want to make sure we only\n   * return frag that is bound to this v-for. (see #929)\n   *\n   * @param {Fragment} frag\n   * @param {Comment|Text} anchor\n   * @param {String} id\n   * @return {Fragment}\n   */function findPrevFrag(frag,anchor,id){var el=frag.node.previousSibling; /* istanbul ignore if */if(!el)return;frag=el.__v_frag;while((!frag||frag.forId!==id||!frag.inserted)&&el!==anchor){el=el.previousSibling; /* istanbul ignore if */if(!el)return;frag=el.__v_frag;}return frag;} /**\n   * Find a vm from a fragment.\n   *\n   * @param {Fragment} frag\n   * @return {Vue|undefined}\n   */function findVmFromFrag(frag){var node=frag.node; // handle multi-node frag\nif(frag.end){while(!node.__vue__&&node!==frag.end&&node.nextSibling){node=node.nextSibling;}}return node.__vue__;} /**\n   * Create a range array from given number.\n   *\n   * @param {Number} n\n   * @return {Array}\n   */function range(n){var i=-1;var ret=new Array(Math.floor(n));while(++i<n){ret[i]=i;}return ret;}if('development'!=='production'){vFor.warnDuplicate=function(value){warn('Duplicate value found in v-for=\"'+this.descriptor.raw+'\": '+JSON.stringify(value)+'. Use track-by=\"$index\" if '+'you are expecting duplicate values.');};}var vIf={priority:IF,bind:function bind(){var el=this.el;if(!el.__vue__){ // check else block\nvar next=el.nextElementSibling;if(next&&getAttr(next,'v-else')!==null){remove(next);this.elseFactory=new FragmentFactory(next._context||this.vm,next);} // check main block\nthis.anchor=createAnchor('v-if');replace(el,this.anchor);this.factory=new FragmentFactory(this.vm,el);}else {'development'!=='production'&&warn('v-if=\"'+this.expression+'\" cannot be '+'used on an instance root element.');this.invalid=true;}},update:function update(value){if(this.invalid)return;if(value){if(!this.frag){this.insert();}}else {this.remove();}},insert:function insert(){if(this.elseFrag){this.elseFrag.remove();this.elseFrag=null;}this.frag=this.factory.create(this._host,this._scope,this._frag);this.frag.before(this.anchor);},remove:function remove(){if(this.frag){this.frag.remove();this.frag=null;}if(this.elseFactory&&!this.elseFrag){this.elseFrag=this.elseFactory.create(this._host,this._scope,this._frag);this.elseFrag.before(this.anchor);}},unbind:function unbind(){if(this.frag){this.frag.destroy();}if(this.elseFrag){this.elseFrag.destroy();}}};var show={bind:function bind(){ // check else block\nvar next=this.el.nextElementSibling;if(next&&getAttr(next,'v-else')!==null){this.elseEl=next;}},update:function update(value){this.apply(this.el,value);if(this.elseEl){this.apply(this.elseEl,!value);}},apply:function apply(el,value){if(inDoc(el)){applyTransition(el,value?1:-1,toggle,this.vm);}else {toggle();}function toggle(){el.style.display=value?'':'none';}}};var text$2={bind:function bind(){var self=this;var el=this.el;var isRange=el.type==='range';var lazy=this.params.lazy;var number=this.params.number;var debounce=this.params.debounce; // handle composition events.\n//   http://blog.evanyou.me/2014/01/03/composition-event/\n// skip this for Android because it handles composition\n// events quite differently. Android doesn't trigger\n// composition events for language input methods e.g.\n// Chinese, but instead triggers them for spelling\n// suggestions... (see Discussion/#162)\nvar composing=false;if(!isAndroid&&!isRange){this.on('compositionstart',function(){composing=true;});this.on('compositionend',function(){composing=false; // in IE11 the \"compositionend\" event fires AFTER\n// the \"input\" event, so the input handler is blocked\n// at the end... have to call it here.\n//\n// #1327: in lazy mode this is unecessary.\nif(!lazy){self.listener();}});} // prevent messing with the input when user is typing,\n// and force update on blur.\nthis.focused=false;if(!isRange&&!lazy){this.on('focus',function(){self.focused=true;});this.on('blur',function(){self.focused=false;});} // Now attach the main listener\nthis.listener=this.rawListener=function(){if(composing||!self._bound){return;}var val=number||isRange?toNumber(el.value):el.value;self.set(val); // force update on next tick to avoid lock & same value\n// also only update when user is not typing\nnextTick(function(){if(self._bound&&!self.focused){self.update(self._watcher.value);}});}; // apply debounce\nif(debounce){this.listener=_debounce(this.listener,debounce);} // Support jQuery events, since jQuery.trigger() doesn't\n// trigger native events in some cases and some plugins\n// rely on $.trigger()\n//\n// We want to make sure if a listener is attached using\n// jQuery, it is also removed with jQuery, that's why\n// we do the check for each directive instance and\n// store that check result on itself. This also allows\n// easier test coverage control by unsetting the global\n// jQuery variable in tests.\nthis.hasjQuery=typeof jQuery==='function';if(this.hasjQuery){var method=jQuery.fn.on?'on':'bind';jQuery(el)[method]('change',this.rawListener);if(!lazy){jQuery(el)[method]('input',this.listener);}}else {this.on('change',this.rawListener);if(!lazy){this.on('input',this.listener);}} // IE9 doesn't fire input event on backspace/del/cut\nif(!lazy&&isIE9){this.on('cut',function(){nextTick(self.listener);});this.on('keyup',function(e){if(e.keyCode===46||e.keyCode===8){self.listener();}});} // set initial value if present\nif(el.hasAttribute('value')||el.tagName==='TEXTAREA'&&el.value.trim()){this.afterBind=this.listener;}},update:function update(value){this.el.value=_toString(value);},unbind:function unbind(){var el=this.el;if(this.hasjQuery){var method=jQuery.fn.off?'off':'unbind';jQuery(el)[method]('change',this.listener);jQuery(el)[method]('input',this.listener);}}};var radio={bind:function bind(){var self=this;var el=this.el;this.getValue=function(){ // value overwrite via v-bind:value\nif(el.hasOwnProperty('_value')){return el._value;}var val=el.value;if(self.params.number){val=toNumber(val);}return val;};this.listener=function(){self.set(self.getValue());};this.on('change',this.listener);if(el.hasAttribute('checked')){this.afterBind=this.listener;}},update:function update(value){this.el.checked=looseEqual(value,this.getValue());}};var select={bind:function bind(){var self=this;var el=this.el; // method to force update DOM using latest value.\nthis.forceUpdate=function(){if(self._watcher){self.update(self._watcher.get());}}; // check if this is a multiple select\nvar multiple=this.multiple=el.hasAttribute('multiple'); // attach listener\nthis.listener=function(){var value=getValue(el,multiple);value=self.params.number?isArray(value)?value.map(toNumber):toNumber(value):value;self.set(value);};this.on('change',this.listener); // if has initial value, set afterBind\nvar initValue=getValue(el,multiple,true);if(multiple&&initValue.length||!multiple&&initValue!==null){this.afterBind=this.listener;} // All major browsers except Firefox resets\n// selectedIndex with value -1 to 0 when the element\n// is appended to a new parent, therefore we have to\n// force a DOM update whenever that happens...\nthis.vm.$on('hook:attached',this.forceUpdate);},update:function update(value){var el=this.el;el.selectedIndex=-1;var multi=this.multiple&&isArray(value);var options=el.options;var i=options.length;var op,val;while(i--){op=options[i];val=op.hasOwnProperty('_value')?op._value:op.value; /* eslint-disable eqeqeq */op.selected=multi?indexOf$1(value,val)>-1:looseEqual(value,val); /* eslint-enable eqeqeq */}},unbind:function unbind(){ /* istanbul ignore next */this.vm.$off('hook:attached',this.forceUpdate);}}; /**\n   * Get select value\n   *\n   * @param {SelectElement} el\n   * @param {Boolean} multi\n   * @param {Boolean} init\n   * @return {Array|*}\n   */function getValue(el,multi,init){var res=multi?[]:null;var op,val,selected;for(var i=0,l=el.options.length;i<l;i++){op=el.options[i];selected=init?op.hasAttribute('selected'):op.selected;if(selected){val=op.hasOwnProperty('_value')?op._value:op.value;if(multi){res.push(val);}else {return val;}}}return res;} /**\n   * Native Array.indexOf uses strict equal, but in this\n   * case we need to match string/numbers with custom equal.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   */function indexOf$1(arr,val){var i=arr.length;while(i--){if(looseEqual(arr[i],val)){return i;}}return -1;}var checkbox={bind:function bind(){var self=this;var el=this.el;this.getValue=function(){return el.hasOwnProperty('_value')?el._value:self.params.number?toNumber(el.value):el.value;};function getBooleanValue(){var val=el.checked;if(val&&el.hasOwnProperty('_trueValue')){return el._trueValue;}if(!val&&el.hasOwnProperty('_falseValue')){return el._falseValue;}return val;}this.listener=function(){var model=self._watcher.value;if(isArray(model)){var val=self.getValue();if(el.checked){if(indexOf(model,val)<0){model.push(val);}}else {model.$remove(val);}}else {self.set(getBooleanValue());}};this.on('change',this.listener);if(el.hasAttribute('checked')){this.afterBind=this.listener;}},update:function update(value){var el=this.el;if(isArray(value)){el.checked=indexOf(value,this.getValue())>-1;}else {if(el.hasOwnProperty('_trueValue')){el.checked=looseEqual(value,el._trueValue);}else {el.checked=!!value;}}}};var handlers={text:text$2,radio:radio,select:select,checkbox:checkbox};var model={priority:MODEL,twoWay:true,handlers:handlers,params:['lazy','number','debounce'], /**\n     * Possible elements:\n     *   <select>\n     *   <textarea>\n     *   <input type=\"*\">\n     *     - text\n     *     - checkbox\n     *     - radio\n     *     - number\n     */bind:function bind(){ // friendly warning...\nthis.checkFilters();if(this.hasRead&&!this.hasWrite){'development'!=='production'&&warn('It seems you are using a read-only filter with '+'v-model. You might want to use a two-way filter '+'to ensure correct behavior.');}var el=this.el;var tag=el.tagName;var handler;if(tag==='INPUT'){handler=handlers[el.type]||handlers.text;}else if(tag==='SELECT'){handler=handlers.select;}else if(tag==='TEXTAREA'){handler=handlers.text;}else {'development'!=='production'&&warn('v-model does not support element type: '+tag);return;}el.__v_model=this;handler.bind.call(this);this.update=handler.update;this._unbind=handler.unbind;}, /**\n     * Check read/write filter stats.\n     */checkFilters:function checkFilters(){var filters=this.filters;if(!filters)return;var i=filters.length;while(i--){var filter=resolveAsset(this.vm.$options,'filters',filters[i].name);if(typeof filter==='function'||filter.read){this.hasRead=true;}if(filter.write){this.hasWrite=true;}}},unbind:function unbind(){this.el.__v_model=null;this._unbind&&this._unbind();}}; // keyCode aliases\nvar keyCodes={esc:27,tab:9,enter:13,space:32,'delete':[8,46],up:38,left:37,right:39,down:40};function keyFilter(handler,keys){var codes=keys.map(function(key){var charCode=key.charCodeAt(0);if(charCode>47&&charCode<58){return parseInt(key,10);}if(key.length===1){charCode=key.toUpperCase().charCodeAt(0);if(charCode>64&&charCode<91){return charCode;}}return keyCodes[key];});codes=[].concat.apply([],codes);return function keyHandler(e){if(codes.indexOf(e.keyCode)>-1){return handler.call(this,e);}};}function stopFilter(handler){return function stopHandler(e){e.stopPropagation();return handler.call(this,e);};}function preventFilter(handler){return function preventHandler(e){e.preventDefault();return handler.call(this,e);};}function selfFilter(handler){return function selfHandler(e){if(e.target===e.currentTarget){return handler.call(this,e);}};}var on$1={priority:ON,acceptStatement:true,keyCodes:keyCodes,bind:function bind(){ // deal with iframes\nif(this.el.tagName==='IFRAME'&&this.arg!=='load'){var self=this;this.iframeBind=function(){on(self.el.contentWindow,self.arg,self.handler,self.modifiers.capture);};this.on('load',this.iframeBind);}},update:function update(handler){ // stub a noop for v-on with no value,\n// e.g. @mousedown.prevent\nif(!this.descriptor.raw){handler=function handler(){};}if(typeof handler!=='function'){'development'!=='production'&&warn('v-on:'+this.arg+'=\"'+this.expression+'\" expects a function value, '+'got '+handler);return;} // apply modifiers\nif(this.modifiers.stop){handler=stopFilter(handler);}if(this.modifiers.prevent){handler=preventFilter(handler);}if(this.modifiers.self){handler=selfFilter(handler);} // key filter\nvar keys=Object.keys(this.modifiers).filter(function(key){return key!=='stop'&&key!=='prevent';});if(keys.length){handler=keyFilter(handler,keys);}this.reset();this.handler=handler;if(this.iframeBind){this.iframeBind();}else {on(this.el,this.arg,this.handler,this.modifiers.capture);}},reset:function reset(){var el=this.iframeBind?this.el.contentWindow:this.el;if(this.handler){off(el,this.arg,this.handler);}},unbind:function unbind(){this.reset();}};var prefixes=['-webkit-','-moz-','-ms-'];var camelPrefixes=['Webkit','Moz','ms'];var importantRE=/!important;?$/;var propCache=Object.create(null);var testEl=null;var style={deep:true,update:function update(value){if(typeof value==='string'){this.el.style.cssText=value;}else if(isArray(value)){this.handleObject(value.reduce(extend,{}));}else {this.handleObject(value||{});}},handleObject:function handleObject(value){ // cache object styles so that only changed props\n// are actually updated.\nvar cache=this.cache||(this.cache={});var name,val;for(name in cache){if(!(name in value)){this.handleSingle(name,null);delete cache[name];}}for(name in value){val=value[name];if(val!==cache[name]){cache[name]=val;this.handleSingle(name,val);}}},handleSingle:function handleSingle(prop,value){prop=normalize(prop);if(!prop)return; // unsupported prop\n// cast possible numbers/booleans into strings\nif(value!=null)value+='';if(value){var isImportant=importantRE.test(value)?'important':'';if(isImportant){value=value.replace(importantRE,'').trim();}this.el.style.setProperty(prop,value,isImportant);}else {this.el.style.removeProperty(prop);}}}; /**\n   * Normalize a CSS property name.\n   * - cache result\n   * - auto prefix\n   * - camelCase -> dash-case\n   *\n   * @param {String} prop\n   * @return {String}\n   */function normalize(prop){if(propCache[prop]){return propCache[prop];}var res=prefix(prop);propCache[prop]=propCache[res]=res;return res;} /**\n   * Auto detect the appropriate prefix for a CSS property.\n   * https://gist.github.com/paulirish/523692\n   *\n   * @param {String} prop\n   * @return {String}\n   */function prefix(prop){prop=hyphenate(prop);var camel=camelize(prop);var upper=camel.charAt(0).toUpperCase()+camel.slice(1);if(!testEl){testEl=document.createElement('div');}var i=prefixes.length;var prefixed;while(i--){prefixed=camelPrefixes[i]+upper;if(prefixed in testEl.style){return prefixes[i]+prop;}}if(camel in testEl.style){return prop;}} // xlink\nvar xlinkNS='http://www.w3.org/1999/xlink';var xlinkRE=/^xlink:/; // check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE=/^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/; // these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE=/^(?:value|checked|selected|muted)$/; // these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE=/^(?:draggable|contenteditable|spellcheck)$/; // these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps={value:'_value','true-value':'_trueValue','false-value':'_falseValue'};var bind$1={priority:BIND,bind:function bind(){var attr=this.arg;var tag=this.el.tagName; // should be deep watch on object mode\nif(!attr){this.deep=true;} // handle interpolation bindings\nvar descriptor=this.descriptor;var tokens=descriptor.interp;if(tokens){ // handle interpolations with one-time tokens\nif(descriptor.hasOneTime){this.expression=tokensToExp(tokens,this._scope||this.vm);} // only allow binding on native attributes\nif(disallowedInterpAttrRE.test(attr)||attr==='name'&&(tag==='PARTIAL'||tag==='SLOT')){'development'!=='production'&&warn(attr+'=\"'+descriptor.raw+'\": '+'attribute interpolation is not allowed in Vue.js '+'directives and special attributes.');this.el.removeAttribute(attr);this.invalid=true;} /* istanbul ignore if */if('development'!=='production'){var raw=attr+'=\"'+descriptor.raw+'\": '; // warn src\nif(attr==='src'){warn(raw+'interpolation in \"src\" attribute will cause '+'a 404 request. Use v-bind:src instead.');} // warn style\nif(attr==='style'){warn(raw+'interpolation in \"style\" attribute will cause '+'the attribute to be discarded in Internet Explorer. '+'Use v-bind:style instead.');}}}},update:function update(value){if(this.invalid){return;}var attr=this.arg;if(this.arg){this.handleSingle(attr,value);}else {this.handleObject(value||{});}}, // share object handler with v-bind:class\nhandleObject:style.handleObject,handleSingle:function handleSingle(attr,value){var el=this.el;var interp=this.descriptor.interp;if(this.modifiers.camel){attr=camelize(attr);}if(!interp&&attrWithPropsRE.test(attr)&&attr in el){el[attr]=attr==='value'?value==null // IE9 will set input.value to \"null\" for null...\n?'':value:value;} // set model props\nvar modelProp=modelProps[attr];if(!interp&&modelProp){el[modelProp]=value; // update v-model if present\nvar model=el.__v_model;if(model){model.listener();}} // do not set value attribute for textarea\nif(attr==='value'&&el.tagName==='TEXTAREA'){el.removeAttribute(attr);return;} // update attribute\nif(enumeratedAttrRE.test(attr)){el.setAttribute(attr,value?'true':'false');}else if(value!=null&&value!==false){if(attr==='class'){ // handle edge case #1960:\n// class interpolation should not overwrite Vue transition class\nif(el.__v_trans){value+=' '+el.__v_trans.id+'-transition';}setClass(el,value);}else if(xlinkRE.test(attr)){el.setAttributeNS(xlinkNS,attr,value===true?'':value);}else {el.setAttribute(attr,value===true?'':value);}}else {el.removeAttribute(attr);}}};var el={priority:EL,bind:function bind(){ /* istanbul ignore if */if(!this.arg){return;}var id=this.id=camelize(this.arg);var refs=(this._scope||this.vm).$els;if(hasOwn(refs,id)){refs[id]=this.el;}else {defineReactive(refs,id,this.el);}},unbind:function unbind(){var refs=(this._scope||this.vm).$els;if(refs[this.id]===this.el){refs[this.id]=null;}}};var ref={bind:function bind(){'development'!=='production'&&warn('v-ref:'+this.arg+' must be used on a child '+'component. Found on <'+this.el.tagName.toLowerCase()+'>.');}};var cloak={bind:function bind(){var el=this.el;this.vm.$once('pre-hook:compiled',function(){el.removeAttribute('v-cloak');});}}; // must export plain object\nvar directives={text:text$1,html:html,'for':vFor,'if':vIf,show:show,model:model,on:on$1,bind:bind$1,el:el,ref:ref,cloak:cloak};var vClass={deep:true,update:function update(value){if(value&&typeof value==='string'){this.handleObject(stringToObject(value));}else if(isPlainObject(value)){this.handleObject(value);}else if(isArray(value)){this.handleArray(value);}else {this.cleanup();}},handleObject:function handleObject(value){this.cleanup(value);var keys=this.prevKeys=Object.keys(value);for(var i=0,l=keys.length;i<l;i++){var key=keys[i];if(value[key]){addClass(this.el,key);}else {removeClass(this.el,key);}}},handleArray:function handleArray(value){this.cleanup(value);for(var i=0,l=value.length;i<l;i++){if(value[i]){addClass(this.el,value[i]);}}this.prevKeys=value.slice();},cleanup:function cleanup(value){if(this.prevKeys){var i=this.prevKeys.length;while(i--){var key=this.prevKeys[i];if(key&&(!value||!contains(value,key))){removeClass(this.el,key);}}}}};function stringToObject(value){var res={};var keys=value.trim().split(/\\s+/);var i=keys.length;while(i--){res[keys[i]]=true;}return res;}function contains(value,key){return isArray(value)?value.indexOf(key)>-1:hasOwn(value,key);}var component={priority:COMPONENT,params:['keep-alive','transition-mode','inline-template'], /**\n     * Setup. Two possible usages:\n     *\n     * - static:\n     *   <comp> or <div v-component=\"comp\">\n     *\n     * - dynamic:\n     *   <component :is=\"view\">\n     */bind:function bind(){if(!this.el.__vue__){ // keep-alive cache\nthis.keepAlive=this.params.keepAlive;if(this.keepAlive){this.cache={};} // check inline-template\nif(this.params.inlineTemplate){ // extract inline template as a DocumentFragment\nthis.inlineTemplate=extractContent(this.el,true);} // component resolution related state\nthis.pendingComponentCb=this.Component=null; // transition related state\nthis.pendingRemovals=0;this.pendingRemovalCb=null; // create a ref anchor\nthis.anchor=createAnchor('v-component');replace(this.el,this.anchor); // remove is attribute.\n// this is removed during compilation, but because compilation is\n// cached, when the component is used elsewhere this attribute\n// will remain at link time.\nthis.el.removeAttribute('is'); // remove ref, same as above\nif(this.descriptor.ref){this.el.removeAttribute('v-ref:'+hyphenate(this.descriptor.ref));} // if static, build right now.\nif(this.literal){this.setComponent(this.expression);}}else {'development'!=='production'&&warn('cannot mount component \"'+this.expression+'\" '+'on already mounted element: '+this.el);}}, /**\n     * Public update, called by the watcher in the dynamic\n     * literal scenario, e.g. <component :is=\"view\">\n     */update:function update(value){if(!this.literal){this.setComponent(value);}}, /**\n     * Switch dynamic components. May resolve the component\n     * asynchronously, and perform transition based on\n     * specified transition mode. Accepts a few additional\n     * arguments specifically for vue-router.\n     *\n     * The callback is called when the full transition is\n     * finished.\n     *\n     * @param {String} value\n     * @param {Function} [cb]\n     */setComponent:function setComponent(value,cb){this.invalidatePending();if(!value){ // just remove current\nthis.unbuild(true);this.remove(this.childVM,cb);this.childVM=null;}else {var self=this;this.resolveComponent(value,function(){self.mountComponent(cb);});}}, /**\n     * Resolve the component constructor to use when creating\n     * the child vm.\n     */resolveComponent:function resolveComponent(id,cb){var self=this;this.pendingComponentCb=cancellable(function(Component){self.ComponentName=Component.options.name||id;self.Component=Component;cb();});this.vm._resolveComponent(id,this.pendingComponentCb);}, /**\n     * Create a new instance using the current constructor and\n     * replace the existing instance. This method doesn't care\n     * whether the new component and the old one are actually\n     * the same.\n     *\n     * @param {Function} [cb]\n     */mountComponent:function mountComponent(cb){ // actual mount\nthis.unbuild(true);var self=this;var activateHooks=this.Component.options.activate;var cached=this.getCached();var newComponent=this.build();if(activateHooks&&!cached){this.waitingFor=newComponent;callActivateHooks(activateHooks,newComponent,function(){if(self.waitingFor!==newComponent){return;}self.waitingFor=null;self.transition(newComponent,cb);});}else { // update ref for kept-alive component\nif(cached){newComponent._updateRef();}this.transition(newComponent,cb);}}, /**\n     * When the component changes or unbinds before an async\n     * constructor is resolved, we need to invalidate its\n     * pending callback.\n     */invalidatePending:function invalidatePending(){if(this.pendingComponentCb){this.pendingComponentCb.cancel();this.pendingComponentCb=null;}}, /**\n     * Instantiate/insert a new child vm.\n     * If keep alive and has cached instance, insert that\n     * instance; otherwise build a new one and cache it.\n     *\n     * @param {Object} [extraOptions]\n     * @return {Vue} - the created instance\n     */build:function build(extraOptions){var cached=this.getCached();if(cached){return cached;}if(this.Component){ // default options\nvar options={name:this.ComponentName,el:cloneNode(this.el),template:this.inlineTemplate, // make sure to add the child with correct parent\n// if this is a transcluded component, its parent\n// should be the transclusion host.\nparent:this._host||this.vm, // if no inline-template, then the compiled\n// linker can be cached for better performance.\n_linkerCachable:!this.inlineTemplate,_ref:this.descriptor.ref,_asComponent:true,_isRouterView:this._isRouterView, // if this is a transcluded component, context\n// will be the common parent vm of this instance\n// and its host.\n_context:this.vm, // if this is inside an inline v-for, the scope\n// will be the intermediate scope created for this\n// repeat fragment. this is used for linking props\n// and container directives.\n_scope:this._scope, // pass in the owner fragment of this component.\n// this is necessary so that the fragment can keep\n// track of its contained components in order to\n// call attach/detach hooks for them.\n_frag:this._frag}; // extra options\n// in 1.0.0 this is used by vue-router only\n/* istanbul ignore if */if(extraOptions){extend(options,extraOptions);}var child=new this.Component(options);if(this.keepAlive){this.cache[this.Component.cid]=child;} /* istanbul ignore if */if('development'!=='production'&&this.el.hasAttribute('transition')&&child._isFragment){warn('Transitions will not work on a fragment instance. '+'Template: '+child.$options.template);}return child;}}, /**\n     * Try to get a cached instance of the current component.\n     *\n     * @return {Vue|undefined}\n     */getCached:function getCached(){return this.keepAlive&&this.cache[this.Component.cid];}, /**\n     * Teardown the current child, but defers cleanup so\n     * that we can separate the destroy and removal steps.\n     *\n     * @param {Boolean} defer\n     */unbuild:function unbuild(defer){if(this.waitingFor){this.waitingFor.$destroy();this.waitingFor=null;}var child=this.childVM;if(!child||this.keepAlive){if(child){ // remove ref\nchild._updateRef(true);}return;} // the sole purpose of `deferCleanup` is so that we can\n// \"deactivate\" the vm right now and perform DOM removal\n// later.\nchild.$destroy(false,defer);}, /**\n     * Remove current destroyed child and manually do\n     * the cleanup after removal.\n     *\n     * @param {Function} cb\n     */remove:function remove(child,cb){var keepAlive=this.keepAlive;if(child){ // we may have a component switch when a previous\n// component is still being transitioned out.\n// we want to trigger only one lastest insertion cb\n// when the existing transition finishes. (#1119)\nthis.pendingRemovals++;this.pendingRemovalCb=cb;var self=this;child.$remove(function(){self.pendingRemovals--;if(!keepAlive)child._cleanup();if(!self.pendingRemovals&&self.pendingRemovalCb){self.pendingRemovalCb();self.pendingRemovalCb=null;}});}else if(cb){cb();}}, /**\n     * Actually swap the components, depending on the\n     * transition mode. Defaults to simultaneous.\n     *\n     * @param {Vue} target\n     * @param {Function} [cb]\n     */transition:function transition(target,cb){var self=this;var current=this.childVM; // for devtool inspection\nif('development'!=='production'){if(current)current._inactive=true;target._inactive=false;}this.childVM=target;switch(self.params.transitionMode){case 'in-out':target.$before(self.anchor,function(){self.remove(current,cb);});break;case 'out-in':self.remove(current,function(){target.$before(self.anchor,cb);});break;default:self.remove(current);target.$before(self.anchor,cb);}}, /**\n     * Unbind.\n     */unbind:function unbind(){this.invalidatePending(); // Do not defer cleanup when unbinding\nthis.unbuild(); // destroy all keep-alive cached instances\nif(this.cache){for(var key in this.cache){this.cache[key].$destroy();}this.cache=null;}}}; /**\n   * Call activate hooks in order (asynchronous)\n   *\n   * @param {Array} hooks\n   * @param {Vue} vm\n   * @param {Function} cb\n   */function callActivateHooks(hooks,vm,cb){var total=hooks.length;var called=0;hooks[0].call(vm,next);function next(){if(++called>=total){cb();}else {hooks[called].call(vm,next);}}}var bindingModes=config._propBindingModes;var propDef={bind:function bind(){var child=this.vm;var parent=child._context; // passed in from compiler directly\nvar prop=this.descriptor.prop;var childKey=prop.path;var parentKey=prop.parentPath;var twoWay=prop.mode===bindingModes.TWO_WAY;var parentWatcher=this.parentWatcher=new Watcher(parent,parentKey,function(val){val=coerceProp(prop,val);if(assertProp(prop,val)){child[childKey]=val;}},{twoWay:twoWay,filters:prop.filters, // important: props need to be observed on the\n// v-for scope if present\nscope:this._scope}); // set the child initial value.\ninitProp(child,prop,parentWatcher.value); // setup two-way binding\nif(twoWay){ // important: defer the child watcher creation until\n// the created hook (after data observation)\nvar self=this;child.$once('pre-hook:created',function(){self.childWatcher=new Watcher(child,childKey,function(val){parentWatcher.set(val);},{ // ensure sync upward before parent sync down.\n// this is necessary in cases e.g. the child\n// mutates a prop array, then replaces it. (#1683)\nsync:true});});}},unbind:function unbind(){this.parentWatcher.teardown();if(this.childWatcher){this.childWatcher.teardown();}}};var queue$1=[];var queued=false; /**\n   * Push a job into the queue.\n   *\n   * @param {Function} job\n   */function pushJob(job){queue$1.push(job);if(!queued){queued=true;nextTick(flush);}} /**\n   * Flush the queue, and do one forced reflow before\n   * triggering transitions.\n   */function flush(){ // Force layout\nvar f=document.documentElement.offsetHeight;for(var i=0;i<queue$1.length;i++){queue$1[i]();}queue$1=[];queued=false; // dummy return, so js linters don't complain about\n// unused variable f\nreturn f;}var TYPE_TRANSITION='transition';var TYPE_ANIMATION='animation';var transDurationProp=transitionProp+'Duration';var animDurationProp=animationProp+'Duration'; /**\n   * A Transition object that encapsulates the state and logic\n   * of the transition.\n   *\n   * @param {Element} el\n   * @param {String} id\n   * @param {Object} hooks\n   * @param {Vue} vm\n   */function Transition(el,id,hooks,vm){this.id=id;this.el=el;this.enterClass=hooks&&hooks.enterClass||id+'-enter';this.leaveClass=hooks&&hooks.leaveClass||id+'-leave';this.hooks=hooks;this.vm=vm; // async state\nthis.pendingCssEvent=this.pendingCssCb=this.cancel=this.pendingJsCb=this.op=this.cb=null;this.justEntered=false;this.entered=this.left=false;this.typeCache={}; // check css transition type\nthis.type=hooks&&hooks.type; /* istanbul ignore if */if('development'!=='production'){if(this.type&&this.type!==TYPE_TRANSITION&&this.type!==TYPE_ANIMATION){warn('invalid CSS transition type for transition=\"'+this.id+'\": '+this.type);}} // bind\nvar self=this;['enterNextTick','enterDone','leaveNextTick','leaveDone'].forEach(function(m){self[m]=bind(self[m],self);});}var p$1=Transition.prototype; /**\n   * Start an entering transition.\n   *\n   * 1. enter transition triggered\n   * 2. call beforeEnter hook\n   * 3. add enter class\n   * 4. insert/show element\n   * 5. call enter hook (with possible explicit js callback)\n   * 6. reflow\n   * 7. based on transition type:\n   *    - transition:\n   *        remove class now, wait for transitionend,\n   *        then done if there's no explicit js callback.\n   *    - animation:\n   *        wait for animationend, remove class,\n   *        then done if there's no explicit js callback.\n   *    - no css transition:\n   *        done now if there's no explicit js callback.\n   * 8. wait for either done or js callback, then call\n   *    afterEnter hook.\n   *\n   * @param {Function} op - insert/show the element\n   * @param {Function} [cb]\n   */p$1.enter=function(op,cb){this.cancelPending();this.callHook('beforeEnter');this.cb=cb;addClass(this.el,this.enterClass);op();this.entered=false;this.callHookWithCb('enter');if(this.entered){return; // user called done synchronously.\n}this.cancel=this.hooks&&this.hooks.enterCancelled;pushJob(this.enterNextTick);}; /**\n   * The \"nextTick\" phase of an entering transition, which is\n   * to be pushed into a queue and executed after a reflow so\n   * that removing the class can trigger a CSS transition.\n   */p$1.enterNextTick=function(){ // Important hack:\n// in Chrome, if a just-entered element is applied the\n// leave class while its interpolated property still has\n// a very small value (within one frame), Chrome will\n// skip the leave transition entirely and not firing the\n// transtionend event. Therefore we need to protected\n// against such cases using a one-frame timeout.\nthis.justEntered=true;var self=this;setTimeout(function(){self.justEntered=false;},17);var enterDone=this.enterDone;var type=this.getCssTransitionType(this.enterClass);if(!this.pendingJsCb){if(type===TYPE_TRANSITION){ // trigger transition by removing enter class now\nremoveClass(this.el,this.enterClass);this.setupCssCb(transitionEndEvent,enterDone);}else if(type===TYPE_ANIMATION){this.setupCssCb(animationEndEvent,enterDone);}else {enterDone();}}else if(type===TYPE_TRANSITION){removeClass(this.el,this.enterClass);}}; /**\n   * The \"cleanup\" phase of an entering transition.\n   */p$1.enterDone=function(){this.entered=true;this.cancel=this.pendingJsCb=null;removeClass(this.el,this.enterClass);this.callHook('afterEnter');if(this.cb)this.cb();}; /**\n   * Start a leaving transition.\n   *\n   * 1. leave transition triggered.\n   * 2. call beforeLeave hook\n   * 3. add leave class (trigger css transition)\n   * 4. call leave hook (with possible explicit js callback)\n   * 5. reflow if no explicit js callback is provided\n   * 6. based on transition type:\n   *    - transition or animation:\n   *        wait for end event, remove class, then done if\n   *        there's no explicit js callback.\n   *    - no css transition:\n   *        done if there's no explicit js callback.\n   * 7. wait for either done or js callback, then call\n   *    afterLeave hook.\n   *\n   * @param {Function} op - remove/hide the element\n   * @param {Function} [cb]\n   */p$1.leave=function(op,cb){this.cancelPending();this.callHook('beforeLeave');this.op=op;this.cb=cb;addClass(this.el,this.leaveClass);this.left=false;this.callHookWithCb('leave');if(this.left){return; // user called done synchronously.\n}this.cancel=this.hooks&&this.hooks.leaveCancelled; // only need to handle leaveDone if\n// 1. the transition is already done (synchronously called\n//    by the user, which causes this.op set to null)\n// 2. there's no explicit js callback\nif(this.op&&!this.pendingJsCb){ // if a CSS transition leaves immediately after enter,\n// the transitionend event never fires. therefore we\n// detect such cases and end the leave immediately.\nif(this.justEntered){this.leaveDone();}else {pushJob(this.leaveNextTick);}}}; /**\n   * The \"nextTick\" phase of a leaving transition.\n   */p$1.leaveNextTick=function(){var type=this.getCssTransitionType(this.leaveClass);if(type){var event=type===TYPE_TRANSITION?transitionEndEvent:animationEndEvent;this.setupCssCb(event,this.leaveDone);}else {this.leaveDone();}}; /**\n   * The \"cleanup\" phase of a leaving transition.\n   */p$1.leaveDone=function(){this.left=true;this.cancel=this.pendingJsCb=null;this.op();removeClass(this.el,this.leaveClass);this.callHook('afterLeave');if(this.cb)this.cb();this.op=null;}; /**\n   * Cancel any pending callbacks from a previously running\n   * but not finished transition.\n   */p$1.cancelPending=function(){this.op=this.cb=null;var hasPending=false;if(this.pendingCssCb){hasPending=true;off(this.el,this.pendingCssEvent,this.pendingCssCb);this.pendingCssEvent=this.pendingCssCb=null;}if(this.pendingJsCb){hasPending=true;this.pendingJsCb.cancel();this.pendingJsCb=null;}if(hasPending){removeClass(this.el,this.enterClass);removeClass(this.el,this.leaveClass);}if(this.cancel){this.cancel.call(this.vm,this.el);this.cancel=null;}}; /**\n   * Call a user-provided synchronous hook function.\n   *\n   * @param {String} type\n   */p$1.callHook=function(type){if(this.hooks&&this.hooks[type]){this.hooks[type].call(this.vm,this.el);}}; /**\n   * Call a user-provided, potentially-async hook function.\n   * We check for the length of arguments to see if the hook\n   * expects a `done` callback. If true, the transition's end\n   * will be determined by when the user calls that callback;\n   * otherwise, the end is determined by the CSS transition or\n   * animation.\n   *\n   * @param {String} type\n   */p$1.callHookWithCb=function(type){var hook=this.hooks&&this.hooks[type];if(hook){if(hook.length>1){this.pendingJsCb=cancellable(this[type+'Done']);}hook.call(this.vm,this.el,this.pendingJsCb);}}; /**\n   * Get an element's transition type based on the\n   * calculated styles.\n   *\n   * @param {String} className\n   * @return {Number}\n   */p$1.getCssTransitionType=function(className){ /* istanbul ignore if */if(!transitionEndEvent|| // skip CSS transitions if page is not visible -\n// this solves the issue of transitionend events not\n// firing until the page is visible again.\n// pageVisibility API is supported in IE10+, same as\n// CSS transitions.\ndocument.hidden|| // explicit js-only transition\nthis.hooks&&this.hooks.css===false|| // element is hidden\nisHidden(this.el)){return;}var type=this.type||this.typeCache[className];if(type)return type;var inlineStyles=this.el.style;var computedStyles=window.getComputedStyle(this.el);var transDuration=inlineStyles[transDurationProp]||computedStyles[transDurationProp];if(transDuration&&transDuration!=='0s'){type=TYPE_TRANSITION;}else {var animDuration=inlineStyles[animDurationProp]||computedStyles[animDurationProp];if(animDuration&&animDuration!=='0s'){type=TYPE_ANIMATION;}}if(type){this.typeCache[className]=type;}return type;}; /**\n   * Setup a CSS transitionend/animationend callback.\n   *\n   * @param {String} event\n   * @param {Function} cb\n   */p$1.setupCssCb=function(event,cb){this.pendingCssEvent=event;var self=this;var el=this.el;var onEnd=this.pendingCssCb=function(e){if(e.target===el){off(el,event,onEnd);self.pendingCssEvent=self.pendingCssCb=null;if(!self.pendingJsCb&&cb){cb();}}};on(el,event,onEnd);}; /**\n   * Check if an element is hidden - in that case we can just\n   * skip the transition alltogether.\n   *\n   * @param {Element} el\n   * @return {Boolean}\n   */function isHidden(el){if(/svg$/.test(el.namespaceURI)){ // SVG elements do not have offset(Width|Height)\n// so we need to check the client rect\nvar rect=el.getBoundingClientRect();return !(rect.width||rect.height);}else {return !(el.offsetWidth||el.offsetHeight||el.getClientRects().length);}}var transition$1={priority:TRANSITION,update:function update(id,oldId){var el=this.el; // resolve on owner vm\nvar hooks=resolveAsset(this.vm.$options,'transitions',id);id=id||'v';el.__v_trans=new Transition(el,id,hooks,this.vm);if(oldId){removeClass(el,oldId+'-transition');}addClass(el,id+'-transition');}};var internalDirectives={style:style,'class':vClass,component:component,prop:propDef,transition:transition$1};var propBindingModes=config._propBindingModes;var empty={}; // regexes\nvar identRE$1=/^[$_a-zA-Z]+[\\w$]*$/;var settablePathRE=/^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/; /**\n   * Compile props on a root element and return\n   * a props link function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Array} propOptions\n   * @return {Function} propsLinkFn\n   */function compileProps(el,propOptions){var props=[];var names=Object.keys(propOptions);var i=names.length;var options,name,attr,value,path,parsed,prop;while(i--){name=names[i];options=propOptions[name]||empty;if('development'!=='production'&&name==='$data'){warn('Do not use $data as prop.');continue;} // props could contain dashes, which will be\n// interpreted as minus calculations by the parser\n// so we need to camelize the path here\npath=camelize(name);if(!identRE$1.test(path)){'development'!=='production'&&warn('Invalid prop key: \"'+name+'\". Prop keys '+'must be valid identifiers.');continue;}prop={name:name,path:path,options:options,mode:propBindingModes.ONE_WAY,raw:null};attr=hyphenate(name); // first check dynamic version\nif((value=getBindAttr(el,attr))===null){if((value=getBindAttr(el,attr+'.sync'))!==null){prop.mode=propBindingModes.TWO_WAY;}else if((value=getBindAttr(el,attr+'.once'))!==null){prop.mode=propBindingModes.ONE_TIME;}}if(value!==null){ // has dynamic binding!\nprop.raw=value;parsed=parseDirective(value);value=parsed.expression;prop.filters=parsed.filters; // check binding type\nif(isLiteral(value)&&!parsed.filters){ // for expressions containing literal numbers and\n// booleans, there's no need to setup a prop binding,\n// so we can optimize them as a one-time set.\nprop.optimizedLiteral=true;}else {prop.dynamic=true; // check non-settable path for two-way bindings\nif('development'!=='production'&&prop.mode===propBindingModes.TWO_WAY&&!settablePathRE.test(value)){prop.mode=propBindingModes.ONE_WAY;warn('Cannot bind two-way prop with non-settable '+'parent path: '+value);}}prop.parentPath=value; // warn required two-way\nif('development'!=='production'&&options.twoWay&&prop.mode!==propBindingModes.TWO_WAY){warn('Prop \"'+name+'\" expects a two-way binding type.');}}else if((value=getAttr(el,attr))!==null){ // has literal binding!\nprop.raw=value;}else if('development'!=='production'){ // check possible camelCase prop usage\nvar lowerCaseName=path.toLowerCase();value=/[A-Z\\-]/.test(name)&&(el.getAttribute(lowerCaseName)||el.getAttribute(':'+lowerCaseName)||el.getAttribute('v-bind:'+lowerCaseName)||el.getAttribute(':'+lowerCaseName+'.once')||el.getAttribute('v-bind:'+lowerCaseName+'.once')||el.getAttribute(':'+lowerCaseName+'.sync')||el.getAttribute('v-bind:'+lowerCaseName+'.sync'));if(value){warn('Possible usage error for prop `'+lowerCaseName+'` - '+'did you mean `'+attr+'`? HTML is case-insensitive, remember to use '+'kebab-case for props in templates.');}else if(options.required){ // warn missing required\nwarn('Missing required prop: '+name);}} // push prop\nprops.push(prop);}return makePropsLinkFn(props);} /**\n   * Build a function that applies props to a vm.\n   *\n   * @param {Array} props\n   * @return {Function} propsLinkFn\n   */function makePropsLinkFn(props){return function propsLinkFn(vm,scope){ // store resolved props info\nvm._props={};var i=props.length;var prop,path,options,value,raw;while(i--){prop=props[i];raw=prop.raw;path=prop.path;options=prop.options;vm._props[path]=prop;if(raw===null){ // initialize absent prop\ninitProp(vm,prop,getDefault(vm,options));}else if(prop.dynamic){ // dynamic prop\nif(prop.mode===propBindingModes.ONE_TIME){ // one time binding\nvalue=(scope||vm._context||vm).$get(prop.parentPath);initProp(vm,prop,value);}else {if(vm._context){ // dynamic binding\nvm._bindDir({name:'prop',def:propDef,prop:prop},null,null,scope); // el, host, scope\n}else { // root instance\ninitProp(vm,prop,vm.$get(prop.parentPath));}}}else if(prop.optimizedLiteral){ // optimized literal, cast it and just set once\nvar stripped=stripQuotes(raw);value=stripped===raw?toBoolean(toNumber(raw)):stripped;initProp(vm,prop,value);}else { // string literal, but we need to cater for\n// Boolean props with no value\nvalue=options.type===Boolean&&raw===''?true:raw;initProp(vm,prop,value);}}};} /**\n   * Get the default value of a prop.\n   *\n   * @param {Vue} vm\n   * @param {Object} options\n   * @return {*}\n   */function getDefault(vm,options){ // no default, return undefined\nif(!hasOwn(options,'default')){ // absent boolean value defaults to false\nreturn options.type===Boolean?false:undefined;}var def=options['default']; // warn against non-factory defaults for Object & Array\nif(isObject(def)){'development'!=='production'&&warn('Object/Array as default prop values will be shared '+'across multiple instances. Use a factory function '+'to return the default value instead.');} // call factory function for non-Function types\nreturn typeof def==='function'&&options.type!==Function?def.call(vm):def;} // special binding prefixes\nvar bindRE=/^v-bind:|^:/;var onRE=/^v-on:|^@/;var dirAttrRE=/^v-([^:]+)(?:$|:(.*)$)/;var modifierRE=/\\.[^\\.]+/g;var transitionRE=/^(v-bind:|:)?transition$/; // terminal directives\nvar terminalDirectives=['for','if']; // default directive priority\nvar DEFAULT_PRIORITY=1000; /**\n   * Compile a template and return a reusable composite link\n   * function, which recursively contains more link functions\n   * inside. This top level compile function would normally\n   * be called on instance root nodes, but can also be used\n   * for partial compilation if the partial argument is true.\n   *\n   * The returned composite link function, when called, will\n   * return an unlink function that tearsdown all directives\n   * created during the linking phase.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Object} options\n   * @param {Boolean} partial\n   * @return {Function}\n   */function compile(el,options,partial){ // link function for the node itself.\nvar nodeLinkFn=partial||!options._asComponent?compileNode(el,options):null; // link function for the childNodes\nvar childLinkFn=!(nodeLinkFn&&nodeLinkFn.terminal)&&el.tagName!=='SCRIPT'&&el.hasChildNodes()?compileNodeList(el.childNodes,options):null; /**\n     * A composite linker function to be called on a already\n     * compiled piece of DOM, which instantiates all directive\n     * instances.\n     *\n     * @param {Vue} vm\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host] - host vm of transcluded content\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - link context fragment\n     * @return {Function|undefined}\n     */return function compositeLinkFn(vm,el,host,scope,frag){ // cache childNodes before linking parent, fix #657\nvar childNodes=toArray(el.childNodes); // link\nvar dirs=linkAndCapture(function compositeLinkCapturer(){if(nodeLinkFn)nodeLinkFn(vm,el,host,scope,frag);if(childLinkFn)childLinkFn(vm,childNodes,host,scope,frag);},vm);return makeUnlinkFn(vm,dirs);};} /**\n   * Apply a linker to a vm/element pair and capture the\n   * directives created during the process.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   */function linkAndCapture(linker,vm){ /* istanbul ignore if */if('development'==='production'){}var originalDirCount=vm._directives.length;linker();var dirs=vm._directives.slice(originalDirCount);dirs.sort(directiveComparator);for(var i=0,l=dirs.length;i<l;i++){dirs[i]._bind();}return dirs;} /**\n   * Directive priority sort comparator\n   *\n   * @param {Object} a\n   * @param {Object} b\n   */function directiveComparator(a,b){a=a.descriptor.def.priority||DEFAULT_PRIORITY;b=b.descriptor.def.priority||DEFAULT_PRIORITY;return a>b?-1:a===b?0:1;} /**\n   * Linker functions return an unlink function that\n   * tearsdown all directives instances generated during\n   * the process.\n   *\n   * We create unlink functions with only the necessary\n   * information to avoid retaining additional closures.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Vue} [context]\n   * @param {Array} [contextDirs]\n   * @return {Function}\n   */function makeUnlinkFn(vm,dirs,context,contextDirs){function unlink(destroying){teardownDirs(vm,dirs,destroying);if(context&&contextDirs){teardownDirs(context,contextDirs);}} // expose linked directives\nunlink.dirs=dirs;return unlink;} /**\n   * Teardown partial linked directives.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Boolean} destroying\n   */function teardownDirs(vm,dirs,destroying){var i=dirs.length;while(i--){dirs[i]._teardown();if('development'!=='production'&&!destroying){vm._directives.$remove(dirs[i]);}}} /**\n   * Compile link props on an instance.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} props\n   * @param {Object} [scope]\n   * @return {Function}\n   */function compileAndLinkProps(vm,el,props,scope){var propsLinkFn=compileProps(el,props);var propDirs=linkAndCapture(function(){propsLinkFn(vm,scope);},vm);return makeUnlinkFn(vm,propDirs);} /**\n   * Compile the root element of an instance.\n   *\n   * 1. attrs on context container (context scope)\n   * 2. attrs on the component template root node, if\n   *    replace:true (child scope)\n   *\n   * If this is a fragment instance, we only need to compile 1.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} contextOptions\n   * @return {Function}\n   */function compileRoot(el,options,contextOptions){var containerAttrs=options._containerAttrs;var replacerAttrs=options._replacerAttrs;var contextLinkFn,replacerLinkFn; // only need to compile other attributes for\n// non-fragment instances\nif(el.nodeType!==11){ // for components, container and replacer need to be\n// compiled separately and linked in different scopes.\nif(options._asComponent){ // 2. container attributes\nif(containerAttrs&&contextOptions){contextLinkFn=compileDirectives(containerAttrs,contextOptions);}if(replacerAttrs){ // 3. replacer attributes\nreplacerLinkFn=compileDirectives(replacerAttrs,options);}}else { // non-component, just compile as a normal element.\nreplacerLinkFn=compileDirectives(el.attributes,options);}}else if('development'!=='production'&&containerAttrs){ // warn container directives for fragment instances\nvar names=containerAttrs.filter(function(attr){ // allow vue-loader/vueify scoped css attributes\nreturn attr.name.indexOf('_v-')<0&& // allow event listeners\n!onRE.test(attr.name)&& // allow slots\nattr.name!=='slot';}).map(function(attr){return '\"'+attr.name+'\"';});if(names.length){var plural=names.length>1;warn('Attribute'+(plural?'s ':' ')+names.join(', ')+(plural?' are':' is')+' ignored on component '+'<'+options.el.tagName.toLowerCase()+'> because '+'the component is a fragment instance: '+'http://vuejs.org/guide/components.html#Fragment_Instance');}}options._containerAttrs=options._replacerAttrs=null;return function rootLinkFn(vm,el,scope){ // link context scope dirs\nvar context=vm._context;var contextDirs;if(context&&contextLinkFn){contextDirs=linkAndCapture(function(){contextLinkFn(context,el,null,scope);},context);} // link self\nvar selfDirs=linkAndCapture(function(){if(replacerLinkFn)replacerLinkFn(vm,el);},vm); // return the unlink function that tearsdown context\n// container directives.\nreturn makeUnlinkFn(vm,selfDirs,context,contextDirs);};} /**\n   * Compile a node and return a nodeLinkFn based on the\n   * node type.\n   *\n   * @param {Node} node\n   * @param {Object} options\n   * @return {Function|null}\n   */function compileNode(node,options){var type=node.nodeType;if(type===1&&node.tagName!=='SCRIPT'){return compileElement(node,options);}else if(type===3&&node.data.trim()){return compileTextNode(node,options);}else {return null;}} /**\n   * Compile an element and return a nodeLinkFn.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|null}\n   */function compileElement(el,options){ // preprocess textareas.\n// textarea treats its text content as the initial value.\n// just bind it as an attr directive for value.\nif(el.tagName==='TEXTAREA'){var tokens=parseText(el.value);if(tokens){el.setAttribute(':value',tokensToExp(tokens));el.value='';}}var linkFn;var hasAttrs=el.hasAttributes(); // check terminal directives (for & if)\nif(hasAttrs){linkFn=checkTerminalDirectives(el,options);} // check element directives\nif(!linkFn){linkFn=checkElementDirectives(el,options);} // check component\nif(!linkFn){linkFn=checkComponent(el,options);} // normal directives\nif(!linkFn&&hasAttrs){linkFn=compileDirectives(el.attributes,options);}return linkFn;} /**\n   * Compile a textNode and return a nodeLinkFn.\n   *\n   * @param {TextNode} node\n   * @param {Object} options\n   * @return {Function|null} textNodeLinkFn\n   */function compileTextNode(node,options){ // skip marked text nodes\nif(node._skip){return removeText;}var tokens=parseText(node.wholeText);if(!tokens){return null;} // mark adjacent text nodes as skipped,\n// because we are using node.wholeText to compile\n// all adjacent text nodes together. This fixes\n// issues in IE where sometimes it splits up a single\n// text node into multiple ones.\nvar next=node.nextSibling;while(next&&next.nodeType===3){next._skip=true;next=next.nextSibling;}var frag=document.createDocumentFragment();var el,token;for(var i=0,l=tokens.length;i<l;i++){token=tokens[i];el=token.tag?processTextToken(token,options):document.createTextNode(token.value);frag.appendChild(el);}return makeTextNodeLinkFn(tokens,frag,options);} /**\n   * Linker for an skipped text node.\n   *\n   * @param {Vue} vm\n   * @param {Text} node\n   */function removeText(vm,node){remove(node);} /**\n   * Process a single text token.\n   *\n   * @param {Object} token\n   * @param {Object} options\n   * @return {Node}\n   */function processTextToken(token,options){var el;if(token.oneTime){el=document.createTextNode(token.value);}else {if(token.html){el=document.createComment('v-html');setTokenType('html');}else { // IE will clean up empty textNodes during\n// frag.cloneNode(true), so we have to give it\n// something here...\nel=document.createTextNode(' ');setTokenType('text');}}function setTokenType(type){if(token.descriptor)return;var parsed=parseDirective(token.value);token.descriptor={name:type,def:directives[type],expression:parsed.expression,filters:parsed.filters};}return el;} /**\n   * Build a function that processes a textNode.\n   *\n   * @param {Array<Object>} tokens\n   * @param {DocumentFragment} frag\n   */function makeTextNodeLinkFn(tokens,frag){return function textNodeLinkFn(vm,el,host,scope){var fragClone=frag.cloneNode(true);var childNodes=toArray(fragClone.childNodes);var token,value,node;for(var i=0,l=tokens.length;i<l;i++){token=tokens[i];value=token.value;if(token.tag){node=childNodes[i];if(token.oneTime){value=(scope||vm).$eval(value);if(token.html){replace(node,parseTemplate(value,true));}else {node.data=value;}}else {vm._bindDir(token.descriptor,node,host,scope);}}}replace(el,fragClone);};} /**\n   * Compile a node list and return a childLinkFn.\n   *\n   * @param {NodeList} nodeList\n   * @param {Object} options\n   * @return {Function|undefined}\n   */function compileNodeList(nodeList,options){var linkFns=[];var nodeLinkFn,childLinkFn,node;for(var i=0,l=nodeList.length;i<l;i++){node=nodeList[i];nodeLinkFn=compileNode(node,options);childLinkFn=!(nodeLinkFn&&nodeLinkFn.terminal)&&node.tagName!=='SCRIPT'&&node.hasChildNodes()?compileNodeList(node.childNodes,options):null;linkFns.push(nodeLinkFn,childLinkFn);}return linkFns.length?makeChildLinkFn(linkFns):null;} /**\n   * Make a child link function for a node's childNodes.\n   *\n   * @param {Array<Function>} linkFns\n   * @return {Function} childLinkFn\n   */function makeChildLinkFn(linkFns){return function childLinkFn(vm,nodes,host,scope,frag){var node,nodeLinkFn,childrenLinkFn;for(var i=0,n=0,l=linkFns.length;i<l;n++){node=nodes[n];nodeLinkFn=linkFns[i++];childrenLinkFn=linkFns[i++]; // cache childNodes before linking parent, fix #657\nvar childNodes=toArray(node.childNodes);if(nodeLinkFn){nodeLinkFn(vm,node,host,scope,frag);}if(childrenLinkFn){childrenLinkFn(vm,childNodes,host,scope,frag);}}};} /**\n   * Check for element directives (custom elements that should\n   * be resovled as terminal directives).\n   *\n   * @param {Element} el\n   * @param {Object} options\n   */function checkElementDirectives(el,options){var tag=el.tagName.toLowerCase();if(commonTagRE.test(tag)){return;}var def=resolveAsset(options,'elementDirectives',tag);if(def){return makeTerminalNodeLinkFn(el,tag,'',options,def);}} /**\n   * Check if an element is a component. If yes, return\n   * a component link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|undefined}\n   */function checkComponent(el,options){var component=checkComponentAttr(el,options);if(component){var ref=findRef(el);var descriptor={name:'component',ref:ref,expression:component.id,def:internalDirectives.component,modifiers:{literal:!component.dynamic}};var componentLinkFn=function componentLinkFn(vm,el,host,scope,frag){if(ref){defineReactive((scope||vm).$refs,ref,null);}vm._bindDir(descriptor,el,host,scope,frag);};componentLinkFn.terminal=true;return componentLinkFn;}} /**\n   * Check an element for terminal directives in fixed order.\n   * If it finds one, return a terminal link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function} terminalLinkFn\n   */function checkTerminalDirectives(el,options){ // skip v-pre\nif(getAttr(el,'v-pre')!==null){return skip;} // skip v-else block, but only if following v-if\nif(el.hasAttribute('v-else')){var prev=el.previousElementSibling;if(prev&&prev.hasAttribute('v-if')){return skip;}}var value,dirName;for(var i=0,l=terminalDirectives.length;i<l;i++){dirName=terminalDirectives[i];value=el.getAttribute('v-'+dirName);if(value!=null){return makeTerminalNodeLinkFn(el,dirName,value,options);}}}function skip(){}skip.terminal=true; /**\n   * Build a node link function for a terminal directive.\n   * A terminal link function terminates the current\n   * compilation recursion and handles compilation of the\n   * subtree in the directive.\n   *\n   * @param {Element} el\n   * @param {String} dirName\n   * @param {String} value\n   * @param {Object} options\n   * @param {Object} [def]\n   * @return {Function} terminalLinkFn\n   */function makeTerminalNodeLinkFn(el,dirName,value,options,def){var parsed=parseDirective(value);var descriptor={name:dirName,expression:parsed.expression,filters:parsed.filters,raw:value, // either an element directive, or if/for\n// #2366 or custom terminal directive\ndef:def||resolveAsset(options,'directives',dirName)}; // check ref for v-for and router-view\nif(dirName==='for'||dirName==='router-view'){descriptor.ref=findRef(el);}var fn=function terminalNodeLinkFn(vm,el,host,scope,frag){if(descriptor.ref){defineReactive((scope||vm).$refs,descriptor.ref,null);}vm._bindDir(descriptor,el,host,scope,frag);};fn.terminal=true;return fn;} /**\n   * Compile the directives on an element and return a linker.\n   *\n   * @param {Array|NamedNodeMap} attrs\n   * @param {Object} options\n   * @return {Function}\n   */function compileDirectives(attrs,options){var i=attrs.length;var dirs=[];var attr,name,value,rawName,rawValue,dirName,arg,modifiers,dirDef,tokens,matched;while(i--){attr=attrs[i];name=rawName=attr.name;value=rawValue=attr.value;tokens=parseText(value); // reset arg\narg=null; // check modifiers\nmodifiers=parseModifiers(name);name=name.replace(modifierRE,''); // attribute interpolations\nif(tokens){value=tokensToExp(tokens);arg=name;pushDir('bind',directives.bind,tokens); // warn against mixing mustaches with v-bind\nif('development'!=='production'){if(name==='class'&&Array.prototype.some.call(attrs,function(attr){return attr.name===':class'||attr.name==='v-bind:class';})){warn('class=\"'+rawValue+'\": Do not mix mustache interpolation '+'and v-bind for \"class\" on the same element. Use one or the other.');}}}else  // special attribute: transition\nif(transitionRE.test(name)){modifiers.literal=!bindRE.test(name);pushDir('transition',internalDirectives.transition);}else  // event handlers\nif(onRE.test(name)){arg=name.replace(onRE,'');pushDir('on',directives.on);}else  // attribute bindings\nif(bindRE.test(name)){dirName=name.replace(bindRE,'');if(dirName==='style'||dirName==='class'){pushDir(dirName,internalDirectives[dirName]);}else {arg=dirName;pushDir('bind',directives.bind);}}else  // normal directives\nif(matched=name.match(dirAttrRE)){dirName=matched[1];arg=matched[2]; // skip v-else (when used with v-show)\nif(dirName==='else'){continue;}dirDef=resolveAsset(options,'directives',dirName);if('development'!=='production'){assertAsset(dirDef,'directive',dirName);}if(dirDef){pushDir(dirName,dirDef);}}} /**\n     * Push a directive.\n     *\n     * @param {String} dirName\n     * @param {Object|Function} def\n     * @param {Array} [interpTokens]\n     */function pushDir(dirName,def,interpTokens){var hasOneTimeToken=interpTokens&&hasOneTime(interpTokens);var parsed=!hasOneTimeToken&&parseDirective(value);dirs.push({name:dirName,attr:rawName,raw:rawValue,def:def,arg:arg,modifiers:modifiers, // conversion from interpolation strings with one-time token\n// to expression is differed until directive bind time so that we\n// have access to the actual vm context for one-time bindings.\nexpression:parsed&&parsed.expression,filters:parsed&&parsed.filters,interp:interpTokens,hasOneTime:hasOneTimeToken});}if(dirs.length){return makeNodeLinkFn(dirs);}} /**\n   * Parse modifiers from directive attribute name.\n   *\n   * @param {String} name\n   * @return {Object}\n   */function parseModifiers(name){var res=Object.create(null);var match=name.match(modifierRE);if(match){var i=match.length;while(i--){res[match[i].slice(1)]=true;}}return res;} /**\n   * Build a link function for all directives on a single node.\n   *\n   * @param {Array} directives\n   * @return {Function} directivesLinkFn\n   */function makeNodeLinkFn(directives){return function nodeLinkFn(vm,el,host,scope,frag){ // reverse apply because it's sorted low to high\nvar i=directives.length;while(i--){vm._bindDir(directives[i],el,host,scope,frag);}};} /**\n   * Check if an interpolation string contains one-time tokens.\n   *\n   * @param {Array} tokens\n   * @return {Boolean}\n   */function hasOneTime(tokens){var i=tokens.length;while(i--){if(tokens[i].oneTime)return true;}}var specialCharRE=/[^\\w\\-:\\.]/; /**\n   * Process an element or a DocumentFragment based on a\n   * instance option object. This allows us to transclude\n   * a template node/fragment before the instance is created,\n   * so the processed fragment can then be cloned and reused\n   * in v-for.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */function transclude(el,options){ // extract container attributes to pass them down\n// to compiler, because they need to be compiled in\n// parent scope. we are mutating the options object here\n// assuming the same object will be used for compile\n// right after this.\nif(options){options._containerAttrs=extractAttrs(el);} // for template tags, what we want is its content as\n// a documentFragment (for fragment instances)\nif(isTemplate(el)){el=parseTemplate(el);}if(options){if(options._asComponent&&!options.template){options.template='<slot></slot>';}if(options.template){options._content=extractContent(el);el=transcludeTemplate(el,options);}}if(isFragment(el)){ // anchors for fragment instance\n// passing in `persist: true` to avoid them being\n// discarded by IE during template cloning\nprepend(createAnchor('v-start',true),el);el.appendChild(createAnchor('v-end',true));}return el;} /**\n   * Process the template option.\n   * If the replace option is true this will swap the $el.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */function transcludeTemplate(el,options){var template=options.template;var frag=parseTemplate(template,true);if(frag){var replacer=frag.firstChild;var tag=replacer.tagName&&replacer.tagName.toLowerCase();if(options.replace){ /* istanbul ignore if */if(el===document.body){'development'!=='production'&&warn('You are mounting an instance with a template to '+'<body>. This will replace <body> entirely. You '+'should probably use `replace: false` here.');} // there are many cases where the instance must\n// become a fragment instance: basically anything that\n// can create more than 1 root nodes.\nif( // multi-children template\nfrag.childNodes.length>1|| // non-element template\nreplacer.nodeType!==1|| // single nested component\ntag==='component'||resolveAsset(options,'components',tag)||hasBindAttr(replacer,'is')|| // element directive\nresolveAsset(options,'elementDirectives',tag)|| // for block\nreplacer.hasAttribute('v-for')|| // if block\nreplacer.hasAttribute('v-if')){return frag;}else {options._replacerAttrs=extractAttrs(replacer);mergeAttrs(el,replacer);return replacer;}}else {el.appendChild(frag);return el;}}else {'development'!=='production'&&warn('Invalid template option: '+template);}} /**\n   * Helper to extract a component container's attributes\n   * into a plain object array.\n   *\n   * @param {Element} el\n   * @return {Array}\n   */function extractAttrs(el){if(el.nodeType===1&&el.hasAttributes()){return toArray(el.attributes);}} /**\n   * Merge the attributes of two elements, and make sure\n   * the class names are merged properly.\n   *\n   * @param {Element} from\n   * @param {Element} to\n   */function mergeAttrs(from,to){var attrs=from.attributes;var i=attrs.length;var name,value;while(i--){name=attrs[i].name;value=attrs[i].value;if(!to.hasAttribute(name)&&!specialCharRE.test(name)){to.setAttribute(name,value);}else if(name==='class'&&!parseText(value)){value.split(/\\s+/).forEach(function(cls){addClass(to,cls);});}}} /**\n   * Scan and determine slot content distribution.\n   * We do this during transclusion instead at compile time so that\n   * the distribution is decoupled from the compilation order of\n   * the slots.\n   *\n   * @param {Element|DocumentFragment} template\n   * @param {Element} content\n   * @param {Vue} vm\n   */function scanSlots(template,content,vm){if(!content){return;}var contents=vm._slotContents={};var slots=template.querySelectorAll('slot');if(slots.length){var hasDefault,slot,name;for(var i=0,l=slots.length;i<l;i++){slot=slots[i]; /* eslint-disable no-cond-assign */if(name=slot.getAttribute('name')){select(slot,name);}else if('development'!=='production'&&(name=getBindAttr(slot,'name'))){warn('<slot :name=\"'+name+'\">: slot names cannot be dynamic.');}else { // default slot\nhasDefault=true;} /* eslint-enable no-cond-assign */}if(hasDefault){contents['default']=extractFragment(content.childNodes,content);}}function select(slot,name){ // named slot\nvar selector='[slot=\"'+name+'\"]';var nodes=content.querySelectorAll(selector);if(nodes.length){contents[name]=extractFragment(nodes,content);}}} /**\n   * Extract qualified content nodes from a node list.\n   *\n   * @param {NodeList} nodes\n   * @param {Element} parent\n   * @return {DocumentFragment}\n   */function extractFragment(nodes,parent){var frag=document.createDocumentFragment();nodes=toArray(nodes);for(var i=0,l=nodes.length;i<l;i++){var node=nodes[i];if(node.parentNode===parent){if(isTemplate(node)&&!node.hasAttribute('v-if')&&!node.hasAttribute('v-for')){parent.removeChild(node);node=parseTemplate(node);}frag.appendChild(node);}}return frag;}var compiler=Object.freeze({compile:compile,compileAndLinkProps:compileAndLinkProps,compileRoot:compileRoot,terminalDirectives:terminalDirectives,transclude:transclude,scanSlots:scanSlots});function stateMixin(Vue){ /**\n     * Accessor for `$data` property, since setting $data\n     * requires observing the new object and updating\n     * proxied properties.\n     */Object.defineProperty(Vue.prototype,'$data',{get:function get(){return this._data;},set:function set(newData){if(newData!==this._data){this._setData(newData);}}}); /**\n     * Setup the scope of an instance, which contains:\n     * - observed data\n     * - computed properties\n     * - user methods\n     * - meta properties\n     */Vue.prototype._initState=function(){this._initProps();this._initMeta();this._initMethods();this._initData();this._initComputed();}; /**\n     * Initialize props.\n     */Vue.prototype._initProps=function(){var options=this.$options;var el=options.el;var props=options.props;if(props&&!el){'development'!=='production'&&warn('Props will not be compiled if no `el` option is '+'provided at instantiation.');} // make sure to convert string selectors into element now\nel=options.el=query(el);this._propsUnlinkFn=el&&el.nodeType===1&&props // props must be linked in proper scope if inside v-for\n?compileAndLinkProps(this,el,props,this._scope):null;}; /**\n     * Initialize the data.\n     */Vue.prototype._initData=function(){var propsData=this._data;var optionsDataFn=this.$options.data;var optionsData=optionsDataFn&&optionsDataFn();var runtimeData;if('development'!=='production'){runtimeData=(typeof this._runtimeData==='function'?this._runtimeData():this._runtimeData)||{};this._runtimeData=null;}if(optionsData){this._data=optionsData;for(var prop in propsData){if('development'!=='production'&&hasOwn(optionsData,prop)&&!hasOwn(runtimeData,prop)){warn('Data field \"'+prop+'\" is already defined '+'as a prop. Use prop default value instead.');}if(this._props[prop].raw!==null||!hasOwn(optionsData,prop)){set(optionsData,prop,propsData[prop]);}}}var data=this._data; // proxy data on instance\nvar keys=Object.keys(data);var i,key;i=keys.length;while(i--){key=keys[i];this._proxy(key);} // observe data\nobserve(data,this);}; /**\n     * Swap the instance's $data. Called in $data's setter.\n     *\n     * @param {Object} newData\n     */Vue.prototype._setData=function(newData){newData=newData||{};var oldData=this._data;this._data=newData;var keys,key,i; // unproxy keys not present in new data\nkeys=Object.keys(oldData);i=keys.length;while(i--){key=keys[i];if(!(key in newData)){this._unproxy(key);}} // proxy keys not already proxied,\n// and trigger change for changed values\nkeys=Object.keys(newData);i=keys.length;while(i--){key=keys[i];if(!hasOwn(this,key)){ // new property\nthis._proxy(key);}}oldData.__ob__.removeVm(this);observe(newData,this);this._digest();}; /**\n     * Proxy a property, so that\n     * vm.prop === vm._data.prop\n     *\n     * @param {String} key\n     */Vue.prototype._proxy=function(key){if(!isReserved(key)){ // need to store ref to self here\n// because these getter/setters might\n// be called by child scopes via\n// prototype inheritance.\nvar self=this;Object.defineProperty(self,key,{configurable:true,enumerable:true,get:function proxyGetter(){return self._data[key];},set:function proxySetter(val){self._data[key]=val;}});}}; /**\n     * Unproxy a property.\n     *\n     * @param {String} key\n     */Vue.prototype._unproxy=function(key){if(!isReserved(key)){delete this[key];}}; /**\n     * Force update on every watcher in scope.\n     */Vue.prototype._digest=function(){for(var i=0,l=this._watchers.length;i<l;i++){this._watchers[i].update(true); // shallow updates\n}}; /**\n     * Setup computed properties. They are essentially\n     * special getter/setters\n     */function noop(){}Vue.prototype._initComputed=function(){var computed=this.$options.computed;if(computed){for(var key in computed){var userDef=computed[key];var def={enumerable:true,configurable:true};if(typeof userDef==='function'){def.get=makeComputedGetter(userDef,this);def.set=noop;}else {def.get=userDef.get?userDef.cache!==false?makeComputedGetter(userDef.get,this):bind(userDef.get,this):noop;def.set=userDef.set?bind(userDef.set,this):noop;}Object.defineProperty(this,key,def);}}};function makeComputedGetter(getter,owner){var watcher=new Watcher(owner,getter,null,{lazy:true});return function computedGetter(){if(watcher.dirty){watcher.evaluate();}if(Dep.target){watcher.depend();}return watcher.value;};} /**\n     * Setup instance methods. Methods must be bound to the\n     * instance since they might be passed down as a prop to\n     * child components.\n     */Vue.prototype._initMethods=function(){var methods=this.$options.methods;if(methods){for(var key in methods){this[key]=bind(methods[key],this);}}}; /**\n     * Initialize meta information like $index, $key & $value.\n     */Vue.prototype._initMeta=function(){var metas=this.$options._meta;if(metas){for(var key in metas){defineReactive(this,key,metas[key]);}}};}var eventRE=/^v-on:|^@/;function eventsMixin(Vue){ /**\n     * Setup the instance's option events & watchers.\n     * If the value is a string, we pull it from the\n     * instance's methods by name.\n     */Vue.prototype._initEvents=function(){var options=this.$options;if(options._asComponent){registerComponentEvents(this,options.el);}registerCallbacks(this,'$on',options.events);registerCallbacks(this,'$watch',options.watch);}; /**\n     * Register v-on events on a child component\n     *\n     * @param {Vue} vm\n     * @param {Element} el\n     */function registerComponentEvents(vm,el){var attrs=el.attributes;var name,handler;for(var i=0,l=attrs.length;i<l;i++){name=attrs[i].name;if(eventRE.test(name)){name=name.replace(eventRE,'');handler=(vm._scope||vm._context).$eval(attrs[i].value,true);if(typeof handler==='function'){handler._fromParent=true;vm.$on(name.replace(eventRE),handler);}else if('development'!=='production'){warn('v-on:'+name+'=\"'+attrs[i].value+'\"'+(vm.$options.name?' on component <'+vm.$options.name+'>':'')+' expects a function value, got '+handler);}}}} /**\n     * Register callbacks for option events and watchers.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {Object} hash\n     */function registerCallbacks(vm,action,hash){if(!hash)return;var handlers,key,i,j;for(key in hash){handlers=hash[key];if(isArray(handlers)){for(i=0,j=handlers.length;i<j;i++){register(vm,action,key,handlers[i]);}}else {register(vm,action,key,handlers);}}} /**\n     * Helper to register an event/watch callback.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {String} key\n     * @param {Function|String|Object} handler\n     * @param {Object} [options]\n     */function register(vm,action,key,handler,options){var type=typeof handler==='undefined'?'undefined':_typeof(handler);if(type==='function'){vm[action](key,handler,options);}else if(type==='string'){var methods=vm.$options.methods;var method=methods&&methods[handler];if(method){vm[action](key,method,options);}else {'development'!=='production'&&warn('Unknown method: \"'+handler+'\" when '+'registering callback for '+action+': \"'+key+'\".');}}else if(handler&&type==='object'){register(vm,action,key,handler.handler,handler);}} /**\n     * Setup recursive attached/detached calls\n     */Vue.prototype._initDOMHooks=function(){this.$on('hook:attached',onAttached);this.$on('hook:detached',onDetached);}; /**\n     * Callback to recursively call attached hook on children\n     */function onAttached(){if(!this._isAttached){this._isAttached=true;this.$children.forEach(callAttach);}} /**\n     * Iterator to call attached hook\n     *\n     * @param {Vue} child\n     */function callAttach(child){if(!child._isAttached&&inDoc(child.$el)){child._callHook('attached');}} /**\n     * Callback to recursively call detached hook on children\n     */function onDetached(){if(this._isAttached){this._isAttached=false;this.$children.forEach(callDetach);}} /**\n     * Iterator to call detached hook\n     *\n     * @param {Vue} child\n     */function callDetach(child){if(child._isAttached&&!inDoc(child.$el)){child._callHook('detached');}} /**\n     * Trigger all handlers for a hook\n     *\n     * @param {String} hook\n     */Vue.prototype._callHook=function(hook){this.$emit('pre-hook:'+hook);var handlers=this.$options[hook];if(handlers){for(var i=0,j=handlers.length;i<j;i++){handlers[i].call(this);}}this.$emit('hook:'+hook);};}function noop(){} /**\n   * A directive links a DOM element with a piece of data,\n   * which is the result of evaluating an expression.\n   * It registers a watcher with the expression and calls\n   * the DOM update function when a change is triggered.\n   *\n   * @param {String} name\n   * @param {Node} el\n   * @param {Vue} vm\n   * @param {Object} descriptor\n   *                 - {String} name\n   *                 - {Object} def\n   *                 - {String} expression\n   *                 - {Array<Object>} [filters]\n   *                 - {Boolean} literal\n   *                 - {String} attr\n   *                 - {String} raw\n   * @param {Object} def - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   * @constructor\n   */function Directive(descriptor,vm,el,host,scope,frag){this.vm=vm;this.el=el; // copy descriptor properties\nthis.descriptor=descriptor;this.name=descriptor.name;this.expression=descriptor.expression;this.arg=descriptor.arg;this.modifiers=descriptor.modifiers;this.filters=descriptor.filters;this.literal=this.modifiers&&this.modifiers.literal; // private\nthis._locked=false;this._bound=false;this._listeners=null; // link context\nthis._host=host;this._scope=scope;this._frag=frag; // store directives on node in dev mode\nif('development'!=='production'&&this.el){this.el._vue_directives=this.el._vue_directives||[];this.el._vue_directives.push(this);}} /**\n   * Initialize the directive, mixin definition properties,\n   * setup the watcher, call definition bind() and update()\n   * if present.\n   *\n   * @param {Object} def\n   */Directive.prototype._bind=function(){var name=this.name;var descriptor=this.descriptor; // remove attribute\nif((name!=='cloak'||this.vm._isCompiled)&&this.el&&this.el.removeAttribute){var attr=descriptor.attr||'v-'+name;this.el.removeAttribute(attr);} // copy def properties\nvar def=descriptor.def;if(typeof def==='function'){this.update=def;}else {extend(this,def);} // setup directive params\nthis._setupParams(); // initial bind\nif(this.bind){this.bind();}this._bound=true;if(this.literal){this.update&&this.update(descriptor.raw);}else if((this.expression||this.modifiers)&&(this.update||this.twoWay)&&!this._checkStatement()){ // wrapped updater for context\nvar dir=this;if(this.update){this._update=function(val,oldVal){if(!dir._locked){dir.update(val,oldVal);}};}else {this._update=noop;}var preProcess=this._preProcess?bind(this._preProcess,this):null;var postProcess=this._postProcess?bind(this._postProcess,this):null;var watcher=this._watcher=new Watcher(this.vm,this.expression,this._update, // callback\n{filters:this.filters,twoWay:this.twoWay,deep:this.deep,preProcess:preProcess,postProcess:postProcess,scope:this._scope}); // v-model with inital inline value need to sync back to\n// model instead of update to DOM on init. They would\n// set the afterBind hook to indicate that.\nif(this.afterBind){this.afterBind();}else if(this.update){this.update(watcher.value);}}}; /**\n   * Setup all param attributes, e.g. track-by,\n   * transition-mode, etc...\n   */Directive.prototype._setupParams=function(){if(!this.params){return;}var params=this.params; // swap the params array with a fresh object.\nthis.params=Object.create(null);var i=params.length;var key,val,mappedKey;while(i--){key=params[i];mappedKey=camelize(key);val=getBindAttr(this.el,key);if(val!=null){ // dynamic\nthis._setupParamWatcher(mappedKey,val);}else { // static\nval=getAttr(this.el,key);if(val!=null){this.params[mappedKey]=val===''?true:val;}}}}; /**\n   * Setup a watcher for a dynamic param.\n   *\n   * @param {String} key\n   * @param {String} expression\n   */Directive.prototype._setupParamWatcher=function(key,expression){var self=this;var called=false;var unwatch=(this._scope||this.vm).$watch(expression,function(val,oldVal){self.params[key]=val; // since we are in immediate mode,\n// only call the param change callbacks if this is not the first update.\nif(called){var cb=self.paramWatchers&&self.paramWatchers[key];if(cb){cb.call(self,val,oldVal);}}else {called=true;}},{immediate:true,user:false});(this._paramUnwatchFns||(this._paramUnwatchFns=[])).push(unwatch);}; /**\n   * Check if the directive is a function caller\n   * and if the expression is a callable one. If both true,\n   * we wrap up the expression and use it as the event\n   * handler.\n   *\n   * e.g. on-click=\"a++\"\n   *\n   * @return {Boolean}\n   */Directive.prototype._checkStatement=function(){var expression=this.expression;if(expression&&this.acceptStatement&&!isSimplePath(expression)){var fn=parseExpression(expression).get;var scope=this._scope||this.vm;var handler=function handler(e){scope.$event=e;fn.call(scope,scope);scope.$event=null;};if(this.filters){handler=scope._applyFilters(handler,null,this.filters);}this.update(handler);return true;}}; /**\n   * Set the corresponding value with the setter.\n   * This should only be used in two-way directives\n   * e.g. v-model.\n   *\n   * @param {*} value\n   * @public\n   */Directive.prototype.set=function(value){ /* istanbul ignore else */if(this.twoWay){this._withLock(function(){this._watcher.set(value);});}else if('development'!=='production'){warn('Directive.set() can only be used inside twoWay'+'directives.');}}; /**\n   * Execute a function while preventing that function from\n   * triggering updates on this directive instance.\n   *\n   * @param {Function} fn\n   */Directive.prototype._withLock=function(fn){var self=this;self._locked=true;fn.call(self);nextTick(function(){self._locked=false;});}; /**\n   * Convenience method that attaches a DOM event listener\n   * to the directive element and autometically tears it down\n   * during unbind.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   * @param {Boolean} [useCapture]\n   */Directive.prototype.on=function(event,handler,useCapture){on(this.el,event,handler,useCapture);(this._listeners||(this._listeners=[])).push([event,handler]);}; /**\n   * Teardown the watcher and call unbind.\n   */Directive.prototype._teardown=function(){if(this._bound){this._bound=false;if(this.unbind){this.unbind();}if(this._watcher){this._watcher.teardown();}var listeners=this._listeners;var i;if(listeners){i=listeners.length;while(i--){off(this.el,listeners[i][0],listeners[i][1]);}}var unwatchFns=this._paramUnwatchFns;if(unwatchFns){i=unwatchFns.length;while(i--){unwatchFns[i]();}}if('development'!=='production'&&this.el){this.el._vue_directives.$remove(this);}this.vm=this.el=this._watcher=this._listeners=null;}};function lifecycleMixin(Vue){ /**\n     * Update v-ref for component.\n     *\n     * @param {Boolean} remove\n     */Vue.prototype._updateRef=function(remove){var ref=this.$options._ref;if(ref){var refs=(this._scope||this._context).$refs;if(remove){if(refs[ref]===this){refs[ref]=null;}}else {refs[ref]=this;}}}; /**\n     * Transclude, compile and link element.\n     *\n     * If a pre-compiled linker is available, that means the\n     * passed in element will be pre-transcluded and compiled\n     * as well - all we need to do is to call the linker.\n     *\n     * Otherwise we need to call transclude/compile/link here.\n     *\n     * @param {Element} el\n     */Vue.prototype._compile=function(el){var options=this.$options; // transclude and init element\n// transclude can potentially replace original\n// so we need to keep reference; this step also injects\n// the template and caches the original attributes\n// on the container node and replacer node.\nvar original=el;el=transclude(el,options);this._initElement(el); // handle v-pre on root node (#2026)\nif(el.nodeType===1&&getAttr(el,'v-pre')!==null){return;} // root is always compiled per-instance, because\n// container attrs and props can be different every time.\nvar contextOptions=this._context&&this._context.$options;var rootLinker=compileRoot(el,options,contextOptions); // scan for slot distribution before compiling the content\n// so that it's decoupeld from slot/directive compilation order\nscanSlots(el,options._content,this); // compile and link the rest\nvar contentLinkFn;var ctor=this.constructor; // component compilation can be cached\n// as long as it's not using inline-template\nif(options._linkerCachable){contentLinkFn=ctor.linker;if(!contentLinkFn){contentLinkFn=ctor.linker=compile(el,options);}} // link phase\n// make sure to link root with prop scope!\nvar rootUnlinkFn=rootLinker(this,el,this._scope);var contentUnlinkFn=contentLinkFn?contentLinkFn(this,el):compile(el,options)(this,el); // register composite unlink function\n// to be called during instance destruction\nthis._unlinkFn=function(){rootUnlinkFn(); // passing destroying: true to avoid searching and\n// splicing the directives\ncontentUnlinkFn(true);}; // finally replace original\nif(options.replace){replace(original,el);}this._isCompiled=true;this._callHook('compiled');}; /**\n     * Initialize instance element. Called in the public\n     * $mount() method.\n     *\n     * @param {Element} el\n     */Vue.prototype._initElement=function(el){if(isFragment(el)){this._isFragment=true;this.$el=this._fragmentStart=el.firstChild;this._fragmentEnd=el.lastChild; // set persisted text anchors to empty\nif(this._fragmentStart.nodeType===3){this._fragmentStart.data=this._fragmentEnd.data='';}this._fragment=el;}else {this.$el=el;}this.$el.__vue__=this;this._callHook('beforeCompile');}; /**\n     * Create and bind a directive to an element.\n     *\n     * @param {String} name - directive name\n     * @param {Node} node   - target node\n     * @param {Object} desc - parsed directive descriptor\n     * @param {Object} def  - directive definition object\n     * @param {Vue} [host] - transclusion host component\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - owner fragment\n     */Vue.prototype._bindDir=function(descriptor,node,host,scope,frag){this._directives.push(new Directive(descriptor,this,node,host,scope,frag));}; /**\n     * Teardown an instance, unobserves the data, unbind all the\n     * directives, turn off all the event listeners, etc.\n     *\n     * @param {Boolean} remove - whether to remove the DOM node.\n     * @param {Boolean} deferCleanup - if true, defer cleanup to\n     *                                 be called later\n     */Vue.prototype._destroy=function(remove,deferCleanup){if(this._isBeingDestroyed){if(!deferCleanup){this._cleanup();}return;}var destroyReady;var pendingRemoval;var self=this; // Cleanup should be called either synchronously or asynchronoysly as\n// callback of this.$remove(), or if remove and deferCleanup are false.\n// In any case it should be called after all other removing, unbinding and\n// turning of is done\nvar cleanupIfPossible=function cleanupIfPossible(){if(destroyReady&&!pendingRemoval&&!deferCleanup){self._cleanup();}}; // remove DOM element\nif(remove&&this.$el){pendingRemoval=true;this.$remove(function(){pendingRemoval=false;cleanupIfPossible();});}this._callHook('beforeDestroy');this._isBeingDestroyed=true;var i; // remove self from parent. only necessary\n// if parent is not being destroyed as well.\nvar parent=this.$parent;if(parent&&!parent._isBeingDestroyed){parent.$children.$remove(this); // unregister ref (remove: true)\nthis._updateRef(true);} // destroy all children.\ni=this.$children.length;while(i--){this.$children[i].$destroy();} // teardown props\nif(this._propsUnlinkFn){this._propsUnlinkFn();} // teardown all directives. this also tearsdown all\n// directive-owned watchers.\nif(this._unlinkFn){this._unlinkFn();}i=this._watchers.length;while(i--){this._watchers[i].teardown();} // remove reference to self on $el\nif(this.$el){this.$el.__vue__=null;}destroyReady=true;cleanupIfPossible();}; /**\n     * Clean up to ensure garbage collection.\n     * This is called after the leave transition if there\n     * is any.\n     */Vue.prototype._cleanup=function(){if(this._isDestroyed){return;} // remove self from owner fragment\n// do it in cleanup so that we can call $destroy with\n// defer right when a fragment is about to be removed.\nif(this._frag){this._frag.children.$remove(this);} // remove reference from data ob\n// frozen object may not have observer.\nif(this._data.__ob__){this._data.__ob__.removeVm(this);} // Clean up references to private properties and other\n// instances. preserve reference to _data so that proxy\n// accessors still work. The only potential side effect\n// here is that mutating the instance after it's destroyed\n// may affect the state of other components that are still\n// observing the same object, but that seems to be a\n// reasonable responsibility for the user rather than\n// always throwing an error on them.\nthis.$el=this.$parent=this.$root=this.$children=this._watchers=this._context=this._scope=this._directives=null; // call the last hook...\nthis._isDestroyed=true;this._callHook('destroyed'); // turn off all instance listeners.\nthis.$off();};}function miscMixin(Vue){ /**\n     * Apply a list of filter (descriptors) to a value.\n     * Using plain for loops here because this will be called in\n     * the getter of any watcher with filters so it is very\n     * performance sensitive.\n     *\n     * @param {*} value\n     * @param {*} [oldValue]\n     * @param {Array} filters\n     * @param {Boolean} write\n     * @return {*}\n     */Vue.prototype._applyFilters=function(value,oldValue,filters,write){var filter,fn,args,arg,offset,i,l,j,k;for(i=0,l=filters.length;i<l;i++){filter=filters[i];fn=resolveAsset(this.$options,'filters',filter.name);if('development'!=='production'){assertAsset(fn,'filter',filter.name);}if(!fn)continue;fn=write?fn.write:fn.read||fn;if(typeof fn!=='function')continue;args=write?[value,oldValue]:[value];offset=write?2:1;if(filter.args){for(j=0,k=filter.args.length;j<k;j++){arg=filter.args[j];args[j+offset]=arg.dynamic?this.$get(arg.value):arg.value;}}value=fn.apply(this,args);}return value;}; /**\n     * Resolve a component, depending on whether the component\n     * is defined normally or using an async factory function.\n     * Resolves synchronously if already resolved, otherwise\n     * resolves asynchronously and caches the resolved\n     * constructor on the factory.\n     *\n     * @param {String} id\n     * @param {Function} cb\n     */Vue.prototype._resolveComponent=function(id,cb){var factory=resolveAsset(this.$options,'components',id);if('development'!=='production'){assertAsset(factory,'component',id);}if(!factory){return;} // async component factory\nif(!factory.options){if(factory.resolved){ // cached\ncb(factory.resolved);}else if(factory.requested){ // pool callbacks\nfactory.pendingCallbacks.push(cb);}else {factory.requested=true;var cbs=factory.pendingCallbacks=[cb];factory.call(this,function resolve(res){if(isPlainObject(res)){res=Vue.extend(res);} // cache resolved\nfactory.resolved=res; // invoke callbacks\nfor(var i=0,l=cbs.length;i<l;i++){cbs[i](res);}},function reject(reason){'development'!=='production'&&warn('Failed to resolve async component: '+id+'. '+(reason?'\\nReason: '+reason:''));});}}else { // normal component\ncb(factory);}};}var filterRE$1=/[^|]\\|[^|]/;function dataAPI(Vue){ /**\n     * Get the value from an expression on this vm.\n     *\n     * @param {String} exp\n     * @param {Boolean} [asStatement]\n     * @return {*}\n     */Vue.prototype.$get=function(exp,asStatement){var res=parseExpression(exp);if(res){if(asStatement&&!isSimplePath(exp)){var self=this;return function statementHandler(){self.$arguments=toArray(arguments);var result=res.get.call(self,self);self.$arguments=null;return result;};}else {try{return res.get.call(this,this);}catch(e){}}}}; /**\n     * Set the value from an expression on this vm.\n     * The expression must be a valid left-hand\n     * expression in an assignment.\n     *\n     * @param {String} exp\n     * @param {*} val\n     */Vue.prototype.$set=function(exp,val){var res=parseExpression(exp,true);if(res&&res.set){res.set.call(this,this,val);}}; /**\n     * Delete a property on the VM\n     *\n     * @param {String} key\n     */Vue.prototype.$delete=function(key){del(this._data,key);}; /**\n     * Watch an expression, trigger callback when its\n     * value changes.\n     *\n     * @param {String|Function} expOrFn\n     * @param {Function} cb\n     * @param {Object} [options]\n     *                 - {Boolean} deep\n     *                 - {Boolean} immediate\n     * @return {Function} - unwatchFn\n     */Vue.prototype.$watch=function(expOrFn,cb,options){var vm=this;var parsed;if(typeof expOrFn==='string'){parsed=parseDirective(expOrFn);expOrFn=parsed.expression;}var watcher=new Watcher(vm,expOrFn,cb,{deep:options&&options.deep,sync:options&&options.sync,filters:parsed&&parsed.filters,user:!options||options.user!==false});if(options&&options.immediate){cb.call(vm,watcher.value);}return function unwatchFn(){watcher.teardown();};}; /**\n     * Evaluate a text directive, including filters.\n     *\n     * @param {String} text\n     * @param {Boolean} [asStatement]\n     * @return {String}\n     */Vue.prototype.$eval=function(text,asStatement){ // check for filters.\nif(filterRE$1.test(text)){var dir=parseDirective(text); // the filter regex check might give false positive\n// for pipes inside strings, so it's possible that\n// we don't get any filters here\nvar val=this.$get(dir.expression,asStatement);return dir.filters?this._applyFilters(val,null,dir.filters):val;}else { // no filter\nreturn this.$get(text,asStatement);}}; /**\n     * Interpolate a piece of template text.\n     *\n     * @param {String} text\n     * @return {String}\n     */Vue.prototype.$interpolate=function(text){var tokens=parseText(text);var vm=this;if(tokens){if(tokens.length===1){return vm.$eval(tokens[0].value)+'';}else {return tokens.map(function(token){return token.tag?vm.$eval(token.value):token.value;}).join('');}}else {return text;}}; /**\n     * Log instance data as a plain JS object\n     * so that it is easier to inspect in console.\n     * This method assumes console is available.\n     *\n     * @param {String} [path]\n     */Vue.prototype.$log=function(path){var data=path?getPath(this._data,path):this._data;if(data){data=clean(data);} // include computed fields\nif(!path){for(var key in this.$options.computed){data[key]=clean(this[key]);}}console.log(data);}; /**\n     * \"clean\" a getter/setter converted object into a plain\n     * object copy.\n     *\n     * @param {Object} - obj\n     * @return {Object}\n     */function clean(obj){return JSON.parse(JSON.stringify(obj));}}function domAPI(Vue){ /**\n     * Convenience on-instance nextTick. The callback is\n     * auto-bound to the instance, and this avoids component\n     * modules having to rely on the global Vue.\n     *\n     * @param {Function} fn\n     */Vue.prototype.$nextTick=function(fn){nextTick(fn,this);}; /**\n     * Append instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */Vue.prototype.$appendTo=function(target,cb,withTransition){return insert(this,target,cb,withTransition,append,appendWithTransition);}; /**\n     * Prepend instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */Vue.prototype.$prependTo=function(target,cb,withTransition){target=query(target);if(target.hasChildNodes()){this.$before(target.firstChild,cb,withTransition);}else {this.$appendTo(target,cb,withTransition);}return this;}; /**\n     * Insert instance before target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */Vue.prototype.$before=function(target,cb,withTransition){return insert(this,target,cb,withTransition,beforeWithCb,beforeWithTransition);}; /**\n     * Insert instance after target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */Vue.prototype.$after=function(target,cb,withTransition){target=query(target);if(target.nextSibling){this.$before(target.nextSibling,cb,withTransition);}else {this.$appendTo(target.parentNode,cb,withTransition);}return this;}; /**\n     * Remove instance from DOM\n     *\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */Vue.prototype.$remove=function(cb,withTransition){if(!this.$el.parentNode){return cb&&cb();}var inDocument=this._isAttached&&inDoc(this.$el); // if we are not in document, no need to check\n// for transitions\nif(!inDocument)withTransition=false;var self=this;var realCb=function realCb(){if(inDocument)self._callHook('detached');if(cb)cb();};if(this._isFragment){removeNodeRange(this._fragmentStart,this._fragmentEnd,this,this._fragment,realCb);}else {var op=withTransition===false?removeWithCb:removeWithTransition;op(this.$el,this,realCb);}return this;}; /**\n     * Shared DOM insertion function.\n     *\n     * @param {Vue} vm\n     * @param {Element} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition]\n     * @param {Function} op1 - op for non-transition insert\n     * @param {Function} op2 - op for transition insert\n     * @return vm\n     */function insert(vm,target,cb,withTransition,op1,op2){target=query(target);var targetIsDetached=!inDoc(target);var op=withTransition===false||targetIsDetached?op1:op2;var shouldCallHook=!targetIsDetached&&!vm._isAttached&&!inDoc(vm.$el);if(vm._isFragment){mapNodeRange(vm._fragmentStart,vm._fragmentEnd,function(node){op(node,target,vm);});cb&&cb();}else {op(vm.$el,target,vm,cb);}if(shouldCallHook){vm._callHook('attached');}return vm;} /**\n     * Check for selectors\n     *\n     * @param {String|Element} el\n     */function query(el){return typeof el==='string'?document.querySelector(el):el;} /**\n     * Append operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */function append(el,target,vm,cb){target.appendChild(el);if(cb)cb();} /**\n     * InsertBefore operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */function beforeWithCb(el,target,vm,cb){before(el,target);if(cb)cb();} /**\n     * Remove operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */function removeWithCb(el,vm,cb){remove(el);if(cb)cb();}}function eventsAPI(Vue){ /**\n     * Listen on the given `event` with `fn`.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */Vue.prototype.$on=function(event,fn){(this._events[event]||(this._events[event]=[])).push(fn);modifyListenerCount(this,event,1);return this;}; /**\n     * Adds an `event` listener that will be invoked a single\n     * time then automatically removed.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */Vue.prototype.$once=function(event,fn){var self=this;function on(){self.$off(event,on);fn.apply(this,arguments);}on.fn=fn;this.$on(event,on);return this;}; /**\n     * Remove the given callback for `event` or all\n     * registered callbacks.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */Vue.prototype.$off=function(event,fn){var cbs; // all\nif(!arguments.length){if(this.$parent){for(event in this._events){cbs=this._events[event];if(cbs){modifyListenerCount(this,event,-cbs.length);}}}this._events={};return this;} // specific event\ncbs=this._events[event];if(!cbs){return this;}if(arguments.length===1){modifyListenerCount(this,event,-cbs.length);this._events[event]=null;return this;} // specific handler\nvar cb;var i=cbs.length;while(i--){cb=cbs[i];if(cb===fn||cb.fn===fn){modifyListenerCount(this,event,-1);cbs.splice(i,1);break;}}return this;}; /**\n     * Trigger an event on self.\n     *\n     * @param {String|Object} event\n     * @return {Boolean} shouldPropagate\n     */Vue.prototype.$emit=function(event){var isSource=typeof event==='string';event=isSource?event:event.name;var cbs=this._events[event];var shouldPropagate=isSource||!cbs;if(cbs){cbs=cbs.length>1?toArray(cbs):cbs; // this is a somewhat hacky solution to the question raised\n// in #2102: for an inline component listener like <comp @test=\"doThis\">,\n// the propagation handling is somewhat broken. Therefore we\n// need to treat these inline callbacks differently.\nvar hasParentCbs=isSource&&cbs.some(function(cb){return cb._fromParent;});if(hasParentCbs){shouldPropagate=false;}var args=toArray(arguments,1);for(var i=0,l=cbs.length;i<l;i++){var cb=cbs[i];var res=cb.apply(this,args);if(res===true&&(!hasParentCbs||cb._fromParent)){shouldPropagate=true;}}}return shouldPropagate;}; /**\n     * Recursively broadcast an event to all children instances.\n     *\n     * @param {String|Object} event\n     * @param {...*} additional arguments\n     */Vue.prototype.$broadcast=function(event){var isSource=typeof event==='string';event=isSource?event:event.name; // if no child has registered for this event,\n// then there's no need to broadcast.\nif(!this._eventsCount[event])return;var children=this.$children;var args=toArray(arguments);if(isSource){ // use object event to indicate non-source emit\n// on children\nargs[0]={name:event,source:this};}for(var i=0,l=children.length;i<l;i++){var child=children[i];var shouldPropagate=child.$emit.apply(child,args);if(shouldPropagate){child.$broadcast.apply(child,args);}}return this;}; /**\n     * Recursively propagate an event up the parent chain.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */Vue.prototype.$dispatch=function(event){var shouldPropagate=this.$emit.apply(this,arguments);if(!shouldPropagate)return;var parent=this.$parent;var args=toArray(arguments); // use object event to indicate non-source emit\n// on parents\nargs[0]={name:event,source:this};while(parent){shouldPropagate=parent.$emit.apply(parent,args);parent=shouldPropagate?parent.$parent:null;}return this;}; /**\n     * Modify the listener counts on all parents.\n     * This bookkeeping allows $broadcast to return early when\n     * no child has listened to a certain event.\n     *\n     * @param {Vue} vm\n     * @param {String} event\n     * @param {Number} count\n     */var hookRE=/^hook:/;function modifyListenerCount(vm,event,count){var parent=vm.$parent; // hooks do not get broadcasted so no need\n// to do bookkeeping for them\nif(!parent||!count||hookRE.test(event))return;while(parent){parent._eventsCount[event]=(parent._eventsCount[event]||0)+count;parent=parent.$parent;}}}function lifecycleAPI(Vue){ /**\n     * Set instance target element and kick off the compilation\n     * process. The passed in `el` can be a selector string, an\n     * existing Element, or a DocumentFragment (for block\n     * instances).\n     *\n     * @param {Element|DocumentFragment|string} el\n     * @public\n     */Vue.prototype.$mount=function(el){if(this._isCompiled){'development'!=='production'&&warn('$mount() should be called only once.');return;}el=query(el);if(!el){el=document.createElement('div');}this._compile(el);this._initDOMHooks();if(inDoc(this.$el)){this._callHook('attached');ready.call(this);}else {this.$once('hook:attached',ready);}return this;}; /**\n     * Mark an instance as ready.\n     */function ready(){this._isAttached=true;this._isReady=true;this._callHook('ready');} /**\n     * Teardown the instance, simply delegate to the internal\n     * _destroy.\n     */Vue.prototype.$destroy=function(remove,deferCleanup){this._destroy(remove,deferCleanup);}; /**\n     * Partially compile a piece of DOM and return a\n     * decompile function.\n     *\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host]\n     * @return {Function}\n     */Vue.prototype.$compile=function(el,host,scope,frag){return compile(el,this.$options,true)(this,el,host,scope,frag);};} /**\n   * The exposed Vue constructor.\n   *\n   * API conventions:\n   * - public API methods/properties are prefixed with `$`\n   * - internal methods/properties are prefixed with `_`\n   * - non-prefixed properties are assumed to be proxied user\n   *   data.\n   *\n   * @constructor\n   * @param {Object} [options]\n   * @public\n   */function Vue(options){this._init(options);} // install internals\ninitMixin(Vue);stateMixin(Vue);eventsMixin(Vue);lifecycleMixin(Vue);miscMixin(Vue); // install instance APIs\ndataAPI(Vue);domAPI(Vue);eventsAPI(Vue);lifecycleAPI(Vue);var slot={priority:SLOT,params:['name'],bind:function bind(){ // this was resolved during component transclusion\nvar name=this.params.name||'default';var content=this.vm._slotContents&&this.vm._slotContents[name];if(!content||!content.hasChildNodes()){this.fallback();}else {this.compile(content.cloneNode(true),this.vm._context,this.vm);}},compile:function compile(content,context,host){if(content&&context){if(this.el.hasChildNodes()&&content.childNodes.length===1&&content.childNodes[0].nodeType===1&&content.childNodes[0].hasAttribute('v-if')){ // if the inserted slot has v-if\n// inject fallback content as the v-else\nvar elseBlock=document.createElement('template');elseBlock.setAttribute('v-else','');elseBlock.innerHTML=this.el.innerHTML; // the else block should be compiled in child scope\nelseBlock._context=this.vm;content.appendChild(elseBlock);}var scope=host?host._scope:this._scope;this.unlink=context.$compile(content,host,scope,this._frag);}if(content){replace(this.el,content);}else {remove(this.el);}},fallback:function fallback(){this.compile(extractContent(this.el,true),this.vm);},unbind:function unbind(){if(this.unlink){this.unlink();}}};var partial={priority:PARTIAL,params:['name'], // watch changes to name for dynamic partials\nparamWatchers:{name:function name(value){vIf.remove.call(this);if(value){this.insert(value);}}},bind:function bind(){this.anchor=createAnchor('v-partial');replace(this.el,this.anchor);this.insert(this.params.name);},insert:function insert(id){var partial=resolveAsset(this.vm.$options,'partials',id);if('development'!=='production'){assertAsset(partial,'partial',id);}if(partial){this.factory=new FragmentFactory(this.vm,partial);vIf.insert.call(this);}},unbind:function unbind(){if(this.frag){this.frag.destroy();}}};var elementDirectives={slot:slot,partial:partial};var convertArray=vFor._postProcess; /**\n   * Limit filter for arrays\n   *\n   * @param {Number} n\n   * @param {Number} offset (Decimal expected)\n   */function limitBy(arr,n,offset){offset=offset?parseInt(offset,10):0;n=toNumber(n);return typeof n==='number'?arr.slice(offset,offset+n):arr;} /**\n   * Filter filter for arrays\n   *\n   * @param {String} search\n   * @param {String} [delimiter]\n   * @param {String} ...dataKeys\n   */function filterBy(arr,search,delimiter){arr=convertArray(arr);if(search==null){return arr;}if(typeof search==='function'){return arr.filter(search);} // cast to lowercase string\nsearch=(''+search).toLowerCase(); // allow optional `in` delimiter\n// because why not\nvar n=delimiter==='in'?3:2; // extract and flatten keys\nvar keys=toArray(arguments,n).reduce(function(prev,cur){return prev.concat(cur);},[]);var res=[];var item,key,val,j;for(var i=0,l=arr.length;i<l;i++){item=arr[i];val=item&&item.$value||item;j=keys.length;if(j){while(j--){key=keys[j];if(key==='$key'&&contains$1(item.$key,search)||contains$1(getPath(val,key),search)){res.push(item);break;}}}else if(contains$1(item,search)){res.push(item);}}return res;} /**\n   * Filter filter for arrays\n   *\n   * @param {String} sortKey\n   * @param {String} reverse\n   */function orderBy(arr,sortKey,reverse){arr=convertArray(arr);if(!sortKey){return arr;}var order=reverse&&reverse<0?-1:1; // sort on a copy to avoid mutating original array\nreturn arr.slice().sort(function(a,b){if(sortKey!=='$key'){if(isObject(a)&&'$value' in a)a=a.$value;if(isObject(b)&&'$value' in b)b=b.$value;}a=isObject(a)?getPath(a,sortKey):a;b=isObject(b)?getPath(b,sortKey):b;return a===b?0:a>b?order:-order;});} /**\n   * String contain helper\n   *\n   * @param {*} val\n   * @param {String} search\n   */function contains$1(val,search){var i;if(isPlainObject(val)){var keys=Object.keys(val);i=keys.length;while(i--){if(contains$1(val[keys[i]],search)){return true;}}}else if(isArray(val)){i=val.length;while(i--){if(contains$1(val[i],search)){return true;}}}else if(val!=null){return val.toString().toLowerCase().indexOf(search)>-1;}}var digitsRE=/(\\d{3})(?=\\d)/g; // asset collections must be a plain object.\nvar filters={orderBy:orderBy,filterBy:filterBy,limitBy:limitBy, /**\n     * Stringify value.\n     *\n     * @param {Number} indent\n     */json:{read:function read(value,indent){return typeof value==='string'?value:JSON.stringify(value,null,Number(indent)||2);},write:function write(value){try{return JSON.parse(value);}catch(e){return value;}}}, /**\n     * 'abc' => 'Abc'\n     */capitalize:function capitalize(value){if(!value&&value!==0)return '';value=value.toString();return value.charAt(0).toUpperCase()+value.slice(1);}, /**\n     * 'abc' => 'ABC'\n     */uppercase:function uppercase(value){return value||value===0?value.toString().toUpperCase():'';}, /**\n     * 'AbC' => 'abc'\n     */lowercase:function lowercase(value){return value||value===0?value.toString().toLowerCase():'';}, /**\n     * 12345 => $12,345.00\n     *\n     * @param {String} sign\n     */currency:function currency(value,_currency){value=parseFloat(value);if(!isFinite(value)||!value&&value!==0)return '';_currency=_currency!=null?_currency:'$';var stringified=Math.abs(value).toFixed(2);var _int=stringified.slice(0,-3);var i=_int.length%3;var head=i>0?_int.slice(0,i)+(_int.length>3?',':''):'';var _float=stringified.slice(-3);var sign=value<0?'-':'';return sign+_currency+head+_int.slice(i).replace(digitsRE,'$1,')+_float;}, /**\n     * 'item' => 'items'\n     *\n     * @params\n     *  an array of strings corresponding to\n     *  the single, double, triple ... forms of the word to\n     *  be pluralized. When the number to be pluralized\n     *  exceeds the length of the args, it will use the last\n     *  entry in the array.\n     *\n     *  e.g. ['single', 'double', 'triple', 'multiple']\n     */pluralize:function pluralize(value){var args=toArray(arguments,1);return args.length>1?args[value%10-1]||args[args.length-1]:args[0]+(value===1?'':'s');}, /**\n     * Debounce a handler function.\n     *\n     * @param {Function} handler\n     * @param {Number} delay = 300\n     * @return {Function}\n     */debounce:function debounce(handler,delay){if(!handler)return;if(!delay){delay=300;}return _debounce(handler,delay);}};function installGlobalAPI(Vue){ /**\n     * Vue and every constructor that extends Vue has an\n     * associated options object, which can be accessed during\n     * compilation steps as `this.constructor.options`.\n     *\n     * These can be seen as the default options of every\n     * Vue instance.\n     */Vue.options={directives:directives,elementDirectives:elementDirectives,filters:filters,transitions:{},components:{},partials:{},replace:true}; /**\n     * Expose useful internals\n     */Vue.util=util;Vue.config=config;Vue.set=set;Vue['delete']=del;Vue.nextTick=nextTick; /**\n     * The following are exposed for advanced usage / plugins\n     */Vue.compiler=compiler;Vue.FragmentFactory=FragmentFactory;Vue.internalDirectives=internalDirectives;Vue.parsers={path:path,text:text,template:template,directive:directive,expression:expression}; /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */Vue.cid=0;var cid=1; /**\n     * Class inheritance\n     *\n     * @param {Object} extendOptions\n     */Vue.extend=function(extendOptions){extendOptions=extendOptions||{};var Super=this;var isFirstExtend=Super.cid===0;if(isFirstExtend&&extendOptions._Ctor){return extendOptions._Ctor;}var name=extendOptions.name||Super.options.name;if('development'!=='production'){if(!/^[a-zA-Z][\\w-]*$/.test(name)){warn('Invalid component name: \"'+name+'\". Component names '+'can only contain alphanumeric characaters and the hyphen.');name=null;}}var Sub=createClass(name||'VueComponent');Sub.prototype=Object.create(Super.prototype);Sub.prototype.constructor=Sub;Sub.cid=cid++;Sub.options=mergeOptions(Super.options,extendOptions);Sub['super']=Super; // allow further extension\nSub.extend=Super.extend; // create asset registers, so extended classes\n// can have their private assets too.\nconfig._assetTypes.forEach(function(type){Sub[type]=Super[type];}); // enable recursive self-lookup\nif(name){Sub.options.components[name]=Sub;} // cache constructor\nif(isFirstExtend){extendOptions._Ctor=Sub;}return Sub;}; /**\n     * A function that returns a sub-class constructor with the\n     * given name. This gives us much nicer output when\n     * logging instances in the console.\n     *\n     * @param {String} name\n     * @return {Function}\n     */function createClass(name){ /* eslint-disable no-new-func */return new Function('return function '+classify(name)+' (options) { this._init(options) }')(); /* eslint-enable no-new-func */} /**\n     * Plugin system\n     *\n     * @param {Object} plugin\n     */Vue.use=function(plugin){ /* istanbul ignore if */if(plugin.installed){return;} // additional parameters\nvar args=toArray(arguments,1);args.unshift(this);if(typeof plugin.install==='function'){plugin.install.apply(plugin,args);}else {plugin.apply(null,args);}plugin.installed=true;return this;}; /**\n     * Apply a global mixin by merging it into the default\n     * options.\n     */Vue.mixin=function(mixin){Vue.options=mergeOptions(Vue.options,mixin);}; /**\n     * Create asset registration methods with the following\n     * signature:\n     *\n     * @param {String} id\n     * @param {*} definition\n     */config._assetTypes.forEach(function(type){Vue[type]=function(id,definition){if(!definition){return this.options[type+'s'][id];}else { /* istanbul ignore if */if('development'!=='production'){if(type==='component'&&(commonTagRE.test(id)||reservedTagRE.test(id))){warn('Do not use built-in or reserved HTML elements as component '+'id: '+id);}}if(type==='component'&&isPlainObject(definition)){definition.name=id;definition=Vue.extend(definition);}this.options[type+'s'][id]=definition;return definition;}};}); // expose internal transition API\nextend(Vue.transition,transition);}installGlobalAPI(Vue);Vue.version='1.0.17'; // devtools global hook\n/* istanbul ignore next */if(devtools){devtools.emit('init',Vue);}else if('development'!=='production'&&inBrowser&&/Chrome\\/\\d+/.test(window.navigator.userAgent)){console.log('Download the Vue Devtools for a better development experience:\\n'+'https://github.com/vuejs/vue-devtools');}return Vue;});\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[2,1,4,3]);\n"],"file":"bundle.js","sourceRoot":"/source/"}