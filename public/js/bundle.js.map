{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*!\n * Bootstrap v3.3.6 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\nif (\"undefined\" == typeof jQuery) throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function (a) {\n  \"use strict\";\n  var b = a.fn.jquery.split(\" \")[0].split(\".\");if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] > 2) throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\");\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b() {\n    var a = document.createElement(\"bootstrap\"),\n        b = { WebkitTransition: \"webkitTransitionEnd\", MozTransition: \"transitionend\", OTransition: \"oTransitionEnd otransitionend\", transition: \"transitionend\" };for (var c in b) {\n      if (void 0 !== a.style[c]) return { end: b[c] };\n    }return !1;\n  }a.fn.emulateTransitionEnd = function (b) {\n    var c = !1,\n        d = this;a(this).one(\"bsTransitionEnd\", function () {\n      c = !0;\n    });var e = function e() {\n      c || a(d).trigger(a.support.transition.end);\n    };return setTimeout(e, b), this;\n  }, a(function () {\n    a.support.transition = b(), a.support.transition && (a.event.special.bsTransitionEnd = { bindType: a.support.transition.end, delegateType: a.support.transition.end, handle: function handle(b) {\n        return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0;\n      } });\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var c = a(this),\n          e = c.data(\"bs.alert\");e || c.data(\"bs.alert\", e = new d(this)), \"string\" == typeof b && e[b].call(c);\n    });\n  }var c = '[data-dismiss=\"alert\"]',\n      d = function d(b) {\n    a(b).on(\"click\", c, this.close);\n  };d.VERSION = \"3.3.6\", d.TRANSITION_DURATION = 150, d.prototype.close = function (b) {\n    function c() {\n      g.detach().trigger(\"closed.bs.alert\").remove();\n    }var e = a(this),\n        f = e.attr(\"data-target\");f || (f = e.attr(\"href\"), f = f && f.replace(/.*(?=#[^\\s]*$)/, \"\"));var g = a(f);b && b.preventDefault(), g.length || (g = e.closest(\".alert\")), g.trigger(b = a.Event(\"close.bs.alert\")), b.isDefaultPrevented() || (g.removeClass(\"in\"), a.support.transition && g.hasClass(\"fade\") ? g.one(\"bsTransitionEnd\", c).emulateTransitionEnd(d.TRANSITION_DURATION) : c());\n  };var e = a.fn.alert;a.fn.alert = b, a.fn.alert.Constructor = d, a.fn.alert.noConflict = function () {\n    return a.fn.alert = e, this;\n  }, a(document).on(\"click.bs.alert.data-api\", c, d.prototype.close);\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.button\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;e || d.data(\"bs.button\", e = new c(this, f)), \"toggle\" == b ? e.toggle() : b && e.setState(b);\n    });\n  }var c = function c(b, d) {\n    this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.isLoading = !1;\n  };c.VERSION = \"3.3.6\", c.DEFAULTS = { loadingText: \"loading...\" }, c.prototype.setState = function (b) {\n    var c = \"disabled\",\n        d = this.$element,\n        e = d.is(\"input\") ? \"val\" : \"html\",\n        f = d.data();b += \"Text\", null == f.resetText && d.data(\"resetText\", d[e]()), setTimeout(a.proxy(function () {\n      d[e](null == f[b] ? this.options[b] : f[b]), \"loadingText\" == b ? (this.isLoading = !0, d.addClass(c).attr(c, c)) : this.isLoading && (this.isLoading = !1, d.removeClass(c).removeAttr(c));\n    }, this), 0);\n  }, c.prototype.toggle = function () {\n    var a = !0,\n        b = this.$element.closest('[data-toggle=\"buttons\"]');if (b.length) {\n      var c = this.$element.find(\"input\");\"radio\" == c.prop(\"type\") ? (c.prop(\"checked\") && (a = !1), b.find(\".active\").removeClass(\"active\"), this.$element.addClass(\"active\")) : \"checkbox\" == c.prop(\"type\") && (c.prop(\"checked\") !== this.$element.hasClass(\"active\") && (a = !1), this.$element.toggleClass(\"active\")), c.prop(\"checked\", this.$element.hasClass(\"active\")), a && c.trigger(\"change\");\n    } else this.$element.attr(\"aria-pressed\", !this.$element.hasClass(\"active\")), this.$element.toggleClass(\"active\");\n  };var d = a.fn.button;a.fn.button = b, a.fn.button.Constructor = c, a.fn.button.noConflict = function () {\n    return a.fn.button = d, this;\n  }, a(document).on(\"click.bs.button.data-api\", '[data-toggle^=\"button\"]', function (c) {\n    var d = a(c.target);d.hasClass(\"btn\") || (d = d.closest(\".btn\")), b.call(d, \"toggle\"), a(c.target).is('input[type=\"radio\"]') || a(c.target).is('input[type=\"checkbox\"]') || c.preventDefault();\n  }).on(\"focus.bs.button.data-api blur.bs.button.data-api\", '[data-toggle^=\"button\"]', function (b) {\n    a(b.target).closest(\".btn\").toggleClass(\"focus\", /^focus(in)?$/.test(b.type));\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.carousel\"),\n          f = a.extend({}, c.DEFAULTS, d.data(), \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b),\n          g = \"string\" == typeof b ? b : f.slide;e || d.data(\"bs.carousel\", e = new c(this, f)), \"number\" == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle();\n    });\n  }var c = function c(b, _c) {\n    this.$element = a(b), this.$indicators = this.$element.find(\".carousel-indicators\"), this.options = _c, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on(\"keydown.bs.carousel\", a.proxy(this.keydown, this)), \"hover\" == this.options.pause && !(\"ontouchstart\" in document.documentElement) && this.$element.on(\"mouseenter.bs.carousel\", a.proxy(this.pause, this)).on(\"mouseleave.bs.carousel\", a.proxy(this.cycle, this));\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 600, c.DEFAULTS = { interval: 5e3, pause: \"hover\", wrap: !0, keyboard: !0 }, c.prototype.keydown = function (a) {\n    if (!/input|textarea/i.test(a.target.tagName)) {\n      switch (a.which) {case 37:\n          this.prev();break;case 39:\n          this.next();break;default:\n          return;}a.preventDefault();\n    }\n  }, c.prototype.cycle = function (b) {\n    return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this;\n  }, c.prototype.getItemIndex = function (a) {\n    return this.$items = a.parent().children(\".item\"), this.$items.index(a || this.$active);\n  }, c.prototype.getItemForDirection = function (a, b) {\n    var c = this.getItemIndex(b),\n        d = \"prev\" == a && 0 === c || \"next\" == a && c == this.$items.length - 1;if (d && !this.options.wrap) return b;var e = \"prev\" == a ? -1 : 1,\n        f = (c + e) % this.$items.length;return this.$items.eq(f);\n  }, c.prototype.to = function (a) {\n    var b = this,\n        c = this.getItemIndex(this.$active = this.$element.find(\".item.active\"));return a > this.$items.length - 1 || 0 > a ? void 0 : this.sliding ? this.$element.one(\"slid.bs.carousel\", function () {\n      b.to(a);\n    }) : c == a ? this.pause().cycle() : this.slide(a > c ? \"next\" : \"prev\", this.$items.eq(a));\n  }, c.prototype.pause = function (b) {\n    return b || (this.paused = !0), this.$element.find(\".next, .prev\").length && a.support.transition && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this;\n  }, c.prototype.next = function () {\n    return this.sliding ? void 0 : this.slide(\"next\");\n  }, c.prototype.prev = function () {\n    return this.sliding ? void 0 : this.slide(\"prev\");\n  }, c.prototype.slide = function (b, d) {\n    var e = this.$element.find(\".item.active\"),\n        f = d || this.getItemForDirection(b, e),\n        g = this.interval,\n        h = \"next\" == b ? \"left\" : \"right\",\n        i = this;if (f.hasClass(\"active\")) return this.sliding = !1;var j = f[0],\n        k = a.Event(\"slide.bs.carousel\", { relatedTarget: j, direction: h });if (this.$element.trigger(k), !k.isDefaultPrevented()) {\n      if (this.sliding = !0, g && this.pause(), this.$indicators.length) {\n        this.$indicators.find(\".active\").removeClass(\"active\");var l = a(this.$indicators.children()[this.getItemIndex(f)]);l && l.addClass(\"active\");\n      }var m = a.Event(\"slid.bs.carousel\", { relatedTarget: j, direction: h });return a.support.transition && this.$element.hasClass(\"slide\") ? (f.addClass(b), f[0].offsetWidth, e.addClass(h), f.addClass(h), e.one(\"bsTransitionEnd\", function () {\n        f.removeClass([b, h].join(\" \")).addClass(\"active\"), e.removeClass([\"active\", h].join(\" \")), i.sliding = !1, setTimeout(function () {\n          i.$element.trigger(m);\n        }, 0);\n      }).emulateTransitionEnd(c.TRANSITION_DURATION)) : (e.removeClass(\"active\"), f.addClass(\"active\"), this.sliding = !1, this.$element.trigger(m)), g && this.cycle(), this;\n    }\n  };var d = a.fn.carousel;a.fn.carousel = b, a.fn.carousel.Constructor = c, a.fn.carousel.noConflict = function () {\n    return a.fn.carousel = d, this;\n  };var e = function e(c) {\n    var d,\n        e = a(this),\n        f = a(e.attr(\"data-target\") || (d = e.attr(\"href\")) && d.replace(/.*(?=#[^\\s]+$)/, \"\"));if (f.hasClass(\"carousel\")) {\n      var g = a.extend({}, f.data(), e.data()),\n          h = e.attr(\"data-slide-to\");h && (g.interval = !1), b.call(f, g), h && f.data(\"bs.carousel\").to(h), c.preventDefault();\n    }\n  };a(document).on(\"click.bs.carousel.data-api\", \"[data-slide]\", e).on(\"click.bs.carousel.data-api\", \"[data-slide-to]\", e), a(window).on(\"load\", function () {\n    a('[data-ride=\"carousel\"]').each(function () {\n      var c = a(this);b.call(c, c.data());\n    });\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    var c,\n        d = b.attr(\"data-target\") || (c = b.attr(\"href\")) && c.replace(/.*(?=#[^\\s]+$)/, \"\");return a(d);\n  }function c(b) {\n    return this.each(function () {\n      var c = a(this),\n          e = c.data(\"bs.collapse\"),\n          f = a.extend({}, d.DEFAULTS, c.data(), \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b);!e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || c.data(\"bs.collapse\", e = new d(this, f)), \"string\" == typeof b && e[b]();\n    });\n  }var d = function d(b, c) {\n    this.$element = a(b), this.options = a.extend({}, d.DEFAULTS, c), this.$trigger = a('[data-toggle=\"collapse\"][href=\"#' + b.id + '\"],[data-toggle=\"collapse\"][data-target=\"#' + b.id + '\"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle();\n  };d.VERSION = \"3.3.6\", d.TRANSITION_DURATION = 350, d.DEFAULTS = { toggle: !0 }, d.prototype.dimension = function () {\n    var a = this.$element.hasClass(\"width\");return a ? \"width\" : \"height\";\n  }, d.prototype.show = function () {\n    if (!this.transitioning && !this.$element.hasClass(\"in\")) {\n      var b,\n          e = this.$parent && this.$parent.children(\".panel\").children(\".in, .collapsing\");if (!(e && e.length && (b = e.data(\"bs.collapse\"), b && b.transitioning))) {\n        var f = a.Event(\"show.bs.collapse\");if (this.$element.trigger(f), !f.isDefaultPrevented()) {\n          e && e.length && (c.call(e, \"hide\"), b || e.data(\"bs.collapse\", null));var g = this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\", !0), this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\", !0), this.transitioning = 1;var h = function h() {\n            this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"), this.transitioning = 0, this.$element.trigger(\"shown.bs.collapse\");\n          };if (!a.support.transition) return h.call(this);var i = a.camelCase([\"scroll\", g].join(\"-\"));this.$element.one(\"bsTransitionEnd\", a.proxy(h, this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i]);\n        }\n      }\n    }\n  }, d.prototype.hide = function () {\n    if (!this.transitioning && this.$element.hasClass(\"in\")) {\n      var b = a.Event(\"hide.bs.collapse\");if (this.$element.trigger(b), !b.isDefaultPrevented()) {\n        var c = this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\", !1), this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\", !1), this.transitioning = 1;var e = function e() {\n          this.transitioning = 0, this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\");\n        };return a.support.transition ? void this.$element[c](0).one(\"bsTransitionEnd\", a.proxy(e, this)).emulateTransitionEnd(d.TRANSITION_DURATION) : e.call(this);\n      }\n    }\n  }, d.prototype.toggle = function () {\n    this[this.$element.hasClass(\"in\") ? \"hide\" : \"show\"]();\n  }, d.prototype.getParent = function () {\n    return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]').each(a.proxy(function (c, d) {\n      var e = a(d);this.addAriaAndCollapsedClass(b(e), e);\n    }, this)).end();\n  }, d.prototype.addAriaAndCollapsedClass = function (a, b) {\n    var c = a.hasClass(\"in\");a.attr(\"aria-expanded\", c), b.toggleClass(\"collapsed\", !c).attr(\"aria-expanded\", c);\n  };var e = a.fn.collapse;a.fn.collapse = c, a.fn.collapse.Constructor = d, a.fn.collapse.noConflict = function () {\n    return a.fn.collapse = e, this;\n  }, a(document).on(\"click.bs.collapse.data-api\", '[data-toggle=\"collapse\"]', function (d) {\n    var e = a(this);e.attr(\"data-target\") || d.preventDefault();var f = b(e),\n        g = f.data(\"bs.collapse\"),\n        h = g ? \"toggle\" : e.data();c.call(f, h);\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    var c = b.attr(\"data-target\");c || (c = b.attr(\"href\"), c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\\s]*$)/, \"\"));var d = c && a(c);return d && d.length ? d : b.parent();\n  }function c(c) {\n    c && 3 === c.which || (a(e).remove(), a(f).each(function () {\n      var d = a(this),\n          e = b(d),\n          f = { relatedTarget: this };e.hasClass(\"open\") && (c && \"click\" == c.type && /input|textarea/i.test(c.target.tagName) && a.contains(e[0], c.target) || (e.trigger(c = a.Event(\"hide.bs.dropdown\", f)), c.isDefaultPrevented() || (d.attr(\"aria-expanded\", \"false\"), e.removeClass(\"open\").trigger(a.Event(\"hidden.bs.dropdown\", f)))));\n    }));\n  }function d(b) {\n    return this.each(function () {\n      var c = a(this),\n          d = c.data(\"bs.dropdown\");d || c.data(\"bs.dropdown\", d = new g(this)), \"string\" == typeof b && d[b].call(c);\n    });\n  }var e = \".dropdown-backdrop\",\n      f = '[data-toggle=\"dropdown\"]',\n      g = function g(b) {\n    a(b).on(\"click.bs.dropdown\", this.toggle);\n  };g.VERSION = \"3.3.6\", g.prototype.toggle = function (d) {\n    var e = a(this);if (!e.is(\".disabled, :disabled\")) {\n      var f = b(e),\n          g = f.hasClass(\"open\");if (c(), !g) {\n        \"ontouchstart\" in document.documentElement && !f.closest(\".navbar-nav\").length && a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\", c);var h = { relatedTarget: this };if (f.trigger(d = a.Event(\"show.bs.dropdown\", h)), d.isDefaultPrevented()) return;e.trigger(\"focus\").attr(\"aria-expanded\", \"true\"), f.toggleClass(\"open\").trigger(a.Event(\"shown.bs.dropdown\", h));\n      }return !1;\n    }\n  }, g.prototype.keydown = function (c) {\n    if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName)) {\n      var d = a(this);if (c.preventDefault(), c.stopPropagation(), !d.is(\".disabled, :disabled\")) {\n        var e = b(d),\n            g = e.hasClass(\"open\");if (!g && 27 != c.which || g && 27 == c.which) return 27 == c.which && e.find(f).trigger(\"focus\"), d.trigger(\"click\");var h = \" li:not(.disabled):visible a\",\n            i = e.find(\".dropdown-menu\" + h);if (i.length) {\n          var j = i.index(c.target);38 == c.which && j > 0 && j--, 40 == c.which && j < i.length - 1 && j++, ~j || (j = 0), i.eq(j).trigger(\"focus\");\n        }\n      }\n    }\n  };var h = a.fn.dropdown;a.fn.dropdown = d, a.fn.dropdown.Constructor = g, a.fn.dropdown.noConflict = function () {\n    return a.fn.dropdown = h, this;\n  }, a(document).on(\"click.bs.dropdown.data-api\", c).on(\"click.bs.dropdown.data-api\", \".dropdown form\", function (a) {\n    a.stopPropagation();\n  }).on(\"click.bs.dropdown.data-api\", f, g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\", f, g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\", \".dropdown-menu\", g.prototype.keydown);\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b, d) {\n    return this.each(function () {\n      var e = a(this),\n          f = e.data(\"bs.modal\"),\n          g = a.extend({}, c.DEFAULTS, e.data(), \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b);f || e.data(\"bs.modal\", f = new c(this, g)), \"string\" == typeof b ? f[b](d) : g.show && f.show(d);\n    });\n  }var c = function c(b, _c2) {\n    this.options = _c2, this.$body = a(document.body), this.$element = a(b), this.$dialog = this.$element.find(\".modal-dialog\"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find(\".modal-content\").load(this.options.remote, a.proxy(function () {\n      this.$element.trigger(\"loaded.bs.modal\");\n    }, this));\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 300, c.BACKDROP_TRANSITION_DURATION = 150, c.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }, c.prototype.toggle = function (a) {\n    return this.isShown ? this.hide() : this.show(a);\n  }, c.prototype.show = function (b) {\n    var d = this,\n        e = a.Event(\"show.bs.modal\", { relatedTarget: b });this.$element.trigger(e), this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass(\"modal-open\"), this.escape(), this.resize(), this.$element.on(\"click.dismiss.bs.modal\", '[data-dismiss=\"modal\"]', a.proxy(this.hide, this)), this.$dialog.on(\"mousedown.dismiss.bs.modal\", function () {\n      d.$element.one(\"mouseup.dismiss.bs.modal\", function (b) {\n        a(b.target).is(d.$element) && (d.ignoreBackdropClick = !0);\n      });\n    }), this.backdrop(function () {\n      var e = a.support.transition && d.$element.hasClass(\"fade\");d.$element.parent().length || d.$element.appendTo(d.$body), d.$element.show().scrollTop(0), d.adjustDialog(), e && d.$element[0].offsetWidth, d.$element.addClass(\"in\"), d.enforceFocus();var f = a.Event(\"shown.bs.modal\", { relatedTarget: b });e ? d.$dialog.one(\"bsTransitionEnd\", function () {\n        d.$element.trigger(\"focus\").trigger(f);\n      }).emulateTransitionEnd(c.TRANSITION_DURATION) : d.$element.trigger(\"focus\").trigger(f);\n    }));\n  }, c.prototype.hide = function (b) {\n    b && b.preventDefault(), b = a.Event(\"hide.bs.modal\"), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), a(document).off(\"focusin.bs.modal\"), this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"), this.$dialog.off(\"mousedown.dismiss.bs.modal\"), a.support.transition && this.$element.hasClass(\"fade\") ? this.$element.one(\"bsTransitionEnd\", a.proxy(this.hideModal, this)).emulateTransitionEnd(c.TRANSITION_DURATION) : this.hideModal());\n  }, c.prototype.enforceFocus = function () {\n    a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\", a.proxy(function (a) {\n      this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger(\"focus\");\n    }, this));\n  }, c.prototype.escape = function () {\n    this.isShown && this.options.keyboard ? this.$element.on(\"keydown.dismiss.bs.modal\", a.proxy(function (a) {\n      27 == a.which && this.hide();\n    }, this)) : this.isShown || this.$element.off(\"keydown.dismiss.bs.modal\");\n  }, c.prototype.resize = function () {\n    this.isShown ? a(window).on(\"resize.bs.modal\", a.proxy(this.handleUpdate, this)) : a(window).off(\"resize.bs.modal\");\n  }, c.prototype.hideModal = function () {\n    var a = this;this.$element.hide(), this.backdrop(function () {\n      a.$body.removeClass(\"modal-open\"), a.resetAdjustments(), a.resetScrollbar(), a.$element.trigger(\"hidden.bs.modal\");\n    });\n  }, c.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove(), this.$backdrop = null;\n  }, c.prototype.backdrop = function (b) {\n    var d = this,\n        e = this.$element.hasClass(\"fade\") ? \"fade\" : \"\";if (this.isShown && this.options.backdrop) {\n      var f = a.support.transition && e;if (this.$backdrop = a(document.createElement(\"div\")).addClass(\"modal-backdrop \" + e).appendTo(this.$body), this.$element.on(\"click.dismiss.bs.modal\", a.proxy(function (a) {\n        return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (a.target === a.currentTarget && (\"static\" == this.options.backdrop ? this.$element[0].focus() : this.hide()));\n      }, this)), f && this.$backdrop[0].offsetWidth, this.$backdrop.addClass(\"in\"), !b) return;f ? this.$backdrop.one(\"bsTransitionEnd\", b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : b();\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass(\"in\");var g = function g() {\n        d.removeBackdrop(), b && b();\n      };a.support.transition && this.$element.hasClass(\"fade\") ? this.$backdrop.one(\"bsTransitionEnd\", g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : g();\n    } else b && b();\n  }, c.prototype.handleUpdate = function () {\n    this.adjustDialog();\n  }, c.prototype.adjustDialog = function () {\n    var a = this.$element[0].scrollHeight > document.documentElement.clientHeight;this.$element.css({ paddingLeft: !this.bodyIsOverflowing && a ? this.scrollbarWidth : \"\", paddingRight: this.bodyIsOverflowing && !a ? this.scrollbarWidth : \"\" });\n  }, c.prototype.resetAdjustments = function () {\n    this.$element.css({ paddingLeft: \"\", paddingRight: \"\" });\n  }, c.prototype.checkScrollbar = function () {\n    var a = window.innerWidth;if (!a) {\n      var b = document.documentElement.getBoundingClientRect();a = b.right - Math.abs(b.left);\n    }this.bodyIsOverflowing = document.body.clientWidth < a, this.scrollbarWidth = this.measureScrollbar();\n  }, c.prototype.setScrollbar = function () {\n    var a = parseInt(this.$body.css(\"padding-right\") || 0, 10);this.originalBodyPad = document.body.style.paddingRight || \"\", this.bodyIsOverflowing && this.$body.css(\"padding-right\", a + this.scrollbarWidth);\n  }, c.prototype.resetScrollbar = function () {\n    this.$body.css(\"padding-right\", this.originalBodyPad);\n  }, c.prototype.measureScrollbar = function () {\n    var a = document.createElement(\"div\");a.className = \"modal-scrollbar-measure\", this.$body.append(a);var b = a.offsetWidth - a.clientWidth;return this.$body[0].removeChild(a), b;\n  };var d = a.fn.modal;a.fn.modal = b, a.fn.modal.Constructor = c, a.fn.modal.noConflict = function () {\n    return a.fn.modal = d, this;\n  }, a(document).on(\"click.bs.modal.data-api\", '[data-toggle=\"modal\"]', function (c) {\n    var d = a(this),\n        e = d.attr(\"href\"),\n        f = a(d.attr(\"data-target\") || e && e.replace(/.*(?=#[^\\s]+$)/, \"\")),\n        g = f.data(\"bs.modal\") ? \"toggle\" : a.extend({ remote: !/#/.test(e) && e }, f.data(), d.data());d.is(\"a\") && c.preventDefault(), f.one(\"show.bs.modal\", function (a) {\n      a.isDefaultPrevented() || f.one(\"hidden.bs.modal\", function () {\n        d.is(\":visible\") && d.trigger(\"focus\");\n      });\n    }), b.call(f, g, this);\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.tooltip\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;(e || !/destroy|hide/.test(b)) && (e || d.data(\"bs.tooltip\", e = new c(this, f)), \"string\" == typeof b && e[b]());\n    });\n  }var c = function c(a, b) {\n    this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init(\"tooltip\", a, b);\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 150, c.DEFAULTS = { animation: !0, placement: \"top\", selector: !1, template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>', trigger: \"hover focus\", title: \"\", delay: 0, html: !1, container: !1, viewport: { selector: \"body\", padding: 0 } }, c.prototype.init = function (b, c, d) {\n    if (this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), this.$viewport = this.options.viewport && a(a.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: !1, hover: !1, focus: !1 }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error(\"`selector` option must be specified when initializing \" + this.type + \" on the window.document object!\");for (var e = this.options.trigger.split(\" \"), f = e.length; f--;) {\n      var g = e[f];if (\"click\" == g) this.$element.on(\"click.\" + this.type, this.options.selector, a.proxy(this.toggle, this));else if (\"manual\" != g) {\n        var h = \"hover\" == g ? \"mouseenter\" : \"focusin\",\n            i = \"hover\" == g ? \"mouseleave\" : \"focusout\";this.$element.on(h + \".\" + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + \".\" + this.type, this.options.selector, a.proxy(this.leave, this));\n      }\n    }this.options.selector ? this._options = a.extend({}, this.options, { trigger: \"manual\", selector: \"\" }) : this.fixTitle();\n  }, c.prototype.getDefaults = function () {\n    return c.DEFAULTS;\n  }, c.prototype.getOptions = function (b) {\n    return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && \"number\" == typeof b.delay && (b.delay = { show: b.delay, hide: b.delay }), b;\n  }, c.prototype.getDelegateOptions = function () {\n    var b = {},\n        c = this.getDefaults();return this._options && a.each(this._options, function (a, d) {\n      c[a] != d && (b[a] = d);\n    }), b;\n  }, c.prototype.enter = function (b) {\n    var c = b instanceof this.constructor ? b : a(b.currentTarget).data(\"bs.\" + this.type);return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data(\"bs.\" + this.type, c)), b instanceof a.Event && (c.inState[\"focusin\" == b.type ? \"focus\" : \"hover\"] = !0), c.tip().hasClass(\"in\") || \"in\" == c.hoverState ? void (c.hoverState = \"in\") : (clearTimeout(c.timeout), c.hoverState = \"in\", c.options.delay && c.options.delay.show ? void (c.timeout = setTimeout(function () {\n      \"in\" == c.hoverState && c.show();\n    }, c.options.delay.show)) : c.show());\n  }, c.prototype.isInStateTrue = function () {\n    for (var a in this.inState) {\n      if (this.inState[a]) return !0;\n    }return !1;\n  }, c.prototype.leave = function (b) {\n    var c = b instanceof this.constructor ? b : a(b.currentTarget).data(\"bs.\" + this.type);return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data(\"bs.\" + this.type, c)), b instanceof a.Event && (c.inState[\"focusout\" == b.type ? \"focus\" : \"hover\"] = !1), c.isInStateTrue() ? void 0 : (clearTimeout(c.timeout), c.hoverState = \"out\", c.options.delay && c.options.delay.hide ? void (c.timeout = setTimeout(function () {\n      \"out\" == c.hoverState && c.hide();\n    }, c.options.delay.hide)) : c.hide());\n  }, c.prototype.show = function () {\n    var b = a.Event(\"show.bs.\" + this.type);if (this.hasContent() && this.enabled) {\n      this.$element.trigger(b);var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);if (b.isDefaultPrevented() || !d) return;var e = this,\n          f = this.tip(),\n          g = this.getUID(this.type);this.setContent(), f.attr(\"id\", g), this.$element.attr(\"aria-describedby\", g), this.options.animation && f.addClass(\"fade\");var h = \"function\" == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement,\n          i = /\\s?auto?\\s?/i,\n          j = i.test(h);j && (h = h.replace(i, \"\") || \"top\"), f.detach().css({ top: 0, left: 0, display: \"block\" }).addClass(h).data(\"bs.\" + this.type, this), this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element), this.$element.trigger(\"inserted.bs.\" + this.type);var k = this.getPosition(),\n          l = f[0].offsetWidth,\n          m = f[0].offsetHeight;if (j) {\n        var n = h,\n            o = this.getPosition(this.$viewport);h = \"bottom\" == h && k.bottom + m > o.bottom ? \"top\" : \"top\" == h && k.top - m < o.top ? \"bottom\" : \"right\" == h && k.right + l > o.width ? \"left\" : \"left\" == h && k.left - l < o.left ? \"right\" : h, f.removeClass(n).addClass(h);\n      }var p = this.getCalculatedOffset(h, k, l, m);this.applyPlacement(p, h);var q = function q() {\n        var a = e.hoverState;e.$element.trigger(\"shown.bs.\" + e.type), e.hoverState = null, \"out\" == a && e.leave(e);\n      };a.support.transition && this.$tip.hasClass(\"fade\") ? f.one(\"bsTransitionEnd\", q).emulateTransitionEnd(c.TRANSITION_DURATION) : q();\n    }\n  }, c.prototype.applyPlacement = function (b, c) {\n    var d = this.tip(),\n        e = d[0].offsetWidth,\n        f = d[0].offsetHeight,\n        g = parseInt(d.css(\"margin-top\"), 10),\n        h = parseInt(d.css(\"margin-left\"), 10);isNaN(g) && (g = 0), isNaN(h) && (h = 0), b.top += g, b.left += h, a.offset.setOffset(d[0], a.extend({ using: function using(a) {\n        d.css({ top: Math.round(a.top), left: Math.round(a.left) });\n      } }, b), 0), d.addClass(\"in\");var i = d[0].offsetWidth,\n        j = d[0].offsetHeight;\"top\" == c && j != f && (b.top = b.top + f - j);var k = this.getViewportAdjustedDelta(c, b, i, j);k.left ? b.left += k.left : b.top += k.top;var l = /top|bottom/.test(c),\n        m = l ? 2 * k.left - e + i : 2 * k.top - f + j,\n        n = l ? \"offsetWidth\" : \"offsetHeight\";d.offset(b), this.replaceArrow(m, d[0][n], l);\n  }, c.prototype.replaceArrow = function (a, b, c) {\n    this.arrow().css(c ? \"left\" : \"top\", 50 * (1 - a / b) + \"%\").css(c ? \"top\" : \"left\", \"\");\n  }, c.prototype.setContent = function () {\n    var a = this.tip(),\n        b = this.getTitle();a.find(\".tooltip-inner\")[this.options.html ? \"html\" : \"text\"](b), a.removeClass(\"fade in top bottom left right\");\n  }, c.prototype.hide = function (b) {\n    function d() {\n      \"in\" != e.hoverState && f.detach(), e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\" + e.type), b && b();\n    }var e = this,\n        f = a(this.$tip),\n        g = a.Event(\"hide.bs.\" + this.type);return this.$element.trigger(g), g.isDefaultPrevented() ? void 0 : (f.removeClass(\"in\"), a.support.transition && f.hasClass(\"fade\") ? f.one(\"bsTransitionEnd\", d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), this.hoverState = null, this);\n  }, c.prototype.fixTitle = function () {\n    var a = this.$element;(a.attr(\"title\") || \"string\" != typeof a.attr(\"data-original-title\")) && a.attr(\"data-original-title\", a.attr(\"title\") || \"\").attr(\"title\", \"\");\n  }, c.prototype.hasContent = function () {\n    return this.getTitle();\n  }, c.prototype.getPosition = function (b) {\n    b = b || this.$element;var c = b[0],\n        d = \"BODY\" == c.tagName,\n        e = c.getBoundingClientRect();null == e.width && (e = a.extend({}, e, { width: e.right - e.left, height: e.bottom - e.top }));var f = d ? { top: 0, left: 0 } : b.offset(),\n        g = { scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop() },\n        h = d ? { width: a(window).width(), height: a(window).height() } : null;return a.extend({}, e, g, h, f);\n  }, c.prototype.getCalculatedOffset = function (a, b, c, d) {\n    return \"bottom\" == a ? { top: b.top + b.height, left: b.left + b.width / 2 - c / 2 } : \"top\" == a ? { top: b.top - d, left: b.left + b.width / 2 - c / 2 } : \"left\" == a ? { top: b.top + b.height / 2 - d / 2, left: b.left - c } : { top: b.top + b.height / 2 - d / 2, left: b.left + b.width };\n  }, c.prototype.getViewportAdjustedDelta = function (a, b, c, d) {\n    var e = { top: 0, left: 0 };if (!this.$viewport) return e;var f = this.options.viewport && this.options.viewport.padding || 0,\n        g = this.getPosition(this.$viewport);if (/right|left/.test(a)) {\n      var h = b.top - f - g.scroll,\n          i = b.top + f - g.scroll + d;h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i);\n    } else {\n      var j = b.left - f,\n          k = b.left + f + c;j < g.left ? e.left = g.left - j : k > g.right && (e.left = g.left + g.width - k);\n    }return e;\n  }, c.prototype.getTitle = function () {\n    var a,\n        b = this.$element,\n        c = this.options;return a = b.attr(\"data-original-title\") || (\"function\" == typeof c.title ? c.title.call(b[0]) : c.title);\n  }, c.prototype.getUID = function (a) {\n    do {\n      a += ~ ~(1e6 * Math.random());\n    } while (document.getElementById(a));return a;\n  }, c.prototype.tip = function () {\n    if (!this.$tip && (this.$tip = a(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + \" `template` option must consist of exactly 1 top-level element!\");return this.$tip;\n  }, c.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find(\".tooltip-arrow\");\n  }, c.prototype.enable = function () {\n    this.enabled = !0;\n  }, c.prototype.disable = function () {\n    this.enabled = !1;\n  }, c.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled;\n  }, c.prototype.toggle = function (b) {\n    var c = this;b && (c = a(b.currentTarget).data(\"bs.\" + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data(\"bs.\" + this.type, c))), b ? (c.inState.click = !c.inState.click, c.isInStateTrue() ? c.enter(c) : c.leave(c)) : c.tip().hasClass(\"in\") ? c.leave(c) : c.enter(c);\n  }, c.prototype.destroy = function () {\n    var a = this;clearTimeout(this.timeout), this.hide(function () {\n      a.$element.off(\".\" + a.type).removeData(\"bs.\" + a.type), a.$tip && a.$tip.detach(), a.$tip = null, a.$arrow = null, a.$viewport = null;\n    });\n  };var d = a.fn.tooltip;a.fn.tooltip = b, a.fn.tooltip.Constructor = c, a.fn.tooltip.noConflict = function () {\n    return a.fn.tooltip = d, this;\n  };\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.popover\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;(e || !/destroy|hide/.test(b)) && (e || d.data(\"bs.popover\", e = new c(this, f)), \"string\" == typeof b && e[b]());\n    });\n  }var c = function c(a, b) {\n    this.init(\"popover\", a, b);\n  };if (!a.fn.tooltip) throw new Error(\"Popover requires tooltip.js\");c.VERSION = \"3.3.6\", c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, { placement: \"right\", trigger: \"click\", content: \"\", template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>' }), c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), c.prototype.constructor = c, c.prototype.getDefaults = function () {\n    return c.DEFAULTS;\n  }, c.prototype.setContent = function () {\n    var a = this.tip(),\n        b = this.getTitle(),\n        c = this.getContent();a.find(\".popover-title\")[this.options.html ? \"html\" : \"text\"](b), a.find(\".popover-content\").children().detach().end()[this.options.html ? \"string\" == typeof c ? \"html\" : \"append\" : \"text\"](c), a.removeClass(\"fade top bottom left right in\"), a.find(\".popover-title\").html() || a.find(\".popover-title\").hide();\n  }, c.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent();\n  }, c.prototype.getContent = function () {\n    var a = this.$element,\n        b = this.options;return a.attr(\"data-content\") || (\"function\" == typeof b.content ? b.content.call(a[0]) : b.content);\n  }, c.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find(\".arrow\");\n  };var d = a.fn.popover;a.fn.popover = b, a.fn.popover.Constructor = c, a.fn.popover.noConflict = function () {\n    return a.fn.popover = d, this;\n  };\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(c, d) {\n    this.$body = a(document.body), this.$scrollElement = a(a(c).is(document.body) ? window : c), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || \"\") + \" .nav li > a\", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on(\"scroll.bs.scrollspy\", a.proxy(this.process, this)), this.refresh(), this.process();\n  }function c(c) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.scrollspy\"),\n          f = \"object\" == (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) && c;e || d.data(\"bs.scrollspy\", e = new b(this, f)), \"string\" == typeof c && e[c]();\n    });\n  }b.VERSION = \"3.3.6\", b.DEFAULTS = { offset: 10 }, b.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);\n  }, b.prototype.refresh = function () {\n    var b = this,\n        c = \"offset\",\n        d = 0;this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), a.isWindow(this.$scrollElement[0]) || (c = \"position\", d = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function () {\n      var b = a(this),\n          e = b.data(\"target\") || b.attr(\"href\"),\n          f = /^#./.test(e) && a(e);return f && f.length && f.is(\":visible\") && [[f[c]().top + d, e]] || null;\n    }).sort(function (a, b) {\n      return a[0] - b[0];\n    }).each(function () {\n      b.offsets.push(this[0]), b.targets.push(this[1]);\n    });\n  }, b.prototype.process = function () {\n    var a,\n        b = this.$scrollElement.scrollTop() + this.options.offset,\n        c = this.getScrollHeight(),\n        d = this.options.offset + c - this.$scrollElement.height(),\n        e = this.offsets,\n        f = this.targets,\n        g = this.activeTarget;if (this.scrollHeight != c && this.refresh(), b >= d) return g != (a = f[f.length - 1]) && this.activate(a);if (g && b < e[0]) return this.activeTarget = null, this.clear();for (a = e.length; a--;) {\n      g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a]);\n    }\n  }, b.prototype.activate = function (b) {\n    this.activeTarget = b, this.clear();var c = this.selector + '[data-target=\"' + b + '\"],' + this.selector + '[href=\"' + b + '\"]',\n        d = a(c).parents(\"li\").addClass(\"active\");\n    d.parent(\".dropdown-menu\").length && (d = d.closest(\"li.dropdown\").addClass(\"active\")), d.trigger(\"activate.bs.scrollspy\");\n  }, b.prototype.clear = function () {\n    a(this.selector).parentsUntil(this.options.target, \".active\").removeClass(\"active\");\n  };var d = a.fn.scrollspy;a.fn.scrollspy = c, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function () {\n    return a.fn.scrollspy = d, this;\n  }, a(window).on(\"load.bs.scrollspy.data-api\", function () {\n    a('[data-spy=\"scroll\"]').each(function () {\n      var b = a(this);c.call(b, b.data());\n    });\n  });\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.tab\");e || d.data(\"bs.tab\", e = new c(this)), \"string\" == typeof b && e[b]();\n    });\n  }var c = function c(b) {\n    this.element = a(b);\n  };c.VERSION = \"3.3.6\", c.TRANSITION_DURATION = 150, c.prototype.show = function () {\n    var b = this.element,\n        c = b.closest(\"ul:not(.dropdown-menu)\"),\n        d = b.data(\"target\");if (d || (d = b.attr(\"href\"), d = d && d.replace(/.*(?=#[^\\s]*$)/, \"\")), !b.parent(\"li\").hasClass(\"active\")) {\n      var e = c.find(\".active:last a\"),\n          f = a.Event(\"hide.bs.tab\", { relatedTarget: b[0] }),\n          g = a.Event(\"show.bs.tab\", { relatedTarget: e[0] });if (e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented()) {\n        var h = a(d);this.activate(b.closest(\"li\"), c), this.activate(h, h.parent(), function () {\n          e.trigger({ type: \"hidden.bs.tab\", relatedTarget: b[0] }), b.trigger({ type: \"shown.bs.tab\", relatedTarget: e[0] });\n        });\n      }\n    }\n  }, c.prototype.activate = function (b, d, e) {\n    function f() {\n      g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\", !1), b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\", !0), h ? (b[0].offsetWidth, b.addClass(\"in\")) : b.removeClass(\"fade\"), b.parent(\".dropdown-menu\").length && b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\", !0), e && e();\n    }var g = d.find(\"> .active\"),\n        h = e && a.support.transition && (g.length && g.hasClass(\"fade\") || !!d.find(\"> .fade\").length);g.length && h ? g.one(\"bsTransitionEnd\", f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(), g.removeClass(\"in\");\n  };var d = a.fn.tab;a.fn.tab = b, a.fn.tab.Constructor = c, a.fn.tab.noConflict = function () {\n    return a.fn.tab = d, this;\n  };var e = function e(c) {\n    c.preventDefault(), b.call(a(this), \"show\");\n  };a(document).on(\"click.bs.tab.data-api\", '[data-toggle=\"tab\"]', e).on(\"click.bs.tab.data-api\", '[data-toggle=\"pill\"]', e);\n}(jQuery), +function (a) {\n  \"use strict\";\n  function b(b) {\n    return this.each(function () {\n      var d = a(this),\n          e = d.data(\"bs.affix\"),\n          f = \"object\" == (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && b;e || d.data(\"bs.affix\", e = new c(this, f)), \"string\" == typeof b && e[b]();\n    });\n  }var c = function c(b, d) {\n    this.options = a.extend({}, c.DEFAULTS, d), this.$target = a(this.options.target).on(\"scroll.bs.affix.data-api\", a.proxy(this.checkPosition, this)).on(\"click.bs.affix.data-api\", a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(b), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition();\n  };c.VERSION = \"3.3.6\", c.RESET = \"affix affix-top affix-bottom\", c.DEFAULTS = { offset: 0, target: window }, c.prototype.getState = function (a, b, c, d) {\n    var e = this.$target.scrollTop(),\n        f = this.$element.offset(),\n        g = this.$target.height();if (null != c && \"top\" == this.affixed) return c > e ? \"top\" : !1;if (\"bottom\" == this.affixed) return null != c ? e + this.unpin <= f.top ? !1 : \"bottom\" : a - d >= e + g ? !1 : \"bottom\";var h = null == this.affixed,\n        i = h ? e : f.top,\n        j = h ? g : b;return null != c && c >= e ? \"top\" : null != d && i + j >= a - d ? \"bottom\" : !1;\n  }, c.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a = this.$target.scrollTop(),\n        b = this.$element.offset();return this.pinnedOffset = b.top - a;\n  }, c.prototype.checkPositionWithEventLoop = function () {\n    setTimeout(a.proxy(this.checkPosition, this), 1);\n  }, c.prototype.checkPosition = function () {\n    if (this.$element.is(\":visible\")) {\n      var b = this.$element.height(),\n          d = this.options.offset,\n          e = d.top,\n          f = d.bottom,\n          g = Math.max(a(document).height(), a(document.body).height());\"object\" != (typeof d === \"undefined\" ? \"undefined\" : _typeof(d)) && (f = e = d), \"function\" == typeof e && (e = d.top(this.$element)), \"function\" == typeof f && (f = d.bottom(this.$element));var h = this.getState(g, b, e, f);if (this.affixed != h) {\n        null != this.unpin && this.$element.css(\"top\", \"\");var i = \"affix\" + (h ? \"-\" + h : \"\"),\n            j = a.Event(i + \".bs.affix\");if (this.$element.trigger(j), j.isDefaultPrevented()) return;this.affixed = h, this.unpin = \"bottom\" == h ? this.getPinnedOffset() : null, this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\", \"affixed\") + \".bs.affix\");\n      }\"bottom\" == h && this.$element.offset({ top: g - b - f });\n    }\n  };var d = a.fn.affix;a.fn.affix = b, a.fn.affix.Constructor = c, a.fn.affix.noConflict = function () {\n    return a.fn.affix = d, this;\n  }, a(window).on(\"load\", function () {\n    a('[data-spy=\"affix\"]').each(function () {\n      var c = a(this),\n          d = c.data();d.offset = d.offset || {}, null != d.offsetBottom && (d.offset.bottom = d.offsetBottom), null != d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d);\n    });\n  });\n}(jQuery);\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#_token').getAttribute('value');\n\nnew Vue({\n\tel: '#app',\n\n\tdata: {\n\t\tmessages: {},\n\t\tnewMessage: { name: '', message: '' }\n\t},\n\n\tcomputed: {\n\t\terrors: function errors() {\n\t\t\tfor (var key in this.newMessage) {\n\t\t\t\tif (!this.newMessage[key]) return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\n\tready: function ready() {\n\t\tthis.fetchMessages();\n\t},\n\n\tmethods: {\n\t\tfetchMessages: function fetchMessages() {\n\t\t\tthis.$http.get('api/messages').then(function (messages) {\n\t\t\t\tthis.messages = messages.data;\n\t\t\t});\n\t\t},\n\n\t\tpostMessage: function postMessage(newMessage) {\n\t\t\tthis.$http.post('api/messages', newMessage).then(function (response) {\n\t\t\t\tthis.messages = response.data;\n\t\t\t});\n\t\t}\n\t}\n});\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/*!\n * vue-validator v2.0.0-beta.3\n * (c) 2016 kazuya kawaguchi\n * Released under the MIT License.\n */\n(function (global, factory) {\n  (typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.VueValidator = factory();\n})(undefined, function () {\n  'use strict';\n\n  var babelHelpers = {};\n  babelHelpers.typeof = typeof Symbol === \"function\" && _typeof(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  };\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  babelHelpers.possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  babelHelpers;\n\n  /**\n   * Utilties\n   */\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * warn\n   *\n   * @param {String} msg\n   * @param {Error} [err]\n   *\n   */\n\n  function warn(msg, err) {\n    if (window.console) {\n      console.warn('[vue-validator] ' + msg);\n      if (err) {\n        console.warn(err.stack);\n      }\n    }\n  }\n\n  /**\n   * empty\n   *\n   * @param {Array|Object} target\n   * @return {Boolean}\n   */\n\n  function empty(target) {\n    if (target === null || target === undefined) {\n      return true;\n    }\n\n    if (Array.isArray(target)) {\n      if (target.length > 0) {\n        return false;\n      }\n      if (target.length === 0) {\n        return true;\n      }\n    } else if (exports$1.Vue.util.isPlainObject(target)) {\n      for (var key in target) {\n        if (exports$1.Vue.util.hasOwn(target, key)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * each\n   *\n   * @param {Array|Object} target\n   * @param {Function} iterator\n   * @param {Object} [context]\n   */\n\n  function each(target, iterator, context) {\n    if (Array.isArray(target)) {\n      for (var i = 0; i < target.length; i++) {\n        iterator.call(context || target[i], target[i], i);\n      }\n    } else if (exports$1.Vue.util.isPlainObject(target)) {\n      var hasOwn = exports$1.Vue.util.hasOwn;\n      for (var key in target) {\n        if (hasOwn(target, key)) {\n          iterator.call(context || target[key], target[key], key);\n        }\n      }\n    }\n  }\n\n  /**\n   * pull\n   *\n   * @param {Array} arr\n   * @param {Object} item\n   * @return {Object|null}\n   */\n\n  function pull(arr, item) {\n    var index = exports$1.Vue.util.indexOf(arr, item);\n    return ~index ? arr.splice(index, 1) : null;\n  }\n\n  /**\n   * trigger\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Object} [args]\n   */\n\n  function trigger(el, event, args) {\n    var e = document.createEvent('HTMLEvents');\n    e.initEvent(event, true, false);\n\n    if (args) {\n      for (var prop in args) {\n        e[prop] = args[prop];\n      }\n    }\n\n    // Due to Firefox bug, events fired on disabled\n    // non-attached form controls can throw errors\n    try {\n      el.dispatchEvent(e);\n    } catch (e) {}\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Fundamental validate functions\n   */\n\n  /**\n   * required\n   *\n   * This function validate whether the value has been filled out.\n   *\n   * @param {*} val\n   * @return {Boolean}\n   */\n\n  function required(val) {\n    if (Array.isArray(val)) {\n      if (val.length !== 0) {\n        var valid = true;\n        for (var i = 0, l = val.length; i < l; i++) {\n          valid = required(val[i]);\n          if (!valid) {\n            break;\n          }\n        }\n        return valid;\n      } else {\n        return false;\n      }\n    } else if (typeof val === 'number' || typeof val === 'function') {\n      return true;\n    } else if (typeof val === 'boolean') {\n      return val;\n    } else if (typeof val === 'string') {\n      return val.length > 0;\n    } else if (val !== null && (typeof val === 'undefined' ? 'undefined' : babelHelpers.typeof(val)) === 'object') {\n      return Object.keys(val).length > 0;\n    } else if (val === null || val === undefined) {\n      return false;\n    }\n  }\n\n  /**\n   * pattern\n   *\n   * This function validate whether the value matches the regex pattern\n   *\n   * @param val\n   * @param {String} pat\n   * @return {Boolean}\n   */\n\n  function pattern(val, pat) {\n    if (typeof pat !== 'string') {\n      return false;\n    }\n\n    var match = pat.match(new RegExp('^/(.*?)/([gimy]*)$'));\n    if (!match) {\n      return false;\n    }\n\n    return new RegExp(match[1], match[2]).test(val);\n  }\n\n  /**\n   * minlength\n   *\n   * This function validate whether the minimum length.\n   *\n   * @param {String|Array} val\n   * @param {String|Number} min\n   * @return {Boolean}\n   */\n\n  function minlength(val, min) {\n    if (typeof val === 'string') {\n      return isInteger(min, 10) && val.length >= parseInt(min, 10);\n    } else if (Array.isArray(val)) {\n      return val.length >= parseInt(min, 10);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * maxlength\n   *\n   * This function validate whether the maximum length.\n   *\n   * @param {String|Array} val\n   * @param {String|Number} max\n   * @return {Boolean}\n   */\n\n  function maxlength(val, max) {\n    if (typeof val === 'string') {\n      return isInteger(max, 10) && val.length <= parseInt(max, 10);\n    } else if (Array.isArray(val)) {\n      return val.length <= parseInt(max, 10);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * min\n   *\n   * This function validate whether the minimum value of the numberable value.\n   *\n   * @param {*} val\n   * @param {*} arg minimum\n   * @return {Boolean}\n   */\n\n  function min(val, arg) {\n    return !isNaN(+val) && !isNaN(+arg) && +val >= +arg;\n  }\n\n  /**\n   * max\n   *\n   * This function validate whether the maximum value of the numberable value.\n   *\n   * @param {*} val\n   * @param {*} arg maximum\n   * @return {Boolean}\n   */\n\n  function max(val, arg) {\n    return !isNaN(+val) && !isNaN(+arg) && +val <= +arg;\n  }\n\n  /**\n   * isInteger\n   *\n   * This function check whether the value of the string is integer.\n   *\n   * @param {String} val\n   * @return {Boolean}\n   * @private\n   */\n\n  function isInteger(val) {\n    return (/^(-?[1-9]\\d*|0)$/.test(val)\n    );\n  }\n\n  var validators = Object.freeze({\n    required: required,\n    pattern: pattern,\n    minlength: minlength,\n    maxlength: maxlength,\n    min: min,\n    max: max\n  });\n\n  function Asset(Vue) {\n    var extend = Vue.util.extend;\n\n    // set global validators asset\n    var assets = Object.create(null);\n    extend(assets, validators);\n    Vue.options.validators = assets;\n\n    // set option merge strategy\n    var strats = Vue.config.optionMergeStrategies;\n    if (strats) {\n      strats.validators = function (parent, child) {\n        if (!child) {\n          return parent;\n        }\n        if (!parent) {\n          return child;\n        }\n        var ret = Object.create(null);\n        extend(ret, parent);\n        for (var key in child) {\n          ret[key] = child[key];\n        }\n        return ret;\n      };\n    }\n\n    /**\n     * Register or retrieve a global validator definition.\n     *\n     * @param {String} id\n     * @param {Function} definition\n     */\n\n    Vue.validator = function (id, definition) {\n      if (!definition) {\n        return Vue.options['validators'][id];\n      } else {\n        Vue.options['validators'][id] = definition;\n      }\n    };\n  }\n\n  function Override(Vue) {\n    // override _init\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if (!this._validatorMaps) {\n        this._validatorMaps = Object.create(null);\n      }\n      init.call(this, options);\n    };\n\n    // override _destroy\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      destroy.apply(this, arguments);\n      this._validatorMaps = null;\n    };\n  }\n\n  function Validate(Vue) {\n    var _ = Vue.util;\n    var vIf = Vue.directive('if');\n    var FragmentFactory = Vue.FragmentFactory;\n    var parseDirective = Vue.parsers.directive.parseDirective;\n    var REGEX_FILTER = /[^|]\\|[^|]/;\n\n    // register `v-validate` as terminal directive\n    Vue.compiler.terminalDirectives.push('validate');\n\n    /**\n     * `v-validate` directive\n     */\n\n    Vue.directive('validate', {\n      priority: vIf.priority + 1,\n\n      params: ['group', 'field', 'detect-blur', 'detect-change', 'initial'],\n\n      paramWatchers: {\n        detectBlur: function detectBlur(val, old) {\n          this.validation.detectBlur = this.isDetectBlur(val);\n          this.validator.validate(this.field);\n        },\n        detectChange: function detectChange(val, old) {\n          this.validation.detectChange = this.isDetectChange(val);\n          this.validator.validate(this.field);\n        }\n      },\n\n      bind: function bind() {\n        if (this.el.__vue__) {\n          warn('v-validate=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n          return;\n        }\n\n        var validatorName = this.vm.$options._validator;\n        if (!validatorName) {\n          warn('v-validate need to use into validator element directive: ' + '(e.g. <validator name=\"validator\">' + '<input type=\"text\" v-validate:field1=\"[\\'required\\']\">' + '</validator>).');\n          return;\n        }\n\n        var raw = this.el.getAttribute('v-model');\n\n        var _parseModelRaw = this.parseModelRaw(raw);\n\n        var model = _parseModelRaw.model;\n        var filters = _parseModelRaw.filters;\n\n        this.model = model;\n\n        this.setupFragment();\n        this.setupValidate(validatorName, model, filters);\n        this.listen();\n      },\n      update: function update(value, old) {\n        if (!value) {\n          return;\n        }\n\n        if (_.isPlainObject(value)) {\n          this.handleObject(value);\n        } else if (Array.isArray(value)) {\n          this.handleArray(value);\n        }\n\n        this.validator.validate({ field: this.field, noopable: this._initialNoopValidation });\n        if (this._initialNoopValidation) {\n          this._initialNoopValidation = null;\n        }\n      },\n      unbind: function unbind() {\n        this.unlisten();\n        this.teardownValidate();\n        this.teardownFragment();\n\n        this.model = null;\n      },\n      parseModelRaw: function parseModelRaw(raw) {\n        if (REGEX_FILTER.test(raw)) {\n          var parsed = parseDirective(raw);\n          return { model: parsed.expression, filters: parsed.filters };\n        } else {\n          return { model: raw };\n        }\n      },\n      setupValidate: function setupValidate(name, model, filters) {\n        var params = this.params;\n        var validator = this.validator = this.vm._validatorMaps[name];\n\n        this.field = _.camelize(this.arg ? this.arg : params.field);\n\n        this.validation = validator.manageValidation(this.field, model, this.vm, this.frag.node, this._scope, filters, this.isDetectBlur(params.detectBlur), this.isDetectChange(params.detectChange));\n\n        params.group && validator.addGroupValidation(params.group, this.field);\n\n        this._initialNoopValidation = this.isInitialNoopValidation(params.initial);\n      },\n      listen: function listen() {\n        var model = this.model;\n        var validation = this.validation;\n        var el = this.frag.node;\n\n        this.onBlur = _.bind(validation.listener, validation);\n        _.on(el, 'blur', this.onBlur);\n        if ((el.type === 'radio' || el.tagName === 'SELECT') && !model) {\n          this.onChange = _.bind(validation.listener, validation);\n          _.on(el, 'change', this.onChange);\n        } else if (el.type === 'checkbox') {\n          if (!model) {\n            this.onChange = _.bind(validation.listener, validation);\n            _.on(el, 'change', this.onChange);\n          } else {\n            this.onClick = _.bind(validation.listener, validation);\n            _.on(el, 'click', this.onClick);\n          }\n        } else {\n          if (!model) {\n            this.onInput = _.bind(validation.listener, validation);\n            _.on(el, 'input', this.onInput);\n          }\n        }\n      },\n      unlisten: function unlisten() {\n        var el = this.frag.node;\n\n        if (this.onInput) {\n          _.off(el, 'input', this.onInput);\n          this.onInput = null;\n        }\n\n        if (this.onClick) {\n          _.off(el, 'click', this.onClick);\n          this.onClick = null;\n        }\n\n        if (this.onChange) {\n          _.off(el, 'change', this.onChange);\n          this.onChange = null;\n        }\n\n        if (this.onBlur) {\n          _.off(el, 'blur', this.onBlur);\n          this.onBlur = null;\n        }\n      },\n      teardownValidate: function teardownValidate() {\n        if (this.validator && this.validation) {\n          var el = this.frag.node;\n\n          this.params.group && this.validator.removeGroupValidation(this.params.group, this.field);\n\n          this.validator.unmanageValidation(this.field, el);\n\n          this.validator = null;\n          this.validation = null;\n          this.field = null;\n        }\n      },\n      setupFragment: function setupFragment() {\n        this.anchor = _.createAnchor('v-validate');\n        _.replace(this.el, this.anchor);\n\n        this.factory = new FragmentFactory(this.vm, this.el);\n        this.frag = this.factory.create(this._host, this._scope, this._frag);\n        this.frag.before(this.anchor);\n      },\n      teardownFragment: function teardownFragment() {\n        if (this.frag) {\n          this.frag.remove();\n          this.frag = null;\n          this.factory = null;\n        }\n\n        _.replace(this.anchor, this.el);\n        this.anchor = null;\n      },\n      handleArray: function handleArray(value) {\n        var _this = this;\n\n        each(value, function (val) {\n          _this.validation.setValidation(val);\n        });\n      },\n      handleObject: function handleObject(value) {\n        var _this2 = this;\n\n        each(value, function (val, key) {\n          if (_.isPlainObject(val)) {\n            if ('rule' in val) {\n              var msg = 'message' in val ? val.message : null;\n              var initial = 'initial' in val ? val.initial : null;\n              _this2.validation.setValidation(key, val.rule, msg, initial);\n            }\n          } else {\n            _this2.validation.setValidation(key, val);\n          }\n        });\n      },\n      isDetectBlur: function isDetectBlur(detectBlur) {\n        return detectBlur === undefined || detectBlur === 'on' || detectBlur === true;\n      },\n      isDetectChange: function isDetectChange(detectChange) {\n        return detectChange === undefined || detectChange === 'on' || detectChange === true;\n      },\n      isInitialNoopValidation: function isInitialNoopValidation(initial) {\n        return initial === 'off' || initial === false;\n      }\n    });\n  }\n\n  /**\n   * BaseValidation class\n   */\n\n  var BaseValidation = function () {\n    function BaseValidation(field, model, vm, el, scope, validator, filters, detectBlur, detectChange) {\n      babelHelpers.classCallCheck(this, BaseValidation);\n\n      this.field = field;\n      this.touched = false;\n      this.dirty = false;\n      this.modified = false;\n\n      this._modified = false;\n      this._model = model;\n      this._filters = filters;\n      this._validator = validator;\n      this._vm = vm;\n      this._el = el;\n      this._forScope = scope;\n      this._init = this._getValue(el);\n      this._validators = {};\n      this._detectBlur = detectBlur;\n      this._detectChange = detectChange;\n    }\n\n    BaseValidation.prototype.manageElement = function manageElement(el) {\n      var _this = this;\n\n      var scope = this._getScope();\n      var model = this._model;\n      if (model) {\n        el.value = this._evalModel(model, this._filters) || '';\n        this._unwatch = scope.$watch(model, function (val, old) {\n          if (val !== old) {\n            if (_this.guardValidate(el, 'input')) {\n              return;\n            }\n            _this.handleValidate(el);\n          }\n        }, { deep: true });\n      }\n    };\n\n    BaseValidation.prototype.unmanageElement = function unmanageElement(el) {\n      this._unwatch && this._unwatch();\n    };\n\n    BaseValidation.prototype.setValidation = function setValidation(name, arg, msg, initial) {\n      var validator = this._validators[name];\n      if (!validator) {\n        validator = this._validators[name] = {};\n        validator.name = name;\n      }\n\n      validator.arg = arg;\n      if (msg) {\n        validator.msg = msg;\n      }\n\n      if (initial) {\n        validator.initial = initial;\n        validator._isNoopable = true;\n      }\n    };\n\n    BaseValidation.prototype.willUpdateFlags = function willUpdateFlags() {\n      var touched = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n      touched && this.willUpdateTouched(this._el, 'blur');\n      this.willUpdateDirty(this._el);\n      this.willUpdateModified(this._el);\n    };\n\n    BaseValidation.prototype.willUpdateTouched = function willUpdateTouched(el, type) {\n      if (type && type === 'blur') {\n        this.touched = true;\n        this._fireEvent(el, 'touched');\n      }\n    };\n\n    BaseValidation.prototype.willUpdateDirty = function willUpdateDirty(el) {\n      if (!this.dirty && this._checkModified(el)) {\n        this.dirty = true;\n        this._fireEvent(el, 'dirty');\n      }\n    };\n\n    BaseValidation.prototype.willUpdateModified = function willUpdateModified(el) {\n      this.modified = this._checkModified(el);\n      if (this._modified !== this.modified) {\n        this._fireEvent(el, 'modified', { modified: this.modified });\n        this._modified = this.modified;\n      }\n    };\n\n    BaseValidation.prototype.listener = function listener(e) {\n      if (this.guardValidate(e.target, e.type)) {\n        return;\n      }\n\n      this.handleValidate(e.target, e.type);\n    };\n\n    BaseValidation.prototype.handleValidate = function handleValidate(el, type) {\n      this.willUpdateTouched(el, type);\n      this.willUpdateDirty(el);\n      this.willUpdateModified(el);\n\n      this._validator.validate(this.field);\n    };\n\n    BaseValidation.prototype.validate = function validate(cb) {\n      var _this2 = this;\n\n      var noopable = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      var _ = exports$1.Vue.util;\n\n      var results = {};\n      var errors = [];\n      var valid = true;\n\n      this._runValidators(function (descriptor, name, done) {\n        var asset = _this2._resolveValidator(name);\n        var validator = null;\n        var msg = null;\n\n        if (_.isPlainObject(asset)) {\n          if (asset.check && typeof asset.check === 'function') {\n            validator = asset.check;\n          }\n          if (asset.message) {\n            msg = asset.message;\n          }\n        } else if (typeof asset === 'function') {\n          validator = asset;\n        }\n\n        if (descriptor.msg) {\n          msg = descriptor.msg;\n        }\n\n        if (noopable) {\n          results[name] = false;\n          return done();\n        }\n\n        if (descriptor._isNoopable) {\n          results[name] = false;\n          descriptor._isNoopable = null;\n          return done();\n        }\n\n        if (validator) {\n          var value = _this2._getValue(_this2._el);\n          _this2._invokeValidator(_this2._vm, validator, value, descriptor.arg, function (ret, err) {\n            if (!ret) {\n              valid = false;\n              if (err) {\n                // async error message\n                errors.push({ validator: name, message: err });\n                results[name] = err;\n              } else if (msg) {\n                var error = { validator: name };\n                error.message = typeof msg === 'function' ? msg.call(_this2._vm, _this2.field, descriptor.arg) : msg;\n                errors.push(error);\n                results[name] = error.message;\n              } else {\n                results[name] = !ret;\n              }\n            } else {\n              results[name] = !ret;\n            }\n\n            done();\n          });\n        } else {\n          done();\n        }\n      }, function () {\n        // finished\n        _this2._fireEvent(_this2._el, valid ? 'valid' : 'invalid');\n\n        var props = {\n          valid: valid,\n          invalid: !valid,\n          touched: _this2.touched,\n          untouched: !_this2.touched,\n          dirty: _this2.dirty,\n          pristine: !_this2.dirty,\n          modified: _this2.modified\n        };\n        if (!empty(errors)) {\n          props.errors = errors;\n        }\n        _.extend(results, props);\n\n        cb(results);\n      });\n    };\n\n    BaseValidation.prototype.resetFlags = function resetFlags() {\n      this.touched = false;\n      this.dirty = false;\n      this.modified = false;\n      this._modified = false;\n    };\n\n    BaseValidation.prototype.reset = function reset() {\n      each(this._validators, function (descriptor, key) {\n        if (descriptor.initial && !descriptor._isNoopable) {\n          descriptor._isNoopable = true;\n        }\n      });\n      this.resetFlags();\n      this._init = this._getValue(this._el);\n    };\n\n    BaseValidation.prototype.guardValidate = function guardValidate(el, type) {\n      if (type && type === 'blur' && !this.detectBlur) {\n        return true;\n      }\n\n      if (type && type === 'input' && !this.detectChange) {\n        return true;\n      }\n\n      if (type && type === 'change' && !this.detectChange) {\n        return true;\n      }\n\n      if (type && type === 'click' && !this.detectChange) {\n        return true;\n      }\n\n      return false;\n    };\n\n    BaseValidation.prototype._getValue = function _getValue(el) {\n      return el.value;\n    };\n\n    BaseValidation.prototype._getScope = function _getScope() {\n      return this._forScope || this._vm;\n    };\n\n    BaseValidation.prototype._checkModified = function _checkModified(target) {\n      return this._init !== this._getValue(target);\n    };\n\n    BaseValidation.prototype._fireEvent = function _fireEvent(el, type, args) {\n      trigger(el, type, args);\n    };\n\n    BaseValidation.prototype._evalModel = function _evalModel(model, filters) {\n      var scope = this._getScope();\n\n      if (filters) {\n        var val = scope.$get(model);\n        return filters ? this._applyFilters(val, null, filters) : val;\n      } else {\n        return scope.$get(model);\n      }\n    };\n\n    BaseValidation.prototype._applyFilters = function _applyFilters(value, oldValue, filters, write) {\n      var resolveAsset = exports$1.Vue.util.resolveAsset;\n      var scope = this._getScope();\n\n      var filter = void 0,\n          fn = void 0,\n          args = void 0,\n          arg = void 0,\n          offset = void 0,\n          i = void 0,\n          l = void 0,\n          j = void 0,\n          k = void 0;\n      for (i = 0, l = filters.length; i < l; i++) {\n        filter = filters[i];\n        fn = resolveAsset(this._vm.$options, 'filters', filter.name);\n        if (!fn) {\n          continue;\n        }\n\n        fn = write ? fn.write : fn.read || fn;\n        if (typeof fn !== 'function') {\n          continue;\n        }\n\n        args = write ? [value, oldValue] : [value];\n        offset = write ? 2 : 1;\n        if (filter.args) {\n          for (j = 0, k = filter.args.length; j < k; j++) {\n            arg = filter.args[j];\n            args[j + offset] = arg.dynamic ? scope.$get(arg.value) : arg.value;\n          }\n        }\n\n        value = fn.apply(this._vm, args);\n      }\n\n      return value;\n    };\n\n    BaseValidation.prototype._runValidators = function _runValidators(fn, cb) {\n      var validators = this._validators;\n      var length = Object.keys(validators).length;\n\n      var count = 0;\n      each(validators, function (descriptor, name) {\n        fn(descriptor, name, function () {\n          ++count;\n          count >= length && cb();\n        });\n      });\n    };\n\n    BaseValidation.prototype._invokeValidator = function _invokeValidator(vm, validator, val, arg, cb) {\n      var future = validator.call(this, val, arg);\n      if (typeof future === 'function') {\n        // function\n        if (future.resolved) {\n          // cached\n          cb(future.resolved);\n        } else if (future.requested) {\n          // pool callbacks\n          future.pendingCallbacks.push(cb);\n        } else {\n          (function () {\n            future.requested = true;\n            var cbs = future.pendingCallbacks = [cb];\n            future(function () {\n              // resolve\n              future.resolved = true;\n              for (var i = 0, l = cbs.length; i < l; i++) {\n                cbs[i](true);\n              }\n            }, function (msg) {\n              // reject\n              cb(false, msg);\n            });\n          })();\n        }\n      } else if (isPromise(future)) {\n        // promise\n        future.then(function () {\n          // resolve\n          cb(true);\n        }, function (msg) {\n          // reject\n          cb(false, msg);\n        }).catch(function (err) {\n          cb(false, err.message);\n        });\n      } else {\n        // sync\n        cb(future);\n      }\n    };\n\n    BaseValidation.prototype._resolveValidator = function _resolveValidator(name) {\n      var resolveAsset = exports$1.Vue.util.resolveAsset;\n      return resolveAsset(this._vm.$options, 'validators', name);\n    };\n\n    babelHelpers.createClass(BaseValidation, [{\n      key: 'vm',\n      get: function get() {\n        return this._vm;\n      }\n    }, {\n      key: 'el',\n      get: function get() {\n        return this._el;\n      }\n    }, {\n      key: 'detectChange',\n      get: function get() {\n        return this._detectChange;\n      },\n      set: function set(val) {\n        this._detectChange = val;\n      }\n    }, {\n      key: 'detectBlur',\n      get: function get() {\n        return this._detectBlur;\n      },\n      set: function set(val) {\n        this._detectBlur = val;\n      }\n    }]);\n    return BaseValidation;\n  }();\n\n  /**\n   * CheckboxValidation class\n   */\n\n  var CheckboxValidation = function (_BaseValidation) {\n    babelHelpers.inherits(CheckboxValidation, _BaseValidation);\n\n    function CheckboxValidation(field, model, vm, el, scope, validator, filters, detectBlur, detectChange) {\n      babelHelpers.classCallCheck(this, CheckboxValidation);\n\n      var _this = babelHelpers.possibleConstructorReturn(this, _BaseValidation.call(this, field, model, vm, el, scope, validator, filters, detectBlur, detectChange));\n\n      _this._inits = [];\n      return _this;\n    }\n\n    CheckboxValidation.prototype.manageElement = function manageElement(el) {\n      var _this2 = this;\n\n      var scope = this._getScope();\n      var item = this._addItem(el);\n      var model = item.model = this._model;\n      if (model) {\n        var value = this._evalModel(model, this._filters);\n        if (Array.isArray(value)) {\n          this._setChecked(value, item.el);\n          item.unwatch = scope.$watch(model, function (val, old) {\n            if (val !== old) {\n              if (_this2.guardValidate(item.el, 'change')) {\n                return;\n              }\n              _this2.handleValidate(item.el);\n            }\n          });\n        } else {\n          el.checked = value || false;\n          this._init = el.checked;\n          item.init = el.checked;\n          item.value = el.value;\n          item.unwatch = scope.$watch(model, function (val, old) {\n            if (val !== old) {\n              if (_this2.guardValidate(el, 'change')) {\n                return;\n              }\n              _this2.handleValidate(el);\n            }\n          });\n        }\n      } else {\n        this._validator.validate({ field: this.field });\n      }\n    };\n\n    CheckboxValidation.prototype.unmanageElement = function unmanageElement(el) {\n      var found = -1;\n      each(this._inits, function (item, index) {\n        if (item.el === el) {\n          found = index;\n          if (item.unwatch && item.model) {\n            item.unwatch();\n            item.unwatch = null;\n            item.model = null;\n          }\n        }\n      });\n      if (found === -1) {\n        return;\n      }\n\n      this._inits.splice(found, 1);\n      this._validator.validate({ field: this.field });\n    };\n\n    CheckboxValidation.prototype.willUpdateFlags = function willUpdateFlags() {\n      var _this3 = this;\n\n      each(this._inits, function (item, index) {\n        _this3.willUpdateDirty(item.el);\n        _this3.willUpdateModified(item.el);\n      });\n    };\n\n    CheckboxValidation.prototype.reset = function reset() {\n      this.resetFlags();\n      each(this._inits, function (item, index) {\n        item.init = item.el.checked;\n        item.value = item.el.value;\n      });\n    };\n\n    CheckboxValidation.prototype._addItem = function _addItem(el) {\n      var item = {\n        el: el,\n        init: el.checked,\n        value: el.value\n      };\n      this._inits.push(item);\n      return item;\n    };\n\n    CheckboxValidation.prototype._setChecked = function _setChecked(values, el) {\n      for (var i = 0, l = values.length; i < l; i++) {\n        var value = values[i];\n        if (!el.disabled && el.value === value && !el.checked) {\n          el.checked = true;\n        }\n      }\n    };\n\n    CheckboxValidation.prototype._getValue = function _getValue(el) {\n      var _this4 = this;\n\n      if (!this._inits || this._inits.length === 0) {\n        return el.checked;\n      } else {\n        var _ret = function () {\n          var vals = [];\n          each(_this4._inits, function (item, index) {\n            item.el.checked && vals.push(item.el.value);\n          });\n          return {\n            v: vals\n          };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : babelHelpers.typeof(_ret)) === \"object\") return _ret.v;\n      }\n    };\n\n    CheckboxValidation.prototype._checkModified = function _checkModified(target) {\n      var _this5 = this;\n\n      if (this._inits.length === 0) {\n        return this._init !== target.checked;\n      } else {\n        var _ret2 = function () {\n          var modified = false;\n          each(_this5._inits, function (item, index) {\n            if (!modified) {\n              modified = item.init !== item.el.checked;\n            }\n          });\n          return {\n            v: modified\n          };\n        }();\n\n        if ((typeof _ret2 === 'undefined' ? 'undefined' : babelHelpers.typeof(_ret2)) === \"object\") return _ret2.v;\n      }\n    };\n\n    return CheckboxValidation;\n  }(BaseValidation);\n\n  /**\n   * RadioValidation class\n   */\n\n  var RadioValidation = function (_BaseValidation) {\n    babelHelpers.inherits(RadioValidation, _BaseValidation);\n\n    function RadioValidation(field, model, vm, el, scope, validator, filters, detectBlur, detectChange) {\n      babelHelpers.classCallCheck(this, RadioValidation);\n\n      var _this = babelHelpers.possibleConstructorReturn(this, _BaseValidation.call(this, field, model, vm, el, scope, validator, filters, detectBlur, detectChange));\n\n      _this._inits = [];\n      return _this;\n    }\n\n    RadioValidation.prototype.manageElement = function manageElement(el) {\n      var _this2 = this;\n\n      var scope = this._getScope();\n      var item = this._addItem(el);\n      var model = item.model = this._model;\n      if (model) {\n        var value = this._evalModel(model, this._filters);\n        this._setChecked(value, el, item);\n        item.unwatch = scope.$watch(model, function (val, old) {\n          if (val !== old) {\n            if (_this2.guardValidate(item.el, 'change')) {\n              return;\n            }\n            _this2.handleValidate(el);\n          }\n        });\n      } else {\n        this._validator.validate({ field: this.field });\n      }\n    };\n\n    RadioValidation.prototype.unmanageElement = function unmanageElement(el) {\n      var found = -1;\n      each(this._inits, function (item, index) {\n        if (item.el === el) {\n          found = index;\n        }\n      });\n      if (found === -1) {\n        return;\n      }\n\n      this._inits.splice(found, 1);\n      this._validator.validate({ field: this.field });\n    };\n\n    RadioValidation.prototype.willUpdateFlags = function willUpdateFlags() {\n      var _this3 = this;\n\n      each(this._inits, function (item, index) {\n        _this3.willUpdateDirty(item.el);\n        _this3.willUpdateModified(item.el);\n      });\n    };\n\n    RadioValidation.prototype.reset = function reset() {\n      this.resetFlags();\n      each(this._inits, function (item, index) {\n        item.init = item.el.checked;\n        item.value = item.el.value;\n      });\n    };\n\n    RadioValidation.prototype._addItem = function _addItem(el) {\n      var item = {\n        el: el,\n        init: el.checked,\n        value: el.value\n      };\n      this._inits.push(item);\n      return item;\n    };\n\n    RadioValidation.prototype._setChecked = function _setChecked(value, el, item) {\n      if (el.value === value) {\n        el.checked = true;\n        this._init = el.checked;\n        item.init = el.checked;\n        item.value = value;\n      }\n    };\n\n    RadioValidation.prototype._getValue = function _getValue(el) {\n      var _this4 = this;\n\n      if (!this._inits || this._inits.length === 0) {\n        return el.checked;\n      } else {\n        var _ret = function () {\n          var vals = [];\n          each(_this4._inits, function (item, index) {\n            item.el.checked && vals.push(item.el.value);\n          });\n          return {\n            v: vals\n          };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : babelHelpers.typeof(_ret)) === \"object\") return _ret.v;\n      }\n    };\n\n    RadioValidation.prototype._checkModified = function _checkModified(target) {\n      var _this5 = this;\n\n      if (this._inits.length === 0) {\n        return this._init !== target.checked;\n      } else {\n        var _ret2 = function () {\n          var modified = false;\n          each(_this5._inits, function (item, index) {\n            if (!modified) {\n              modified = item.init !== item.el.checked;\n            }\n          });\n          return {\n            v: modified\n          };\n        }();\n\n        if ((typeof _ret2 === 'undefined' ? 'undefined' : babelHelpers.typeof(_ret2)) === \"object\") return _ret2.v;\n      }\n    };\n\n    return RadioValidation;\n  }(BaseValidation);\n\n  /**\n   * SelectValidation class\n   */\n\n  var SelectValidation = function (_BaseValidation) {\n    babelHelpers.inherits(SelectValidation, _BaseValidation);\n\n    function SelectValidation(field, model, vm, el, scope, validator, filters, detectBlur, detectChange) {\n      babelHelpers.classCallCheck(this, SelectValidation);\n\n      var _this = babelHelpers.possibleConstructorReturn(this, _BaseValidation.call(this, field, model, vm, el, scope, validator, filters, detectBlur, detectChange));\n\n      _this._multiple = _this._el.hasAttribute('multiple');\n      return _this;\n    }\n\n    SelectValidation.prototype.manageElement = function manageElement(el) {\n      var _this2 = this;\n\n      var scope = this._getScope();\n      var model = this._model;\n      if (model) {\n        var value = this._evalModel(model, this._filters);\n        var values = !Array.isArray(value) ? [value] : value;\n        this._setOption(values, el);\n        this._unwatch = scope.$watch(model, function (val, old) {\n          var values1 = !Array.isArray(val) ? [val] : val;\n          var values2 = !Array.isArray(old) ? [old] : old;\n          if (values1.slice().sort().toString() !== values2.slice().sort().toString()) {\n            if (_this2.guardValidate(el, 'change')) {\n              return;\n            }\n            _this2.handleValidate(el);\n          }\n        });\n      }\n    };\n\n    SelectValidation.prototype.unmanageElement = function unmanageElement(el) {\n      this._unwatch && this._unwatch();\n    };\n\n    SelectValidation.prototype.reset = function reset() {\n      this.resetFlags();\n    };\n\n    SelectValidation.prototype._getValue = function _getValue(el) {\n      var ret = [];\n\n      for (var i = 0, l = el.options.length; i < l; i++) {\n        var option = el.options[i];\n        if (!option.disabled && option.selected) {\n          ret.push(option.value);\n        }\n      }\n\n      return ret;\n    };\n\n    SelectValidation.prototype._setOption = function _setOption(values, el) {\n      for (var i = 0, l = values.length; i < l; i++) {\n        var value = values[i];\n        for (var j = 0, m = el.options.length; j < m; j++) {\n          var option = el.options[j];\n          if (!option.disabled && option.value === value && (!option.hasAttribute('selected') || !option.selected)) {\n            option.selected = true;\n          }\n        }\n      }\n    };\n\n    SelectValidation.prototype._checkModified = function _checkModified(target) {\n      var values = this._getValue(target).slice().sort();\n      if (this._init.length !== values.length) {\n        return true;\n      } else {\n        var inits = this._init.slice().sort();\n        return inits.toString() !== values.toString();\n      }\n    };\n\n    return SelectValidation;\n  }(BaseValidation);\n\n  var eventRE = /^v-on:|^@/;\n\n  /**\n   * Validator class\n   */\n\n  var Validator$1 = function () {\n    function Validator(name, dir, groups) {\n      var _this = this;\n\n      babelHelpers.classCallCheck(this, Validator);\n\n      this.name = name;\n\n      this._scope = {};\n      this._dir = dir;\n      this._validations = {};\n      this._checkboxValidations = {};\n      this._radioValidations = {};\n      this._groups = groups;\n      this._groupValidations = {};\n      this._events = {};\n      this._modified = false;\n\n      each(groups, function (group) {\n        _this._groupValidations[group] = [];\n      });\n    }\n\n    Validator.prototype.enableReactive = function enableReactive() {\n      var _this2 = this;\n\n      var vm = this._dir.vm;\n\n      // define the validation scope\n      exports$1.Vue.util.defineReactive(vm, this.name, this._scope);\n      vm._validatorMaps[this.name] = this;\n\n      // define the validation resetting meta method to vue instance\n      vm.$resetValidation = function (cb) {\n        _this2._resetValidation(cb);\n      };\n\n      // define the validate manually meta method to vue instance\n      vm.$validate = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var field = null;\n        var touched = false;\n        var cb = null;\n\n        each(args, function (arg, index) {\n          if (typeof arg === 'string') {\n            field = arg;\n          } else if (typeof arg === 'boolean') {\n            touched = arg;\n          } else if (typeof arg === 'function') {\n            cb = arg;\n          }\n        });\n\n        _this2.validate({ field: field, touched: touched, cb: cb });\n      };\n\n      // define manually the validation errors\n      vm.$setValidationErrors = function (errors) {\n        _this2._setValidationErrors(errors);\n      };\n    };\n\n    Validator.prototype.disableReactive = function disableReactive() {\n      var vm = this._dir.vm;\n      vm.$setValidationErrors = undefined;\n      vm.$validate = undefined;\n      vm.$validatorReset = undefined;\n      vm._validatorMaps[this.name] = null;\n      vm[this.name] = null;\n    };\n\n    Validator.prototype.registerEvents = function registerEvents() {\n      var attrs = this._dir.el.attributes;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        var event = attrs[i].name;\n        if (eventRE.test(event)) {\n          event = event.replace(eventRE, '');\n          this._events[this._getEventName(event)] = this._dir.vm.$eval(attrs[i].value, true);\n        }\n      }\n    };\n\n    Validator.prototype.unregisterEvents = function unregisterEvents() {\n      var _this3 = this;\n\n      each(this._events, function (handler, event) {\n        _this3._events[event] = null;\n        delete _this3._events[event];\n      });\n    };\n\n    Validator.prototype.manageValidation = function manageValidation(field, model, vm, el, scope, filters, detectBlur, detectChange) {\n      var validation = null;\n\n      if (el.tagName === 'SELECT') {\n        validation = this._manageSelectValidation(field, model, vm, el, scope, filters, detectBlur, detectChange);\n      } else if (el.type === 'checkbox') {\n        validation = this._manageCheckboxValidation(field, model, vm, el, scope, filters, detectBlur, detectChange);\n      } else if (el.type === 'radio') {\n        validation = this._manageRadioValidation(field, model, vm, el, scope, filters, detectBlur, detectChange);\n      } else {\n        validation = this._manageBaseValidation(field, model, vm, el, scope, filters, detectBlur, detectChange);\n      }\n\n      return validation;\n    };\n\n    Validator.prototype.unmanageValidation = function unmanageValidation(field, el) {\n      if (el.type === 'checkbox') {\n        this._unmanageCheckboxValidation(field, el);\n      } else if (el.type === 'radio') {\n        this._unmanageRadioValidation(field, el);\n      } else if (el.tagName === 'SELECT') {\n        this._unmanageSelectValidation(field, el);\n      } else {\n        this._unmanageBaseValidation(field, el);\n      }\n    };\n\n    Validator.prototype.addGroupValidation = function addGroupValidation(group, field) {\n      var indexOf = exports$1.Vue.util.indexOf;\n\n      var validation = this._validations[field] || this._checkboxValidations[field].validation || this._radioValidations[field].validation;\n      var validations = this._groupValidations[group];\n\n      validations && ! ~indexOf(validations, validation) && validations.push(validation);\n    };\n\n    Validator.prototype.removeGroupValidation = function removeGroupValidation(group, field) {\n      var validation = this._validations[field] || this._checkboxValidations[field].validation || this._radioValidations[field].validation;\n      var validations = this._groupValidations[group];\n\n      validations && pull(validations, validation);\n    };\n\n    Validator.prototype.validate = function validate() {\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$field = _ref.field;\n      var field = _ref$field === undefined ? null : _ref$field;\n      var _ref$touched = _ref.touched;\n      var touched = _ref$touched === undefined ? false : _ref$touched;\n      var _ref$noopable = _ref.noopable;\n      var noopable = _ref$noopable === undefined ? false : _ref$noopable;\n      var _ref$cb = _ref.cb;\n      var cb = _ref$cb === undefined ? null : _ref$cb;\n\n      if (!field) {\n        // all\n        each(this.validations, function (validation, key) {\n          validation.willUpdateFlags(touched);\n        });\n        this._validates(cb);\n      } else {\n        // each field\n        this._validate(field, touched, noopable, cb);\n      }\n    };\n\n    Validator.prototype.setupScope = function setupScope() {\n      var _this4 = this;\n\n      this._defineProperties(function () {\n        return _this4.validations;\n      }, function () {\n        return _this4._scope;\n      });\n\n      each(this._groups, function (name) {\n        var validations = _this4._groupValidations[name];\n        var group = {};\n        exports$1.Vue.set(_this4._scope, name, group);\n        _this4._defineProperties(function () {\n          return validations;\n        }, function () {\n          return group;\n        });\n      });\n    };\n\n    Validator.prototype.waitFor = function waitFor(cb) {\n      var method = '$activateValidator';\n      var vm = this._dir.vm;\n\n      vm[method] = function () {\n        cb();\n        vm[method] = null;\n      };\n    };\n\n    Validator.prototype._validate = function _validate(field) {\n      var touched = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      var _this5 = this;\n\n      var noopable = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n      var cb = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n      var scope = this._scope;\n\n      var validation = this._getValidationFrom(field);\n      if (validation) {\n        validation.willUpdateFlags(touched);\n        validation.validate(function (results) {\n          exports$1.Vue.set(scope, field, results);\n          _this5._fireEvents();\n          cb && cb();\n        }, noopable);\n      }\n    };\n\n    Validator.prototype._validates = function _validates(cb) {\n      var _this6 = this;\n\n      var scope = this._scope;\n\n      this._runValidates(function (validation, key, done) {\n        validation.validate(function (results) {\n          exports$1.Vue.set(scope, key, results);\n          done();\n        });\n      }, function () {\n        // finished\n        _this6._fireEvents();\n        cb && cb();\n      });\n    };\n\n    Validator.prototype._getValidationFrom = function _getValidationFrom(field) {\n      var validation = this._validations[field];\n      if (!validation && this._checkboxValidations[field]) {\n        validation = this._checkboxValidations[field].validation;\n      } else if (!validation && this._radioValidations[field]) {\n        validation = this._radioValidations[field].validation;\n      }\n      return validation;\n    };\n\n    Validator.prototype._resetValidation = function _resetValidation(cb) {\n      each(this.validations, function (validation, key) {\n        validation.reset();\n      });\n      this._validates(cb);\n    };\n\n    Validator.prototype._setValidationErrors = function _setValidationErrors(errors) {\n      var _this7 = this;\n\n      var extend = exports$1.Vue.util.extend;\n\n      // make tempolaly errors\n      var temp = {};\n      each(errors, function (error, index) {\n        if (!temp[error.field]) {\n          temp[error.field] = [];\n        }\n        temp[error.field].push(error);\n      });\n\n      // set errors\n      each(temp, function (values, field) {\n        var validation = _this7._scope[field];\n        var newValidation = {};\n        each(values, function (error) {\n          if (error.validator) {\n            validation[error.validator] = error.message;\n          }\n        });\n        validation.valid = false;\n        validation.invalid = true;\n        validation.errors = values;\n        extend(newValidation, validation);\n        exports$1.Vue.set(_this7._scope, field, newValidation);\n      });\n    };\n\n    Validator.prototype._manageBaseValidation = function _manageBaseValidation(field, model, vm, el, scope, filters, detectBlur, detectChange) {\n      var validation = this._validations[field] = new BaseValidation(field, model, vm, el, scope, this, filters, detectBlur, detectChange);\n      validation.manageElement(el);\n      return validation;\n    };\n\n    Validator.prototype._unmanageBaseValidation = function _unmanageBaseValidation(field, el) {\n      var validation = this._validations[field];\n      if (validation) {\n        validation.unmanageElement(el);\n        exports$1.Vue.delete(this._scope, field);\n        this._validations[field] = null;\n        delete this._validations[field];\n      }\n    };\n\n    Validator.prototype._manageCheckboxValidation = function _manageCheckboxValidation(field, model, vm, el, scope, filters, detectBlur, detectChange) {\n      var validationSet = this._checkboxValidations[field];\n      if (!validationSet) {\n        var validation = new CheckboxValidation(field, model, vm, el, scope, this, filters, detectBlur, detectChange);\n        validationSet = { validation: validation, elements: 0 };\n        this._checkboxValidations[field] = validationSet;\n      }\n\n      validationSet.elements++;\n      validationSet.validation.manageElement(el);\n      return validationSet.validation;\n    };\n\n    Validator.prototype._unmanageCheckboxValidation = function _unmanageCheckboxValidation(field, el) {\n      var validationSet = this._checkboxValidations[field];\n      if (validationSet) {\n        validationSet.elements--;\n        validationSet.validation.unmanageElement(el);\n        if (validationSet.elements === 0) {\n          exports$1.Vue.delete(this._scope, field);\n          this._checkboxValidations[field] = null;\n          delete this._checkboxValidations[field];\n        }\n      }\n    };\n\n    Validator.prototype._manageRadioValidation = function _manageRadioValidation(field, model, vm, el, scope, filters, detectBlur, detectChange) {\n      var validationSet = this._radioValidations[field];\n      if (!validationSet) {\n        var validation = new RadioValidation(field, model, vm, el, scope, this, filters, detectBlur, detectChange);\n        validationSet = { validation: validation, elements: 0 };\n        this._radioValidations[field] = validationSet;\n      }\n\n      validationSet.elements++;\n      validationSet.validation.manageElement(el);\n      return validationSet.validation;\n    };\n\n    Validator.prototype._unmanageRadioValidation = function _unmanageRadioValidation(field, el) {\n      var validationSet = this._radioValidations[field];\n      if (validationSet) {\n        validationSet.elements--;\n        validationSet.validation.unmanageElement(el);\n        if (validationSet.elements === 0) {\n          exports$1.Vue.delete(this._scope, field);\n          this._radioValidations[field] = null;\n          delete this._radioValidations[field];\n        }\n      }\n    };\n\n    Validator.prototype._manageSelectValidation = function _manageSelectValidation(field, model, vm, el, scope, filters, detectBlur, detectChange) {\n      var validation = this._validations[field] = new SelectValidation(field, model, vm, el, scope, this, filters, detectBlur, detectChange);\n      validation.manageElement(el);\n      return validation;\n    };\n\n    Validator.prototype._unmanageSelectValidation = function _unmanageSelectValidation(field, el) {\n      var validation = this._validations[field];\n      if (validation) {\n        validation.unmanageElement(el);\n        exports$1.Vue.delete(this._scope, field);\n        this._validations[field] = null;\n        delete this._validations[field];\n      }\n    };\n\n    Validator.prototype._fireEvent = function _fireEvent(type) {\n      var handler = this._events[this._getEventName(type)];\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      handler && handler.apply(null, args);\n    };\n\n    Validator.prototype._fireEvents = function _fireEvents() {\n      var scope = this._scope;\n\n      scope.touched && this._fireEvent('touched');\n      scope.dirty && this._fireEvent('dirty');\n\n      if (this._modified !== scope.modified) {\n        this._fireEvent('modified', scope.modified);\n        this._modified = scope.modified;\n      }\n\n      var valid = scope.valid;\n      this._fireEvent(valid ? 'valid' : 'invalid');\n    };\n\n    Validator.prototype._getEventName = function _getEventName(type) {\n      return this.name + ':' + type;\n    };\n\n    Validator.prototype._defineProperties = function _defineProperties(validationsGetter, targetGetter) {\n      var _this8 = this;\n\n      var bind = exports$1.Vue.util.bind;\n\n      each({\n        valid: { fn: this._defineValid, arg: validationsGetter },\n        invalid: { fn: this._defineInvalid, arg: targetGetter },\n        touched: { fn: this._defineTouched, arg: validationsGetter },\n        untouched: { fn: this._defineUntouched, arg: targetGetter },\n        modified: { fn: this._defineModified, arg: validationsGetter },\n        dirty: { fn: this._defineDirty, arg: validationsGetter },\n        pristine: { fn: this._definePristine, arg: targetGetter },\n        errors: { fn: this._defineErrors, arg: validationsGetter }\n      }, function (descriptor, name) {\n        Object.defineProperty(targetGetter(), name, {\n          enumerable: true,\n          configurable: true,\n          get: function get() {\n            return bind(descriptor.fn, _this8)(descriptor.arg);\n          }\n        });\n      });\n    };\n\n    Validator.prototype._runValidates = function _runValidates(fn, cb) {\n      var length = Object.keys(this.validations).length;\n\n      var count = 0;\n      each(this.validations, function (validation, key) {\n        fn(validation, key, function () {\n          ++count;\n          count >= length && cb();\n        });\n      });\n    };\n\n    Validator.prototype._walkValidations = function _walkValidations(validations, property, condition) {\n      var _this9 = this;\n\n      var hasOwn = exports$1.Vue.util.hasOwn;\n      var ret = condition;\n\n      each(validations, function (validation, key) {\n        if (ret === !condition) {\n          return;\n        }\n        if (hasOwn(_this9._scope, validation.field)) {\n          var target = _this9._scope[validation.field];\n          if (target && target[property] === !condition) {\n            ret = !condition;\n          }\n        }\n      });\n\n      return ret;\n    };\n\n    Validator.prototype._defineValid = function _defineValid(validationsGetter) {\n      return this._walkValidations(validationsGetter(), 'valid', true);\n    };\n\n    Validator.prototype._defineInvalid = function _defineInvalid(scopeGetter) {\n      return !scopeGetter().valid;\n    };\n\n    Validator.prototype._defineTouched = function _defineTouched(validationsGetter) {\n      return this._walkValidations(validationsGetter(), 'touched', false);\n    };\n\n    Validator.prototype._defineUntouched = function _defineUntouched(scopeGetter) {\n      return !scopeGetter().touched;\n    };\n\n    Validator.prototype._defineModified = function _defineModified(validationsGetter) {\n      return this._walkValidations(validationsGetter(), 'modified', false);\n    };\n\n    Validator.prototype._defineDirty = function _defineDirty(validationsGetter) {\n      return this._walkValidations(validationsGetter(), 'dirty', false);\n    };\n\n    Validator.prototype._definePristine = function _definePristine(scopeGetter) {\n      return !scopeGetter().dirty;\n    };\n\n    Validator.prototype._defineErrors = function _defineErrors(validationsGetter) {\n      var _this10 = this;\n\n      var hasOwn = exports$1.Vue.util.hasOwn;\n      var isPlainObject = exports$1.Vue.util.isPlainObject;\n      var errors = [];\n\n      each(validationsGetter(), function (validation, key) {\n        if (hasOwn(_this10._scope, validation.field)) {\n          var target = _this10._scope[validation.field];\n          if (target && !empty(target.errors)) {\n            each(target.errors, function (err, index) {\n              var error = { field: validation.field };\n              if (isPlainObject(err)) {\n                if (err.validator) {\n                  error.validator = err.validator;\n                }\n                error.message = err.message;\n              } else if (typeof err === 'string') {\n                error.message = err;\n              }\n              errors.push(error);\n            });\n          }\n        }\n      });\n\n      return empty(errors) ? undefined : errors;\n    };\n\n    babelHelpers.createClass(Validator, [{\n      key: 'validations',\n      get: function get() {\n        var extend = exports$1.Vue.util.extend;\n\n        var ret = {};\n        extend(ret, this._validations);\n\n        each(this._checkboxValidations, function (dataset, key) {\n          ret[key] = dataset.validation;\n        });\n\n        each(this._radioValidations, function (dataset, key) {\n          ret[key] = dataset.validation;\n        });\n\n        return ret;\n      }\n    }]);\n    return Validator;\n  }();\n\n  function Validator(Vue) {\n    var _ = Vue.util;\n    var FragmentFactory = Vue.FragmentFactory;\n    var parseTemplate = Vue.parsers.template.parseTemplate;\n    var vIf = Vue.directive('if');\n    var camelize = Vue.util.camelize;\n\n    /**\n     * `validator` element directive\n     */\n\n    Vue.elementDirective('validator', {\n      params: ['name', 'groups', 'lazy'],\n\n      bind: function bind() {\n        var params = this.params;\n\n        if (!params.name) {\n          warn('validator element directive need to specify \\'name\\' param attribute: ' + '(e.g. <validator name=\"validator1\">...</validator>)');\n          return;\n        }\n\n        this.validatorName = '$' + camelize(params.name);\n        if (!this.vm._validatorMaps) {\n          throw new Error('Invalid validator management error');\n        }\n\n        this.setupValidator();\n        this.setupFragment(params.lazy);\n      },\n      unbind: function unbind() {\n        this.teardownFragment();\n        this.teardownValidator();\n      },\n      getGroups: function getGroups() {\n        var params = this.params;\n        var groups = [];\n\n        if (params.groups) {\n          if (_.isArray(params.groups)) {\n            groups = params.groups;\n          } else if (!_.isPlainObject(params.groups) && typeof params.groups === 'string') {\n            groups.push(params.groups);\n          }\n        }\n\n        return groups;\n      },\n      setupValidator: function setupValidator() {\n        var validator = this.validator = new Validator$1(this.validatorName, this, this.getGroups());\n        validator.enableReactive();\n        validator.setupScope();\n        validator.registerEvents();\n      },\n      teardownValidator: function teardownValidator() {\n        this.validator.unregisterEvents();\n        this.validator.disableReactive();\n\n        if (this.validatorName) {\n          this.validatorName = null;\n          this.validator = null;\n        }\n      },\n      setupFragment: function setupFragment(lazy) {\n        var _this = this;\n\n        var vm = this.vm;\n\n        this.validator.waitFor(function () {\n          _this.anchor = _.createAnchor('vue-validator');\n          _.replace(_this.el, _this.anchor);\n          _.extend(vm.$options, { _validator: _this.validatorName });\n          _this.factory = new FragmentFactory(vm, parseTemplate(_this.el, true));\n          vIf.insert.call(_this);\n        });\n\n        !lazy && vm.$activateValidator();\n      },\n      teardownFragment: function teardownFragment() {\n        vIf.unbind.call(this);\n      }\n    });\n  }\n\n  function ValidatorError(Vue) {\n    /**\n     * ValidatorError component\n     */\n\n    var error = {\n      name: 'validator-error',\n\n      props: {\n        field: {\n          type: String,\n          required: true\n        },\n        validator: {\n          type: String\n        },\n        message: {\n          type: String,\n          required: true\n        },\n        partial: {\n          type: String,\n          default: 'validator-error-default'\n        }\n      },\n\n      template: '<div><partial :name=\"partial\"></partial></div>',\n\n      partials: {}\n    };\n\n    // only use ValidatorError component\n    error.partials['validator-error-default'] = '<p>{{field}}: {{message}}</p>';\n\n    return error;\n  }\n\n  function Errors(Vue) {\n    var _ = Vue.util;\n    var error = ValidatorError(Vue); // import ValidatorError component\n\n    /**\n     * ValidatorErrors component\n     */\n\n    var errors = {\n      name: 'validator-errors',\n\n      props: {\n        validation: {\n          type: Object,\n          required: true\n        },\n        group: {\n          type: String,\n          default: null\n        },\n        field: {\n          type: String,\n          default: null\n        },\n        component: {\n          type: String,\n          default: 'validator-error'\n        }\n      },\n\n      computed: {\n        errors: function errors() {\n          var _this = this;\n\n          if (this.group !== null) {\n            return this.validation[this.group].errors;\n          } else if (this.field !== null) {\n            var target = this.validation[this.field];\n            if (!target.errors) {\n              return;\n            }\n\n            return target.errors.map(function (error) {\n              var err = { field: _this.field };\n              if (_.isPlainObject(error)) {\n                if (error.validator) {\n                  err.validator = error.validator;\n                }\n                err.message = error.message;\n              } else if (typeof error === 'string') {\n                err.message = error;\n              }\n              return err;\n            });\n          } else {\n            return this.validation.errors;\n          }\n        }\n      },\n\n      template: '<template v-for=\"error in errors\">' + '<component :is=\"component\" :partial=\"partial\" :field=\"error.field\" :validator=\"error.validator\" :message=\"error.message\">' + '</component>' + '</template>',\n\n      components: {}\n    };\n\n    // define 'partial' prop\n    errors.props['partial'] = error.props['partial'];\n\n    // only use ValidatorErrors component\n    errors.components[error.name] = error;\n\n    // install ValidatorErrors component\n    Vue.component(errors.name, errors);\n\n    return errors;\n  }\n\n  /**\n   * plugin\n   *\n   * @param {Function} Vue\n   * @param {Object} options\n   */\n\n  function plugin(Vue) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    if (plugin.installed) {\n      warn('already installed.');\n      return;\n    }\n\n    exports$1.Vue = Vue;\n    Asset(Vue);\n    Errors(Vue);\n\n    Override(Vue);\n    Validator(Vue);\n    Validate(Vue);\n  }\n\n  plugin.version = '2.0.0-beta.3';\n\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n  }\n\n  return plugin;\n});\n\n},{}]},{},[2,1,3]);\n"],"file":"bundle.js","sourceRoot":"/source/"}